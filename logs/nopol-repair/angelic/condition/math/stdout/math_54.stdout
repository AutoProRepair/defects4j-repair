Running ant (compile) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------
    [mkdir] Created dir: /tmp/math_54/target
    [mkdir] Created dir: /tmp/math_54/target/classes
    [mkdir] Created dir: /tmp/math_54/target/test-classes
    [mkdir] Created dir: /tmp/math_54/target/classes/META-INF
     [copy] Copying 1 file to /tmp/math_54/target/classes/META-INF

compile:
    [javac] Compiling 502 source files to /tmp/math_54/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] Note: /tmp/math_54/src/main/java/org/apache/commons/math/stat/Frequency.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

BUILD SUCCESSFUL
Total time: 6 seconds
Running ant (compile.tests) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------

compile:

check-availability:
     [echo] doing check-availability...

download-dependencies:
     [echo] doing download-dependencies...

download-junit:

compile.tests:
    [javac] Compiling 303 source files to /tmp/math_54/target/test-classes
     [copy] Copying 11 files to /tmp/math_54/target/test-classes

BUILD SUCCESSFUL
Total time: 7 seconds
07:20:46.476 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Building Spoon model from src/main/java]
2015-02-28 07:20:46,794 DEBUG spoon.support.StandardEnvironment - building sources: [src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/geometry/Rotation.java, src/main/java/org/apache/commons/math/geometry/Vector3D.java, src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/IntegratorException.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/events/EventException.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/linear/AbstractRealVector.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/MathRuntimeException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java]
2015-02-28 07:20:46,933 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/geometry/Rotation.java, src/main/java/org/apache/commons/math/geometry/Vector3D.java, src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/IntegratorException.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/events/EventException.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/linear/AbstractRealVector.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/MathRuntimeException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java]
2015-02-28 07:20:53,949 DEBUG spoon.support.StandardEnvironment - built in 7149 ms
2015-02-28 07:20:53,949 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:20:53,949 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:20:56.578 [main] DEBUG f.i.lille.repair.TestClassesFinder - Test clasess:
07:20:56.578 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ConvergenceExceptionTest
07:20:56.578 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathConfigurationExceptionTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathExceptionTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.RetryRunnerTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.FunctionUtilsTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.GaussianTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.HarmonicOscillatorTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogisticTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogitTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.SigmoidTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.StepFunctionTest
07:20:56.579 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.RombergIntegratorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.SimpsonIntegratorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest
07:20:56.580 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest
07:20:56.581 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BisectionSolverTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BrentSolverTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.LaguerreSolverTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolver2Test
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolverTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.NewtonSolverTest
07:20:56.582 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.RiddersSolverTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.SecantSolverTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFieldTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFormatTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexUtilsTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.FrenchComplexFormatTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpDecTest
07:20:56.583 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpMathTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BetaDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BinomialDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.CauchyDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ChiSquareDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ExponentialDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.FDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.GammaDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.HypergeometricDistributionTest
07:20:56.584 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.NormalDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PascalDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PoissonDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.TDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.WeibullDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ZipfDistributionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.DimensionMismatchExceptionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.MathRuntimeExceptionTest
07:20:56.585 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.MaxCountExceededExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotPositiveExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooLargeExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooSmallExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.OutOfRangeExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.TooManyEvaluationsExceptionTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ArgUtilsTest
07:20:56.586 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ExceptionContextTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFieldTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFormatTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFieldTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFormatTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryChromosomeTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryMutationTest
07:20:56.587 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ChromosomeTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ElitisticListPopulationTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FitnessCachingTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FixedGenerationCountTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestBinary
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ListPopulationTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.OnePointCrossoverTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyMutationTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyTest
07:20:56.588 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.TournamentSelectionTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.FrenchVector3DFormatTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.RotationOrderTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.RotationTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.Vector3DFormatTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.Vector3DTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.AbstractRealVectorTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.Array2DRowRealMatrixTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayFieldVectorTest
07:20:56.589 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayRealVectorTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BiDiagonalTransformerTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockFieldMatrixTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockRealMatrixTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskyDecompositionImplTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskySolverTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenDecompositionImplTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenSolverTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldLUDecompositionImplTest
07:20:56.590 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldMatrixImplTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FrenchRealVectorFormatTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUDecompositionImplTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUSolverTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixUtilsTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRDecompositionImplTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRSolverTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealVectorFormatTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueDecompositionImplTest
07:20:56.591 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueSolverTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldMatrixTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldVectorTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealMatrixTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealVectorTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.TriDiagonalTransformerTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ContinuousOutputModelTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.FirstOrderConverterTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.events.EventStateTest
07:20:56.592 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerIntegratorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest
07:20:56.593 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillIntegratorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest
07:20:56.594 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.CMAESOptimizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.PowellOptimizerTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest
07:20:56.595 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.CurveFitterTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.GaussianFitterTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.HarmonicFitterTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.PolynomialFitterTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.MinpackTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexSolverTest
07:20:56.596 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexTableauTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BracketFinderTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BrentOptimizerTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.AbstractRandomGeneratorTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.EmpiricalDistributionTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.GaussianRandomGeneratorTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.MersenneTwisterTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomAdaptorTest
07:20:56.597 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomDataTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UniformRandomGeneratorTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.ValueServerTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well1024aTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937aTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937cTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497aTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497bTest
07:20:56.598 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well512aTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.BetaTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.ErfTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.GammaTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.CertifiedDataTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.FrequencyTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.StatUtilsTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.CovarianceTest
07:20:56.599 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.PearsonsCorrelationTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LewTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LotteryTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.InteractionTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.ListUnivariateImplTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest
07:20:56.600 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SummaryStatisticsTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FirstMomentTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FourthMomentTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.KurtosisTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.MeanTest
07:20:56.601 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SkewnessTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VarianceTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MaxTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MedianTest
07:20:56.602 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MinTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.PercentileTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.ProductTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumLogTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumSqTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.ChiSquareTestTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.MannWhitneyUTestTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.OneWayAnovaTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TTestTest
07:20:56.603 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TestUtilsTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.ranking.NaturalRankingTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.SimpleRegressionTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastCosineTransformerTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastFourierTransformerTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastHadamardTransformerTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastSineTransformerTest
07:20:56.604 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealFieldTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ContinuedFractionTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.DefaultTransformerTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathStrictComparisonTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTestPerformance
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.IncrementorTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MathUtilsTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MultidimensionalCounterTest
07:20:56.605 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToDoubleHashMapTest
07:20:56.606 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToFieldTest
07:20:56.606 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.PairTest
07:20:56.606 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ResizableDoubleArrayTest
07:20:56.606 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.TransformerMapTest
07:20:56.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - >>> Begin subprocess output
07:20:57.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.LaguerreSolverTest

07:20:57.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:20:57.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

07:20:57.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction

07:20:57.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

07:20:57.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction

07:20:57.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

07:20:57.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters

07:20:57.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

07:20:57.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction

07:20:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:20:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest

07:20:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:20:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

07:20:58.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane

07:20:58.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

07:20:58.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions

07:20:58.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

07:20:58.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid

07:20:58.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:20:58.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest

07:20:58.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:20:58.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization

07:20:58.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats

07:20:58.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString

07:20:58.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts

07:20:58.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions

07:20:58.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics

07:20:58.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension

07:20:58.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection

07:20:58.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState

07:20:58.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

07:20:58.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode

07:20:58.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:20:58.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well44497aTest

07:20:58.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:20:58.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497aTest)

07:20:58.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode

07:20:58.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:20:58.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.OutOfRangeExceptionTest

07:20:58.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:20:58.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.OutOfRangeExceptionTest)

07:20:58.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors

07:20:58.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:20:58.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest

07:20:58.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:20:58.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive, DisplayName: testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)

07:20:58.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive

07:20:58.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative, DisplayName: testTestNegative(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)

07:20:58.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative

07:20:58.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

07:20:58.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.FDistributionTest

07:20:58.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:20:58.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom, DisplayName: testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom

07:20:58.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions

07:20:58.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes

07:20:58.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom, DisplayName: testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom

07:20:58.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts

07:20:58.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors

07:20:58.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:20:58.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities

07:20:58.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities

07:20:58.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling

07:20:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities

07:20:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments

07:20:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.FDistributionTest)

07:20:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency

07:20:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionTest
07:20:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:20:58.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

07:20:58.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.FractionTest)

07:20:58.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue

07:20:58.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.FractionTest)

07:20:58.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs

07:20:58.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.FractionTest)

07:20:58.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd

07:20:58.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.FractionTest)

07:20:58.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract

07:20:58.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.fraction.FractionTest)

07:20:58.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString

07:20:58.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.FractionTest)

07:20:58.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal

07:20:58.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.FractionTest)

07:20:58.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor

07:20:58.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.FractionTest)

07:20:58.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction

07:20:58.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.FractionTest)

07:20:58.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble

07:20:58.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.FractionTest)

07:20:58.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo

07:20:58.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.FractionTest)

07:20:58.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor

07:20:58.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.FractionTest)

07:20:58.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue

07:20:58.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.FractionTest)

07:20:58.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor
07:20:58.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:20:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.FractionTest)

07:20:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue

07:20:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.FractionTest)

07:20:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide

07:20:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.FractionTest)

07:20:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply

07:20:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.FractionTest)

07:20:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode

07:20:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.FractionTest)

07:20:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate

07:20:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionTest)

07:20:58.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial

07:20:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.FractionTest)

07:20:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio

07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow, DisplayName: testIntegerOverflow(org.apache.commons.math.fraction.FractionTest)

07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow

07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.FractionTest)

07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue

07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.FractionTest)
07:20:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:20:58.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor

07:20:58.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
TestResult: 0

07:20:58.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest

07:20:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:20:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

07:20:58.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction

07:20:58.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

07:20:58.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction

07:20:58.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

07:20:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters

07:20:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

07:20:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction

07:20:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:20:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.FastMathTestPerformance

07:20:58.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

07:20:58.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)

07:20:58.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.util.FastMathTestPerformance)

07:20:58.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - abs        0    1.0      5 11.9566      0 0.5112

07:20:58.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs

07:20:58.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.util.FastMathTestPerformance)

07:21:00.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cos       62    1.0     66 1.0623     17 0.2859
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos

07:21:00.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.util.FastMathTestPerformance)
07:21:00.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:21:02.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - exp       78    1.0     37 0.4814     71 0.9124
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp

07:21:02.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.FastMathTestPerformance)

07:21:03.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log       94    1.0     54 0.5777      0 0.0000

07:21:03.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog

07:21:03.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.FastMathTestPerformance)

07:21:09.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - pow      297    1.0    215 0.7251    101 0.3421
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow

07:21:09.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.util.FastMathTestPerformance)

07:21:11.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sin       57    1.0     61 1.0724     19 0.3300
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin

07:21:11.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.util.FastMathTestPerformance)

07:21:13.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tan       89    1.0    121 1.3570     29 0.3323
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan

07:21:13.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTestPerformance)

07:21:17.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan2    140    1.0    143 1.0234    140 0.9985
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2

07:21:17.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1, DisplayName: testExpm1(org.apache.commons.math.util.FastMathTestPerformance)

07:21:20.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - expm1     87    1.0    110 1.2556     89 1.0258
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1

07:21:20.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot, DisplayName: testHypot(org.apache.commons.math.util.FastMathTestPerformance)

07:21:37.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - hypot    814    1.0     48 0.0602    812 0.9984
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot

07:21:37.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.util.FastMathTestPerformance)
07:21:37.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:21:40.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log10    130    1.0    157 1.2066      0 0.0000
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10

07:21:40.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p, DisplayName: testLog1p(org.apache.commons.math.util.FastMathTestPerformance)

07:21:43.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log1p     95    1.0    167 1.7444     99 1.0404
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p

07:21:43.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.util.FastMathTestPerformance)

07:21:55.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - acos     452    1.0    205 0.4544    454 1.0036
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos

07:21:55.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.util.FastMathTestPerformance)

07:22:06.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - asin     459    1.0    191 0.4182    461 1.0061
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin

07:22:06.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.util.FastMathTestPerformance)

07:22:08.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan      73    1.0     94 1.2885     75 1.0365
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan

07:22:08.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt, DisplayName: testCbrt(org.apache.commons.math.util.FastMathTestPerformance)

07:22:12.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cbrt     126    1.0    100 0.7903    128 1.0149
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt

07:22:12.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.FastMathTestPerformance)

07:22:15.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cosh     129    1.0     89 0.6875    131 1.0173
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh

07:22:15.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.FastMathTestPerformance)

07:22:19.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sinh     142    1.0    123 0.8698    144 1.0166
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh

07:22:19.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.util.FastMathTestPerformance)

07:22:20.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sqrt       1    1.0     17 10.0796      0 0.0000
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt

07:22:20.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.util.FastMathTestPerformance)

07:22:24.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tanh     149    1.0    138 0.9239    151 1.0116
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh

07:22:24.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.BrentSolverTest

07:22:24.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:24.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)

07:22:24.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints

07:22:24.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)

07:22:24.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess

07:22:24.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)

07:22:24.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints
07:22:24.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:22:24.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero

07:22:24.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)

07:22:24.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero
Number of testcases executed : 5
TestResult: 0
07:22:24.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest

07:22:24.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:24.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation, DisplayName: testWilcoxonSignedRankInputValidation(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)

07:22:24.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation

07:22:24.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple, DisplayName: testWilcoxonSignedRankSimple(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)

07:22:24.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple

07:22:24.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.OnePointCrossoverTest

07:22:24.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:24.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover, DisplayName: testCrossover(org.apache.commons.math.genetics.OnePointCrossoverTest)

07:22:24.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover

07:22:24.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.SigmoidTest

07:22:24.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:24.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative

07:22:24.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues

07:22:24.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.SigmoidTest)
07:22:24.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue

07:22:24.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4

07:22:24.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.SigmoidTest)

07:22:24.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments
Number of testcases executed : 8
TestResult: 0

07:22:24.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.BlockRealMatrixTest

07:22:24.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 48

07:22:24.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge

07:22:24.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge

07:22:24.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm
07:22:24.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate

07:22:24.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples

07:22:24.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry

07:22:24.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail

07:22:24.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge

07:22:24.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd

07:22:24.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd

07:22:24.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace

07:22:24.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm

07:22:24.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk

07:22:24.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString

07:22:24.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge

07:22:24.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge

07:22:24.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix

07:22:24.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks

07:22:24.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus

07:22:24.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector

07:22:24.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2

07:22:24.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions

07:22:24.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix

07:22:24.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge

07:22:24.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector

07:22:24.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions

07:22:24.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix

07:22:24.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209

07:22:24.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge

07:22:24.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors

07:22:24.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge

07:22:24.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn

07:22:24.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix

07:22:24.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn

07:22:24.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector

07:22:24.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply

07:22:24.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow

07:22:24.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode

07:22:24.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge

07:22:24.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial

07:22:24.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow

07:22:24.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose

07:22:24.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix

07:22:24.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply

07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix
07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 48
TestResult: 0

07:22:24.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.GaussianTest

07:22:24.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:22:24.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative

07:22:24.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN, DisplayName: testDerivativeNaN(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN

07:22:24.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues

07:22:24.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue

07:22:24.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions
07:22:24.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6

07:22:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments, DisplayName: testLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)
* Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments

07:22:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments

07:22:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.GaussianTest)

07:22:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient

07:22:24.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
07:22:24.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.TDistributionTest

07:22:25.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:25.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow, DisplayName: testCumulativeProbabilityAgaintStackOverflow(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow

07:22:25.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions
07:22:25.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts

07:22:25.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors

07:22:25.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:22:25.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf

07:22:25.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities
07:22:25.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:25.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling

07:22:25.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities

07:22:25.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments

07:22:25.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.TDistributionTest)

07:22:25.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency

07:22:25.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12

07:22:25.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.FrequencyTest

07:22:25.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:25.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable, DisplayName: testEmptyTable(org.apache.commons.math.stat.FrequencyTest)

07:22:25.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable

07:22:25.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.stat.FrequencyTest)

07:22:25.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd

07:22:25.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts, DisplayName: testPcts(org.apache.commons.math.stat.FrequencyTest)

07:22:25.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts

07:22:25.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.FrequencyTest)

07:22:25.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString

07:22:25.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount, DisplayName: testGetUniqueCount(org.apache.commons.math.stat.FrequencyTest)

07:22:25.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount

07:22:25.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues, DisplayName: testIntegerValues(org.apache.commons.math.stat.FrequencyTest)

07:22:25.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues

07:22:25.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts, DisplayName: testCounts(org.apache.commons.math.stat.FrequencyTest)

07:22:25.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts

07:22:25.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.FrequencyTest)

07:22:25.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial

07:22:25.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:22:25.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest

07:22:25.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:25.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

07:22:25.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank

07:22:25.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance, DisplayName: testMeanAndCovariance(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

07:22:25.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226, DisplayName: testMath226(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix, DisplayName: testRootMatrix(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:22:25.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest

07:22:25.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

07:22:25.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness, DisplayName: testIncreasingBandwidthIncreasesSmoothness(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine, DisplayName: testOnStraightLine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth, DisplayName: testInsufficientBandwidth(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1, DisplayName: testNotAllFiniteReal1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2, DisplayName: testNotAllFiniteReal2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3, DisplayName: testNotAllFiniteReal3(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4, DisplayName: testNotAllFiniteReal4(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4
07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5, DisplayName: testNotAllFiniteReal5(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6, DisplayName: testNotAllFiniteReal6(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints, DisplayName: testOnTwoPoints(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData, DisplayName: testEmptyData(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1, DisplayName: testNonStrictlyIncreasing1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2, DisplayName: testNonStrictlyIncreasing2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2

07:22:25.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint, DisplayName: testOnOnePoint(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint

07:22:25.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1, DisplayName: testCompletelyIncorrectBandwidth1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1

07:22:25.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2, DisplayName: testCompletelyIncorrectBandwidth2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2

07:22:25.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, DisplayName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers

07:22:25.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine, DisplayName: testOnDistortedSine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine

07:22:25.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments, DisplayName: testUnequalSizeArguments(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments

07:22:25.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights, DisplayName: testMath296withoutWeights(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

07:22:25.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights

07:22:25.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumTest

07:22:25.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:25.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues

07:22:25.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum, DisplayName: testWeightedSum(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum

07:22:25.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples

07:22:25.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization

07:22:25.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode
07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency
07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial

07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

07:22:25.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well19937cTest

07:22:25.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:25.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937cTest)
07:22:25.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode

07:22:25.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.BigFractionFieldTest

07:22:25.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:25.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.BigFractionFieldTest)

07:22:25.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne

07:22:25.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.BigFractionFieldTest)

07:22:25.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero

07:22:25.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionFieldTest)

07:22:25.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial

07:22:25.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastSineTransformerTest

07:22:25.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:25.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastSineTransformerTest)

07:22:25.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData

07:22:25.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastSineTransformerTest)

07:22:25.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters

07:22:25.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastSineTransformerTest)

07:22:25.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction

07:22:25.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest

07:22:25.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:25.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration, DisplayName: testExactIntegration(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

07:22:25.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration

07:22:25.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

07:22:25.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction

07:22:25.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

07:22:25.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction

07:22:25.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:22:25.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest

07:22:25.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:25.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

07:22:25.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters

07:22:25.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

07:22:25.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction

07:22:25.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

07:22:25.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function

07:22:25.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:22:25.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.FastMathStrictComparisonTest

07:22:25.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 53

07:22:25.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0], DisplayName: test1[0](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0]

07:22:25.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1], DisplayName: test1[1](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1]

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2], DisplayName: test1[2](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2]

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3], DisplayName: test1[3](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3]

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4], DisplayName: test1[4](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4]

07:22:25.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5], DisplayName: test1[5](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5]

07:22:25.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6], DisplayName: test1[6](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6]
07:22:25.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7], DisplayName: test1[7](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7]

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8], DisplayName: test1[8](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8]

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9], DisplayName: test1[9](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9]

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10], DisplayName: test1[10](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10]

07:22:25.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11], DisplayName: test1[11](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11]

07:22:25.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12], DisplayName: test1[12](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12]

07:22:25.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13], DisplayName: test1[13](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13]

07:22:25.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14], DisplayName: test1[14](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14]

07:22:25.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15], DisplayName: test1[15](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15]

07:22:25.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16], DisplayName: test1[16](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16]

07:22:25.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17], DisplayName: test1[17](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17]

07:22:25.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18], DisplayName: test1[18](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18]

07:22:25.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19], DisplayName: test1[19](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19]

07:22:25.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20], DisplayName: test1[20](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20]

07:22:25.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21], DisplayName: test1[21](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21]

07:22:25.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22], DisplayName: test1[22](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22]

07:22:25.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23], DisplayName: test1[23](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23]
07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24], DisplayName: test1[24](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24]
07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25], DisplayName: test1[25](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25]

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26], DisplayName: test1[26](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26]

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27], DisplayName: test1[27](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27]

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28], DisplayName: test1[28](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28]
07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29], DisplayName: test1[29](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29]
07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30], DisplayName: test1[30](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30]

07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31], DisplayName: test1[31](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31]
07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32], DisplayName: test1[32](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32]

07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33], DisplayName: test1[33](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33]
07:22:25.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34], DisplayName: test1[34](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34]

07:22:25.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35], DisplayName: test1[35](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35]
07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36], DisplayName: test1[36](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36]
07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37], DisplayName: test1[37](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37]
07:22:25.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38], DisplayName: test1[38](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38]
07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39], DisplayName: test1[39](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39]
07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40], DisplayName: test1[40](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40]
07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41], DisplayName: test1[41](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41]
07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42], DisplayName: test1[42](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42]
07:22:25.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43], DisplayName: test1[43](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43]
07:22:25.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44], DisplayName: test1[44](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:22:25.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44]
07:22:25.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45], DisplayName: test1[45](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45]

07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46], DisplayName: test1[46](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46]
07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47], DisplayName: test1[47](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47]
07:22:25.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48], DisplayName: test1[48](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48]

07:22:25.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49], DisplayName: test1[49](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49]

07:22:25.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50], DisplayName: test1[50](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50]

07:22:25.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51], DisplayName: test1[51](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51]

07:22:25.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52], DisplayName: test1[52](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:22:25.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52]

07:22:25.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 53
TestResult: 0

07:22:25.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SingularValueSolverTest

07:22:25.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:25.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.SingularValueSolverTest)

07:22:25.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve

07:22:25.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.SingularValueSolverTest)

07:22:25.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors

07:22:25.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueSolverTest)

07:22:25.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber
07:22:25.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve, DisplayName: testLeastSquareSolve(org.apache.commons.math.linear.SingularValueSolverTest)

07:22:25.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve

07:22:25.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B, DisplayName: testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)

07:22:25.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B

07:22:25.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

07:22:25.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.FrenchComplexFormatTest

07:22:25.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

07:22:25.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary

07:22:25.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat

07:22:25.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals

07:22:25.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary

07:22:25.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar

07:22:25.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber

07:22:25.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth
07:22:25.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal

07:22:25.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity

07:22:25.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar

07:22:25.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex

07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals
07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal
07:22:25.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth
07:22:25.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal

07:22:25.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary

07:22:25.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals

07:22:25.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity

07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.FrenchComplexFormatTest)

07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter
07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal

07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan

07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary

07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:22:25.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity

07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals
07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastCosineTransformerTest
07:22:25.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:22:25.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastCosineTransformerTest)

07:22:25.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData

07:22:25.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastCosineTransformerTest)

07:22:25.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters

07:22:25.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastCosineTransformerTest)

07:22:25.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction

07:22:25.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:22:25.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.RotationTest

07:22:25.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:25.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAxisAngle, DisplayName: testAxisAngle(org.apache.commons.math.geometry.RotationTest)

07:22:25.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAxisAngle

07:22:25.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorTwoPairs, DisplayName: testVectorTwoPairs(org.apache.commons.math.geometry.RotationTest)

07:22:25.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorTwoPairs

07:22:25.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.geometry.RotationTest)

07:22:25.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testCompose

07:22:25.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testIdentity, DisplayName: testIdentity(org.apache.commons.math.geometry.RotationTest)

07:22:25.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testIdentity

07:22:25.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testComposeInverse, DisplayName: testComposeInverse(org.apache.commons.math.geometry.RotationTest)

07:22:25.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testComposeInverse

07:22:25.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testApplyInverseTo, DisplayName: testApplyInverseTo(org.apache.commons.math.geometry.RotationTest)

07:22:25.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testApplyInverseTo

07:22:25.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAngles, DisplayName: testAngles(org.apache.commons.math.geometry.RotationTest)

07:22:25.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAngles

07:22:25.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorOnePair, DisplayName: testVectorOnePair(org.apache.commons.math.geometry.RotationTest)

07:22:25.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorOnePair

07:22:25.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testMatrix, DisplayName: testMatrix(org.apache.commons.math.geometry.RotationTest)

07:22:25.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testMatrix

07:22:25.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testRevert, DisplayName: testRevert(org.apache.commons.math.geometry.RotationTest)

07:22:25.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testRevert

07:22:25.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testSingularities, DisplayName: testSingularities(org.apache.commons.math.geometry.RotationTest)

07:22:25.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testSingularities

07:22:25.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testQuaternion, DisplayName: testQuaternion(org.apache.commons.math.geometry.RotationTest)

07:22:25.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testQuaternion

07:22:25.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:22:25.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.ArrayRealVectorTest
07:22:25.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:22:25.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors

07:22:25.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc

07:22:25.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors

07:22:25.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions

07:22:25.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut

07:22:25.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates
07:22:25.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:25.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions

07:22:25.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine, DisplayName: testCosine(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine

07:22:25.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1, DisplayName: testCosinePrecondition1(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1

07:22:25.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2, DisplayName: testCosinePrecondition2(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2

07:22:25.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3, DisplayName: testCosinePrecondition3(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3

07:22:25.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax

07:22:25.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayRealVectorTest)

07:22:25.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial

07:22:25.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
07:22:25.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest

07:22:25.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:25.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

07:22:25.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment

07:22:25.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:22:25.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.dfp.DfpTest

07:22:25.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

07:22:25.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.dfp.DfpTest)

07:22:26.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd

07:22:26.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor, DisplayName: testFloor(org.apache.commons.math.dfp.DfpTest)

07:22:26.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor

07:22:26.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.dfp.DfpTest)

07:22:26.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10

07:22:26.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpTest)

07:22:26.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound

07:22:26.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil, DisplayName: testCeil(org.apache.commons.math.dfp.DfpTest)

07:22:26.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil

07:22:26.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint, DisplayName: testRint(org.apache.commons.math.dfp.DfpTest)

07:22:26.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint

07:22:26.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.dfp.DfpTest)

07:22:26.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt

07:22:26.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.dfp.DfpTest)

07:22:26.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString

07:22:26.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt, DisplayName: testDivideInt(org.apache.commons.math.dfp.DfpTest)

07:22:26.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt

07:22:26.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10, DisplayName: testPower10(org.apache.commons.math.dfp.DfpTest)

07:22:26.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10

07:22:26.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign, DisplayName: testCopySign(org.apache.commons.math.dfp.DfpTest)

07:22:26.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign

07:22:26.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare, DisplayName: testCompare(org.apache.commons.math.dfp.DfpTest)

07:22:26.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare

07:22:26.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor, DisplayName: testByteConstructor(org.apache.commons.math.dfp.DfpTest)

07:22:26.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor

07:22:26.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.dfp.DfpTest)

07:22:26.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue

07:22:26.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.dfp.DfpTest)

07:22:26.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide

07:22:26.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.dfp.DfpTest)

07:22:26.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply

07:22:26.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567, DisplayName: testIssue567(org.apache.commons.math.dfp.DfpTest)

07:22:26.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : expected:<0.0> but was:<-Infinity>

07:22:26.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:494)
	at org.junit.Assert.assertEquals(Assert.java:592)
	at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBef
07:22:26.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testIssue567

07:22:26.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor, DisplayName: testIntConstructor(org.apache.commons.math.dfp.DfpTest)

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K, DisplayName: testLog10K(org.apache.commons.math.dfp.DfpTest)

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder, DisplayName: testRemainder(org.apache.commons.math.dfp.DfpTest)

07:22:26.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder

07:22:26.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K, DisplayName: testPower10K(org.apache.commons.math.dfp.DfpTest)

07:22:26.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K

07:22:26.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor, DisplayName: testLongConstructor(org.apache.commons.math.dfp.DfpTest)

07:22:26.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor

07:22:26.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpTest)

07:22:26.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter

07:22:26.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
TestResult: 1
 Run JUnit Test: org.apache.commons.math.genetics.RandomKeyTest
07:22:26.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:22:26.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation, DisplayName: testRandomPermutation(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation

07:22:26.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation, DisplayName: testInducedPermutation(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation

07:22:26.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation, DisplayName: testIdentityPermutation(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation

07:22:26.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1, DisplayName: testConstructor1(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1

07:22:26.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2, DisplayName: testConstructor2(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2

07:22:26.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation, DisplayName: testComparatorPermutation(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation

07:22:26.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode, DisplayName: testDecode(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode

07:22:26.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame

07:22:26.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr, DisplayName: testEqualRepr(org.apache.commons.math.genetics.RandomKeyTest)

07:22:26.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr

07:22:26.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest

07:22:26.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:26.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData

07:22:26.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency

07:22:26.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility

07:22:26.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero

07:22:26.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant

07:22:26.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency

07:22:26.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency

07:22:26.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

07:22:26.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly

07:22:26.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:22:26.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.data.LotteryTest

07:22:26.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:26.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LotteryTest)

07:22:26.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues

07:22:26.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:22:26.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest
07:22:26.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:22:26.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples

07:22:26.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization

07:22:26.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation

07:22:26.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency

07:22:26.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode

07:22:26.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation

07:22:26.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

07:22:26.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency

07:22:26.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

07:22:26.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.CurveFitterTest

07:22:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303, DisplayName: testMath303(org.apache.commons.math.optimization.fitting.CurveFitterTest)

07:22:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303

07:22:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304, DisplayName: testMath304(org.apache.commons.math.optimization.fitting.CurveFitterTest)

07:22:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304

07:22:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372, DisplayName: testMath372(org.apache.commons.math.optimization.fitting.CurveFitterTest)

07:22:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372

07:22:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:22:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.FirstOrderConverterTest
07:22:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:26.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)

07:22:26.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep

07:22:26.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)

07:22:26.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps

07:22:26.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)

07:22:26.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep

07:22:26.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension, DisplayName: testDoubleDimension(org.apache.commons.math.ode.FirstOrderConverterTest)

07:22:26.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension

07:22:26.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpDecTest
07:22:26.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:26.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpDecTest)

07:22:26.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound

07:22:26.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10, DisplayName: testRoundDecimal10(org.apache.commons.math.dfp.DfpDecTest)

07:22:26.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10

07:22:26.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpDecTest)

07:22:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter

07:22:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:22:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.FrenchVector3DFormatTest
07:22:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28

07:22:26.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat

07:22:26.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals

07:22:26.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenSeparator

07:22:26.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseZeroX

07:22:26.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNan

07:22:26.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc

07:22:26.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeX

07:22:26.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeY

07:22:26.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeZ

07:22:26.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeAll

07:22:26.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D

07:22:26.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenPrefix

07:22:26.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testForgottenSuffix

07:22:26.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeX

07:22:26.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeY

07:22:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNegativeZ

07:22:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace

07:22:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

07:22:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity

07:22:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.FrenchVector3DFormatTest)

07:22:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity

07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting

07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals
07:22:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals
07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testPositiveInfinity

07:22:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting

07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParseNan
07:22:26.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity

07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.FrenchVector3DFormatTest)
07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals
07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathExceptionTest
07:22:26.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:22:26.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.MathExceptionTest)

07:22:26.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization

07:22:26.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathExceptionTest)

07:22:26.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause

07:22:26.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace, DisplayName: testPrintStackTrace(org.apache.commons.math.MathExceptionTest)

07:22:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace

07:22:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathExceptionTest)

07:22:26.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor

07:22:26.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:22:26.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest

07:22:26.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:26.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation, DisplayName: testMeanAndCorrelation(org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest)

07:22:26.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation

07:22:26.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:22:26.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillIntegratorTest
07:22:26.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:26.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:26.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:26.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck

07:22:26.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:26.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward

07:22:26.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:26.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep

07:22:26.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:27.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps

07:22:27.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:27.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep

07:22:27.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:27.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative

07:22:27.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:27.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler

07:22:27.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

07:22:27.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize

07:22:27.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:22:27.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.RombergIntegratorTest
07:22:27.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:27.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

07:22:27.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters

07:22:27.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

07:22:27.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction

07:22:27.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

07:22:27.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction

07:22:27.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.MultidimensionalCounterTest

07:22:27.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:27.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency, DisplayName: testIterationConsistency(org.apache.commons.math.util.MultidimensionalCounterTest)

07:22:27.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions, DisplayName: testIteratorPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.util.MultidimensionalCounterTest)

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion, DisplayName: testMulti2UniConversion(org.apache.commons.math.util.MultidimensionalCounterTest)

07:22:27.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion

07:22:27.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)

07:22:27.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions
07:22:27.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexFieldTest
07:22:27.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:27.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.complex.ComplexFieldTest)

07:22:27.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne

07:22:27.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.complex.ComplexFieldTest)

07:22:27.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero

07:22:27.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexFieldTest)

07:22:27.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial

07:22:27.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:22:27.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest

07:22:27.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:27.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D, DisplayName: testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)

07:22:27.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D

07:22:27.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D, DisplayName: testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)

07:22:27.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D

07:22:27.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

07:22:27.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.DefaultTransformerTest

07:22:27.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:22:27.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble, DisplayName: testTransformDouble(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble

07:22:27.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal, DisplayName: testTransformBigDecimal(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal

07:22:27.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject, DisplayName: testTransformObject(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject
07:22:27.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString, DisplayName: testTransformString(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger, DisplayName: testTransformInteger(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull, DisplayName: testTransformNull(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull

07:22:27.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.DefaultTransformerTest)

07:22:27.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial

07:22:27.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
07:22:27.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.function.LogitTest

07:22:27.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:22:27.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative

07:22:27.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues

07:22:27.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue

07:22:27.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4

07:22:27.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5

07:22:27.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6

07:22:27.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments

07:22:27.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction, DisplayName: testDerivativeWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction

07:22:27.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction, DisplayName: testValueWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)

07:22:27.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction

07:22:27.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

07:22:27.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NotPositiveExceptionTest

07:22:27.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:27.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotPositiveExceptionTest)

07:22:27.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors

07:22:27.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
07:22:27.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest

07:22:27.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:27.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

07:22:27.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic

07:22:27.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

07:22:27.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats

07:22:27.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

07:22:27.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch
07:22:27.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

07:22:27.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial

07:22:27.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:22:27.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumSqTest

07:22:27.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:22:27.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues

07:22:27.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples

07:22:27.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization

07:22:27.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency
07:22:27.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial

07:22:27.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy

07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation

07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency
07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexUtilsTest
07:22:27.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:22:27.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf, DisplayName: testPolar2ComplexInf(org.apache.commons.math.complex.ComplexUtilsTest)

07:22:27.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf

07:22:27.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN, DisplayName: testPolar2ComplexNaN(org.apache.commons.math.complex.ComplexUtilsTest)

07:22:27.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN

07:22:27.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus, DisplayName: testPolar2ComplexIllegalModulus(org.apache.commons.math.complex.ComplexUtilsTest)

07:22:27.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus

07:22:27.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex, DisplayName: testPolar2Complex(org.apache.commons.math.complex.ComplexUtilsTest)

07:22:27.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex

07:22:27.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:22:27.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest
07:22:27.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:22:27.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison, DisplayName: testfirstDerivativeComparison(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison

07:22:27.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic

07:22:27.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication, DisplayName: testMultiplication(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication

07:22:27.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition, DisplayName: testAddition(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic, DisplayName: testQuintic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341, DisplayName: testMath341(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341

07:22:27.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear, DisplayName: testLinear(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear

07:22:27.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial

07:22:27.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString, DisplayName: testString(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString

07:22:27.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction, DisplayName: testSubtraction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

07:22:27.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction

07:22:27.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

07:22:27.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SparseRealVectorTest

07:22:27.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:22:27.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc

07:22:27.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors

07:22:27.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions

07:22:27.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut

07:22:27.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates

07:22:27.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions

07:22:27.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealVectorTest)

07:22:27.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial

07:22:27.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:22:27.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.special.ErfTest
07:22:27.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:22:27.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.special.ErfTest)

07:22:27.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues

07:22:27.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960, DisplayName: testErf1960(org.apache.commons.math.special.ErfTest)

07:22:27.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960

07:22:27.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576, DisplayName: testErf2576(org.apache.commons.math.special.ErfTest)

07:22:27.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576

07:22:27.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807, DisplayName: testErf2807(org.apache.commons.math.special.ErfTest)

07:22:27.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807

07:22:27.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291, DisplayName: testErf3291(org.apache.commons.math.special.ErfTest)

07:22:27.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291
07:22:27.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu, DisplayName: testErfcGnu(org.apache.commons.math.special.ErfTest)

07:22:27.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu

07:22:27.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple, DisplayName: testErfcMaple(org.apache.commons.math.special.ErfTest)

07:22:27.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple

07:22:27.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0, DisplayName: testErf0(org.apache.commons.math.special.ErfTest)

07:22:27.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0

07:22:27.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu, DisplayName: testErfGnu(org.apache.commons.math.special.ErfTest)

07:22:27.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu

07:22:27.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
07:22:27.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.SparseFieldMatrixTest

07:22:27.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24

07:22:27.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate

07:22:27.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples

07:22:27.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry

07:22:27.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail

07:22:27.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd

07:22:27.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd

07:22:27.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace
07:22:27.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus

07:22:27.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2

07:22:27.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions

07:22:27.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix

07:22:27.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector

07:22:27.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions

07:22:27.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209

07:22:27.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors

07:22:27.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix

07:22:27.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector

07:22:27.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply

07:22:27.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode

07:22:27.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose

07:22:27.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply

07:22:27.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix

07:22:27.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix

07:22:27.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

07:22:27.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector

07:22:27.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
TestResult: 0
07:22:27.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.fraction.FractionFormatTest

07:22:27.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18

07:22:27.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat

07:22:27.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative

07:22:27.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat

07:22:27.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper

07:22:27.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper

07:22:27.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative

07:22:27.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse

07:22:27.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat

07:22:27.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero

07:22:27.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative

07:22:27.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator

07:22:27.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat

07:22:27.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus

07:22:27.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger

07:22:27.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid

07:22:27.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:22:27.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat
07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.FractionFormatTest)

07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat

07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.FractionFormatTest)
07:22:27.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative
07:22:27.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
07:22:27.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:22:27.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest

07:22:27.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:27.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

07:22:27.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean

07:22:27.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

07:22:27.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats

07:22:27.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

07:22:27.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions
07:22:27.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

07:22:27.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis

07:22:27.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:22:27.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.BetaTest

07:22:27.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

07:22:27.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive, DisplayName: testRegularizedBetaPositiveNanPositive(org.apache.commons.math.special.BetaTest)

07:22:27.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive

07:22:27.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive, DisplayName: testRegularizedBetaPositivePositivePositive(org.apache.commons.math.special.BetaTest)

07:22:27.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative, DisplayName: testRegularizedBetaPositivePositiveNegative(org.apache.commons.math.special.BetaTest)

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive, DisplayName: testRegularizedBetaPositiveZeroPositive(org.apache.commons.math.special.BetaTest)

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive, DisplayName: testLogBetaPositivePositive(org.apache.commons.math.special.BetaTest)

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive

07:22:27.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative, DisplayName: testLogBetaPositiveNegative(org.apache.commons.math.special.BetaTest)

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan, DisplayName: testLogBetaPositiveNan(org.apache.commons.math.special.BetaTest)

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive, DisplayName: testRegularizedBetaNegativePositivePositive(org.apache.commons.math.special.BetaTest)

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive

07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan, DisplayName: testRegularizedBetaPositivePositiveNan(org.apache.commons.math.special.BetaTest)
07:22:27.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive, DisplayName: testLogBetaZeroPositive(org.apache.commons.math.special.BetaTest)

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero, DisplayName: testRegularizedBetaPositivePositiveZero(org.apache.commons.math.special.BetaTest)

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive, DisplayName: testRegularizedBetaPositiveNegativePositive(org.apache.commons.math.special.BetaTest)

07:22:27.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive, DisplayName: testLogBetaNanPositive(org.apache.commons.math.special.BetaTest)

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive, DisplayName: testLogBetaNegativePositive(org.apache.commons.math.special.BetaTest)

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero, DisplayName: testLogBetaPositiveZero(org.apache.commons.math.special.BetaTest)

07:22:27.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero

07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive, DisplayName: testRegularizedBetaZeroPositivePositive(org.apache.commons.math.special.BetaTest)

07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive

07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive, DisplayName: testRegularizedBetaNanPositivePositive(org.apache.commons.math.special.BetaTest)

07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive

07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
07:22:27.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest

07:22:27.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:27.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest)
07:22:27.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting

07:22:27.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:22:27.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest

07:22:27.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:22:27.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot, DisplayName: testSolveNoRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot
07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin, DisplayName: testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin

07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction, DisplayName: testNullFunction(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction

07:22:27.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin, DisplayName: testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin

07:22:27.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy, DisplayName: testSolveBadAccuracy(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy

07:22:27.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull, DisplayName: testSolveNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin, DisplayName: testBracketSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial, DisplayName: testBadInitial(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations, DisplayName: testBadMaximumIterations(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot, DisplayName: testBracketEndpointRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot

07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull, DisplayName: testSolveAccuracyNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull

07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints, DisplayName: testSolveBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints

07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.LUSolverTest
07:22:27.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:22:27.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.LUSolverTest)

07:22:27.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve

07:22:27.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold, DisplayName: testThreshold(org.apache.commons.math.linear.LUSolverTest)

07:22:27.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold

07:22:27.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.LUSolverTest)

07:22:27.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant

07:22:27.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.LUSolverTest)

07:22:27.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors
07:22:27.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors, DisplayName: testSolveSingularityErrors(org.apache.commons.math.linear.LUSolverTest)

07:22:27.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors

07:22:27.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUSolverTest)

07:22:27.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular

07:22:27.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

07:22:27.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.CholeskySolverTest

07:22:27.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:27.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.CholeskySolverTest)

07:22:27.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve

07:22:27.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.CholeskySolverTest)

07:22:27.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant

07:22:27.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.CholeskySolverTest)

07:22:27.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors

07:22:27.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:22:27.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.SecantSolverTest

07:22:27.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:27.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)

07:22:27.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints

07:22:27.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)

07:22:27.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints

07:22:27.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)

07:22:27.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero

07:22:27.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)

07:22:27.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero

07:22:27.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexTest

07:22:27.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 98

07:22:27.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf, DisplayName: testNthRoot_cornercase_NAN_Inf(org.apache.commons.math.complex.ComplexTest)

07:22:27.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf

07:22:27.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf, DisplayName: testTanhInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf

07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN, DisplayName: testTanhNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN

07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN, DisplayName: testConjugateNaN(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN
07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf, DisplayName: testScalarMultiplyInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf

07:22:27.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN, DisplayName: testScalarMultiplyNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN

07:22:27.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary, DisplayName: testDivideImaginary(org.apache.commons.math.complex.ComplexTest)

07:22:27.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary

07:22:27.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf, DisplayName: testAcosInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN, DisplayName: testAcosNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass, DisplayName: testEqualsClass(org.apache.commons.math.complex.ComplexTest)

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInfinite, DisplayName: testAddInfinite(org.apache.commons.math.complex.ComplexTest)

07:22:27.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInfinite

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.complex.ComplexTest)

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.complex.ComplexTest)

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.complex.ComplexTest)

07:22:27.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos

07:22:27.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.complex.ComplexTest)

07:22:27.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp

07:22:27.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.complex.ComplexTest)

07:22:27.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.complex.ComplexTest)

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.complex.ComplexTest)

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.complex.ComplexTest)

07:22:27.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.complex.ComplexTest)

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf, DisplayName: testDivideNaNInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.complex.ComplexTest)

07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos
07:22:27.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.complex.ComplexTest)

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.complex.ComplexTest)

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.complex.ComplexTest)

07:22:27.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.complex.ComplexTest)

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.complex.ComplexTest)

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf, DisplayName: testAsinInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN, DisplayName: testAsinNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf, DisplayName: testAtanInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN, DisplayName: testAtanNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN

07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN, DisplayName: testDivideNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN

07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference, DisplayName: testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)
07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference
07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN, DisplayName: testNegateNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN
07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical, DisplayName: testTanhCritical(org.apache.commons.math.complex.ComplexTest)
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero, DisplayName: testPowZero(org.apache.commons.math.complex.ComplexTest)
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero

07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply, DisplayName: testScalarMultiply(org.apache.commons.math.complex.ComplexTest)
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero, DisplayName: testSqrtImaginaryZero(org.apache.commons.math.complex.ComplexTest)
07:22:27.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero

07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive, DisplayName: testSqrtRealPositive(org.apache.commons.math.complex.ComplexTest)
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull, DisplayName: testEqualsNull(org.apache.commons.math.complex.ComplexTest)
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame, DisplayName: testEqualsSame(org.apache.commons.math.complex.ComplexTest)
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame
07:22:27.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue, DisplayName: testEqualsTrue(org.apache.commons.math.complex.ComplexTest)
07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue

07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN, DisplayName: testSqrt1zNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN

07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative, DisplayName: testSqrtRealNegative(org.apache.commons.math.complex.ComplexTest)
07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative
07:22:27.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument, DisplayName: testGetArgument(org.apache.commons.math.complex.ComplexTest)
07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument

07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar, DisplayName: testSqrtPolar(org.apache.commons.math.complex.ComplexTest)
07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar
07:22:27.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN, DisplayName: testMultiplyNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero, DisplayName: testLogZero(org.apache.commons.math.complex.ComplexTest)
07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate, DisplayName: testConjugate(org.apache.commons.math.complex.ComplexTest)
07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate

07:22:27.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot, DisplayName: testNthRoot_normal_fourthRoot(org.apache.commons.math.complex.ComplexTest)
07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot

07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf, DisplayName: testMultiplyNaNInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf

07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference, DisplayName: testEqualsImaginaryDifference(org.apache.commons.math.complex.ComplexTest)
07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference
07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical, DisplayName: testTanCritical(org.apache.commons.math.complex.ComplexTest)
07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase, DisplayName: testPowNaNBase(org.apache.commons.math.complex.ComplexTest)
07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase
07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221, DisplayName: testMath221(org.apache.commons.math.complex.ComplexTest)
07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, DisplayName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math.complex.ComplexTest)
07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty

07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf, DisplayName: testGetArgumentInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf

07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN, DisplayName: testGetArgumentNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN
07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN, DisplayName: testConstructorNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN
07:22:27.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf, DisplayName: testCoshInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf

07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN
07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent, DisplayName: testPowNaNExponent(org.apache.commons.math.complex.ComplexTest)
07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode, DisplayName: testHashCode(org.apache.commons.math.complex.ComplexTest)

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero, DisplayName: testSqrtRealZero(org.apache.commons.math.complex.ComplexTest)

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative, DisplayName: testSqrtImaginaryNegative(org.apache.commons.math.complex.ComplexTest)

07:22:27.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero, DisplayName: testNthRoot_cornercase_thirdRoot_realPartZero(org.apache.commons.math.complex.ComplexTest)

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN, DisplayName: testAbsNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN, DisplayName: testAddNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN

07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf, DisplayName: testCosInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf

07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN, DisplayName: testCosNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN
07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.complex.ComplexTest)
07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide

07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf, DisplayName: testExpInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf

07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN, DisplayName: testExpNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN
07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.complex.ComplexTest)
07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply
07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal, DisplayName: testDivideReal(org.apache.commons.math.complex.ComplexTest)

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero, DisplayName: testDivideZero(org.apache.commons.math.complex.ComplexTest)

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN, DisplayName: testEqualsNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN
07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf, DisplayName: testLogInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN, DisplayName: testLogNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInfinite, DisplayName: testDivideInfinite(org.apache.commons.math.complex.ComplexTest)

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInfinite

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.complex.ComplexTest)

07:22:27.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf, DisplayName: testPowInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf
07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite, DisplayName: testConjugateInfiinite(org.apache.commons.math.complex.ComplexTest)
07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf, DisplayName: testSinhInf(org.apache.commons.math.complex.ComplexTest)
07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf

07:22:27.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.complex.ComplexTest)
07:22:27.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN

07:22:27.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexTest)
07:22:27.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial
07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf, DisplayName: testSinInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf

07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN, DisplayName: testSinNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z, DisplayName: testSqrt1z(org.apache.commons.math.complex.ComplexTest)

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf, DisplayName: testTanInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN, DisplayName: testTanNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot, DisplayName: testNthRoot_normal_thirdRoot(org.apache.commons.math.complex.ComplexTest)

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull, DisplayName: testpowNull(org.apache.commons.math.complex.ComplexTest)

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN, DisplayName: testSubtractNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite, DisplayName: testAbsInfinite(org.apache.commons.math.complex.ComplexTest)

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf, DisplayName: testSqrtInf(org.apache.commons.math.complex.ComplexTest)

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN, DisplayName: testSqrtNaN(org.apache.commons.math.complex.ComplexTest)

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN

07:22:27.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.complex.ComplexTest)

07:22:27.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor

07:22:27.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 98

07:22:27.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.PairTest

07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.PairTest)
07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor
07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals, DisplayName: testEquals(org.apache.commons.math.util.PairTest)

07:22:27.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals

07:22:27.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
07:22:27.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest

07:22:27.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:22:27.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:27.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial

07:22:27.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:27.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck
07:22:27.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:27.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:27.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep

07:22:27.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:27.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations

07:22:27.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:28.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance

07:22:28.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

07:22:28.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward

07:22:28.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

07:22:28.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.dfp.DfpMathTest

07:22:28.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:28.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.dfp.DfpMathTest)

07:22:28.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow

07:22:28.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.dfp.DfpMathTest)

07:22:28.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin

07:22:28.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MinTest

07:22:28.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:28.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs

07:22:28.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues

07:22:28.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MinTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples
07:22:28.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency

07:22:28.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode
07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency
07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

07:22:28.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency

07:22:28.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
07:22:28.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.genetics.BinaryChromosomeTest

07:22:28.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:28.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor, DisplayName: testInvalidConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)

07:22:28.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor

07:22:28.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.BinaryChromosomeTest)

07:22:28.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame

07:22:28.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor, DisplayName: testRandomConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)

07:22:28.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor

07:22:28.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
07:22:28.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.special.GammaTest

07:22:28.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:22:28.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma, DisplayName: testTrigamma(org.apache.commons.math.special.GammaTest)

07:22:28.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive, DisplayName: testLogGammaPositive(org.apache.commons.math.special.GammaTest)

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative, DisplayName: testLogGammaNegative(org.apache.commons.math.special.GammaTest)

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive, DisplayName: testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)

07:22:28.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative, DisplayName: testRegularizedGammaPositiveNegative(org.apache.commons.math.special.GammaTest)

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan, DisplayName: testLogGammaNan(org.apache.commons.math.special.GammaTest)

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs, DisplayName: testDigammaLargeArgs(org.apache.commons.math.special.GammaTest)

07:22:28.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive, DisplayName: testRegularizedGammaNanPositive(org.apache.commons.math.special.GammaTest)

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive, DisplayName: testRegularizedGammaZeroPositive(org.apache.commons.math.special.GammaTest)

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero, DisplayName: testLogGammaZero(org.apache.commons.math.special.GammaTest)

07:22:28.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero

07:22:28.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs, DisplayName: testDigammaSmallArgs(org.apache.commons.math.special.GammaTest)

07:22:28.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive, DisplayName: testRegularizedGammaNegativePositive(org.apache.commons.math.special.GammaTest)

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan, DisplayName: testRegularizedGammaPositiveNan(org.apache.commons.math.special.GammaTest)

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero, DisplayName: testRegularizedGammaPositiveZero(org.apache.commons.math.special.GammaTest)

07:22:28.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero

07:22:28.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
07:22:28.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.genetics.ChromosomeTest

07:22:28.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:28.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome, DisplayName: testFindSameChromosome(org.apache.commons.math.genetics.ChromosomeTest)
07:22:28.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome

07:22:28.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.genetics.ChromosomeTest)

07:22:28.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo

07:22:28.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
07:22:28.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest

07:22:28.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:28.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds, DisplayName: interpolationAtBounds(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

07:22:28.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds

07:22:28.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

07:22:28.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency

07:22:28.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside, DisplayName: interpolationInside(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

07:22:28.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside

07:22:28.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

07:22:28.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization

07:22:28.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset, DisplayName: noReset(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

07:22:28.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset

07:22:28.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

07:22:28.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.ResizableDoubleArrayTest

07:22:28.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:22:28.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements, DisplayName: testAddElements(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements
07:22:28.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000, DisplayName: testAdd1000(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000

07:22:28.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute, DisplayName: testSubstitute(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute

07:22:28.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors

07:22:28.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling, DisplayName: testAddElementRolling(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling

07:22:28.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor, DisplayName: testWithInitialCapacityAndExpansionFactor(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor

07:22:28.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements, DisplayName: testSetNumberOfElements(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements

07:22:28.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity, DisplayName: testWithInitialCapacity(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity

07:22:28.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard, DisplayName: testDiscard(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard

07:22:28.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode

07:22:28.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators, DisplayName: testMutators(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators
07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion, DisplayName: testSetElementArbitraryExpansion(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion

07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues
07:22:28.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.util.ResizableDoubleArrayTest)

07:22:28.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax

07:22:28.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

07:22:28.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.FunctionUtilsTest

07:22:28.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:22:28.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector, DisplayName: testCollector(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector

07:22:28.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments, DisplayName: testFixingArguments(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments

07:22:28.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd

07:22:28.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc, DisplayName: testSinc(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc

07:22:28.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine, DisplayName: testCombine(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine

07:22:28.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose

07:22:28.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.analysis.FunctionUtilsTest)

07:22:28.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply

07:22:28.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
07:22:28.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest

07:22:28.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:28.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest)

07:22:28.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors

07:22:28.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:22:28.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.ContinuedFractionTest

07:22:28.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:28.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.util.ContinuedFractionTest)

07:22:28.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio

07:22:28.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:22:28.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.IncrementorTest

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount, DisplayName: testAboveMaxCount(org.apache.commons.math.util.IncrementorTest)

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount, DisplayName: testBelowMaxCount(org.apache.commons.math.util.IncrementorTest)

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount

07:22:28.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.IncrementorTest)

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset, DisplayName: testReset(org.apache.commons.math.util.IncrementorTest)
07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement, DisplayName: testBulkIncrement(org.apache.commons.math.util.IncrementorTest)
07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement

07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest
07:22:28.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:22:28.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

07:22:28.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency

07:22:28.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

07:22:28.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone

07:22:28.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

07:22:28.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization

07:22:28.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.BisectionSolverTest
07:22:28.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:28.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369, DisplayName: testMath369(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

07:22:28.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369

07:22:28.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

07:22:28.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero

07:22:28.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

07:22:28.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero

07:22:28.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.BigFractionTest
07:22:28.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24

07:22:28.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue

07:22:28.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs
07:22:28.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd

07:22:28.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow

07:22:28.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract

07:22:28.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal

07:22:28.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor

07:22:28.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction

07:22:28.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble

07:22:28.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo

07:22:28.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor
07:22:28.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue
07:22:28.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340, DisplayName: testMath340(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340
07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue
07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor
07:22:28.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue

07:22:28.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide
07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply
07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode
07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate
07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionTest)
07:22:28.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial
07:22:28.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio
07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue
07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.BigFractionTest)

07:22:28.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor

07:22:28.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
TestResult: 0
07:22:28.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.inference.TestUtilsTest

07:22:28.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:22:28.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest

07:22:28.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence

07:22:28.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount

07:22:28.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples

07:22:28.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic

07:22:28.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic

07:22:28.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare

07:22:28.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT

07:22:28.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired

07:22:28.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic

07:22:28.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils, DisplayName: testOneWayAnovaUtils(org.apache.commons.math.stat.inference.TestUtilsTest)

07:22:28.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils

07:22:28.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
07:22:28.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.BetaDistributionTest

07:22:28.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:28.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BetaDistributionTest)

07:22:28.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts

07:22:28.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative, DisplayName: testCumulative(org.apache.commons.math.distribution.BetaDistributionTest)

07:22:28.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative

07:22:28.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.BetaDistributionTest)

07:22:28.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity

07:22:28.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:22:28.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations

07:22:28.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:28.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations)
07:22:28.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test

07:22:28.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:22:28.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.TournamentSelectionTest

07:22:28.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:28.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect, DisplayName: testSelect(org.apache.commons.math.genetics.TournamentSelectionTest)

07:22:28.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect

07:22:28.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:22:28.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest
07:22:28.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:28.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:28.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep, DisplayName: testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep

07:22:28.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck

07:22:28.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward

07:22:28.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps

07:22:28.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep

07:22:28.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents

07:22:28.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler

07:22:28.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

07:22:28.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance

07:22:28.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest
07:22:28.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

07:22:29.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency

07:22:29.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes, DisplayName: testInconsistentSizes(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes

07:22:29.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations

07:22:29.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial

07:22:29.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets

07:22:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple

07:22:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

07:22:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned

07:22:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation

07:22:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible

07:22:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations

07:22:29.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting

07:22:29.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet

07:22:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations, DisplayName: testMaxEvaluations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations

07:22:29.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

07:22:29.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit

07:22:29.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.Array2DRowRealMatrixTest
07:22:29.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 39

07:22:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm

07:22:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate
07:22:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples

07:22:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry

07:22:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail

07:22:29.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd

07:22:29.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd

07:22:29.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower

07:22:29.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace

07:22:29.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm

07:22:29.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk

07:22:29.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString

07:22:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix

07:22:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus

07:22:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector
07:22:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2

07:22:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions

07:22:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix

07:22:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector
07:22:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions

07:22:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix

07:22:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209

07:22:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors

07:22:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn
07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector
07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply
07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow
07:22:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode

07:22:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial
07:22:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow
07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose
07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix
07:22:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply
07:22:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix
07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector
07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix
07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector
07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 39
07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:22:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest

07:22:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:22:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)

07:22:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin

07:22:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction, DisplayName: testBadFunction(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)

07:22:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction

07:22:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)

07:22:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin

07:22:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.univariate.BracketFinderTest

07:22:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary, DisplayName: testMinimumIsOnIntervalBoundary(org.apache.commons.math.optimization.univariate.BracketFinderTest)

07:22:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary

07:22:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax, DisplayName: testCubicMax(org.apache.commons.math.optimization.univariate.BracketFinderTest)

07:22:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax

07:22:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin, DisplayName: testCubicMin(org.apache.commons.math.optimization.univariate.BracketFinderTest)

07:22:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin

07:22:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering, DisplayName: testIntervalBoundsOrdering(org.apache.commons.math.optimization.univariate.BracketFinderTest)

07:22:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering

07:22:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:22:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well1024aTest

07:22:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:22:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloat, DisplayName: testFloat(org.apache.commons.math.random.Well1024aTest)

07:22:29.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloat

07:22:29.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testGaussian, DisplayName: testGaussian(org.apache.commons.math.random.Well1024aTest)

07:22:29.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testGaussian

07:22:29.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well1024aTest)

07:22:29.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode

07:22:29.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDouble, DisplayName: testDouble(org.apache.commons.math.random.Well1024aTest)

07:22:29.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDouble

07:22:29.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well1024aTest)

07:22:29.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt

07:22:29.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean, DisplayName: testNexBoolean(org.apache.commons.math.random.Well1024aTest)

07:22:29.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean

07:22:29.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well1024aTest)

07:22:29.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg

07:22:29.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well1024aTest)

07:22:29.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes

07:22:29.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntN, DisplayName: testNextIntN(org.apache.commons.math.random.Well1024aTest)

07:22:29.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntN

07:22:29.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well1024aTest)

07:22:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong

07:22:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:22:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.RetryRunnerTest

07:22:29.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:29.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes, DisplayName: testRetryFailSometimes(org.apache.commons.math.RetryRunnerTest)

07:22:29.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes

07:22:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways, DisplayName: testRetryFailAlways(org.apache.commons.math.RetryRunnerTest)

07:22:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways

07:22:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.FitnessCachingTest
07:22:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching, DisplayName: testFitnessCaching(org.apache.commons.math.genetics.FitnessCachingTest)

07:22:29.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching

07:22:29.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:22:29.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.PowellOptimizerTest

07:22:29.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:29.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

07:22:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic

07:22:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic, DisplayName: testMaximizeQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

07:22:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic

07:22:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc, DisplayName: testSumSinc(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

07:22:29.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc

07:22:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest
07:22:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:29.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21

07:22:29.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency, DisplayName: testGLSEfficiency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency

07:22:31.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData, DisplayName: cannotAddNullYSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData

07:22:31.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare, DisplayName: cannotAddCovarianceDataThatIsNotSquare(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare

07:22:31.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData, DisplayName: notEnoughData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData

07:22:31.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency, DisplayName: testGLSOLSConsistency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency

07:22:31.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData, DisplayName: cannotAddNullCovarianceData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData

07:22:31.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch, DisplayName: cannotAddCovarianceDataWithSampleSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch

07:22:31.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance

07:22:31.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch

07:22:31.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData, DisplayName: cannotAddXSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData

07:22:31.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2

07:22:31.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals

07:22:31.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance

07:22:31.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData

07:22:31.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample

07:22:31.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters

07:22:31.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance

07:22:31.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData

07:22:31.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull

07:22:31.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData

07:22:31.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

07:22:31.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull

07:22:31.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
TestResult: 0
07:22:31.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.CauchyDistributionTest

07:22:31.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:22:31.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale, DisplayName: testScale(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale

07:22:31.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian, DisplayName: testMedian(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
07:22:31.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:31.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities

07:22:31.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:31.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling

07:22:31.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities

07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments

07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.CauchyDistributionTest)

07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency

07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
07:22:31.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest

07:22:31.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:31.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage, DisplayName: testMessage(org.apache.commons.math.exception.TooManyEvaluationsExceptionTest)

07:22:31.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage

07:22:31.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
07:22:31.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.BinomialDistributionTest

07:22:31.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:22:31.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts

07:22:31.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0

07:22:31.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1

07:22:31.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities

07:22:31.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:31.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling

07:22:31.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities

07:22:31.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments

07:22:31.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.BinomialDistributionTest)

07:22:31.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments

07:22:31.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

07:22:31.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest

07:22:31.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:31.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)
07:22:31.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:31.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters

07:22:31.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)

07:22:31.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction

07:22:31.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)

07:22:31.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction

07:22:31.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.ElitisticListPopulationTest

07:22:31.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:31.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration, DisplayName: testNextGeneration(org.apache.commons.math.genetics.ElitisticListPopulationTest)

07:22:31.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration

07:22:31.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.AbstractRandomGeneratorTest

07:22:31.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 31

07:22:31.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBoolean, DisplayName: testNextBoolean(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:31.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBoolean

07:22:31.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:31.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt

07:22:31.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloat, DisplayName: testNextFloat(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:31.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloat

07:22:31.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:31.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong

07:22:31.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:31.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal

07:22:31.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample

07:22:32.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues

07:22:32.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints

07:22:32.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian

07:22:32.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF

07:22:32.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT

07:22:32.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare

07:22:32.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong

07:22:32.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex

07:22:32.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:32.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt

07:22:32.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency

07:22:34.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric

07:22:34.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues

07:22:34.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential

07:22:34.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson

07:22:34.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform

07:22:34.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation

07:22:34.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial

07:22:34.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig

07:22:34.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate

07:22:34.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex

07:22:34.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy

07:22:34.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma

07:22:34.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull

07:22:34.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta

07:22:34.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.AbstractRandomGeneratorTest)

07:22:34.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf

07:22:34.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 31
TestResult: 0

07:22:34.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest

07:22:34.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:22:34.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues

07:22:34.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples
07:22:34.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode

07:22:34.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency

07:22:34.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial

07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy

07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation
07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency
07:22:34.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

07:22:34.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MaxTest

07:22:34.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:34.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs

07:22:34.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues

07:22:34.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MaxTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples
07:22:34.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode

07:22:34.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency

07:22:34.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial

07:22:34.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency

07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastFourierTransformerTest
07:22:34.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:22:34.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastFourierTransformerTest)

07:22:34.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData

07:22:34.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastFourierTransformerTest)
07:22:34.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters

07:22:34.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastFourierTransformerTest)
07:22:34.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction

07:22:34.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData, DisplayName: test2DData(org.apache.commons.math.transform.FastFourierTransformerTest)

07:22:34.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData

07:22:34.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:22:34.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.AbstractRealVectorTest

07:22:34.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:34.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testMap, DisplayName: testMap(org.apache.commons.math.linear.AbstractRealVectorTest)

07:22:34.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testMap

07:22:34.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.linear.AbstractRealVectorTest)

07:22:34.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testClone

07:22:34.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.AbstractRealVectorTest)

07:22:34.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testSparseIterator

07:22:34.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.AbstractRealVectorTest)

07:22:34.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.AbstractRealVectorTest, MethodName: testIterator

07:22:34.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
07:22:34.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.BlockFieldMatrixTest

07:22:34.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 46

07:22:34.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge

07:22:34.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge

07:22:34.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate

07:22:34.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples

07:22:34.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry

07:22:34.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail

07:22:34.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge

07:22:34.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd
07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd
07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace

07:22:34.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk

07:22:34.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString

07:22:34.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge

07:22:34.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge

07:22:34.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:34.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix

07:22:34.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks

07:22:35.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus

07:22:35.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector
07:22:35.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2

07:22:35.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions

07:22:35.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix

07:22:35.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge

07:22:35.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector

07:22:35.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions

07:22:35.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix

07:22:35.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209

07:22:35.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge

07:22:35.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors
07:22:35.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge

07:22:35.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn
07:22:35.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix

07:22:35.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn

07:22:35.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector
07:22:35.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply

07:22:35.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow

07:22:35.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode

07:22:35.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge

07:22:35.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial

07:22:35.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow

07:22:35.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose

07:22:35.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix

07:22:35.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply

07:22:35.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix

07:22:35.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector

07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix
07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector
07:22:35.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 46
07:22:35.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.BiDiagonalTransformerTest
07:22:35.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:22:35.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal, DisplayName: testBBiDiagonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)

07:22:35.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal

07:22:35.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower, DisplayName: testUpperOrLower(org.apache.commons.math.linear.BiDiagonalTransformerTest)

07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower
07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)

07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal

07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix, DisplayName: testSingularMatrix(org.apache.commons.math.linear.BiDiagonalTransformerTest)

07:22:35.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix

07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.BiDiagonalTransformerTest)

07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues

07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions
07:22:35.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexFormatTest
07:22:35.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30
07:22:35.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals
07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary
07:22:35.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar

07:22:35.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)

07:22:35.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber

07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan

07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:22:35.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat

07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth
07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal
07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat
07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:22:35.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity

07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity
07:22:35.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar
07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex
07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals
07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal
07:22:35.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth

07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal
07:22:35.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary
07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals
07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity

07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter
07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal
07:22:35.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan

07:22:35.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary

07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.MersenneTwisterTest
07:22:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:22:35.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloat, DisplayName: testFloat(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloat

07:22:35.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testGaussian, DisplayName: testGaussian(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testGaussian

07:22:35.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDouble, DisplayName: testDouble(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDouble

07:22:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt

07:22:35.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean, DisplayName: testNexBoolean(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean

07:22:35.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg

07:22:35.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura, DisplayName: testMakotoNishimura(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura

07:22:35.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes

07:22:35.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntN, DisplayName: testNextIntN(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntN

07:22:35.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.MersenneTwisterTest)

07:22:35.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong

07:22:35.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:22:35.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.MathUtilsTest

07:22:35.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 73

07:22:35.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt, DisplayName: testCopyOfInt(org.apache.commons.math.util.MathUtilsTest)

07:22:35.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt

07:22:35.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient, DisplayName: testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)

07:22:35.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient

07:22:35.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail, DisplayName: testFactorialFail(org.apache.commons.math.util.MathUtilsTest)

07:22:35.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail

07:22:35.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency, DisplayName: testGcdConsistency(org.apache.commons.math.util.MathUtilsTest)

07:22:35.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency

07:22:35.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2, DisplayName: testCopyOfDouble2(org.apache.commons.math.util.MathUtilsTest)

07:22:35.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2

07:22:35.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3, DisplayName: testCopyOfDouble3(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3
07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace, DisplayName: testSortInPlace(org.apache.commons.math.util.MathUtilsTest)

07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace

07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2, DisplayName: testCopyOfInt2(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2
07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3, DisplayName: testCopyOfInt3(org.apache.commons.math.util.MathUtilsTest)

07:22:35.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3

07:22:35.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble, DisplayName: testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble

07:22:35.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble, DisplayName: testRoundDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble

07:22:35.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle, DisplayName: testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)

07:22:35.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle

07:22:35.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray, DisplayName: testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)

07:22:35.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray

07:22:35.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt, DisplayName: testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt

07:22:35.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle, DisplayName: testReduceComparedWithNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)

07:22:35.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle

07:22:35.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble, DisplayName: testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble
07:22:35.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd, DisplayName: testGcd(org.apache.commons.math.util.MathUtilsTest)

07:22:35.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd

07:22:35.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm, DisplayName: testLcm(org.apache.commons.math.util.MathUtilsTest)

07:22:35.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm

07:22:35.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.MathUtilsTest)

07:22:35.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog

07:22:35.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.MathUtilsTest)

07:22:35.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow

07:22:35.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge, DisplayName: testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)

07:22:35.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge

07:22:35.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder, DisplayName: testCheckOrder(org.apache.commons.math.util.MathUtilsTest)

07:22:35.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder

07:22:35.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.MathUtilsTest)

07:22:35.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh

07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash, DisplayName: testHash(org.apache.commons.math.util.MathUtilsTest)

07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash

07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh
07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash, DisplayName: testPermutedArrayHash(org.apache.commons.math.util.MathUtilsTest)

07:22:35.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash

07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt, DisplayName: testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt
07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong, DisplayName: testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong

07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt, DisplayName: testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)

07:22:35.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt

07:22:35.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon, DisplayName: testCompareToEpsilon(org.apache.commons.math.util.MathUtilsTest)

07:22:35.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon

07:22:35.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble, DisplayName: testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble

07:22:35.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat, DisplayName: testRoundFloat(org.apache.commons.math.util.MathUtilsTest)

07:22:35.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat

07:22:35.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN, DisplayName: testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)

07:22:35.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN

07:22:35.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash, DisplayName: testArrayHash(org.apache.commons.math.util.MathUtilsTest)

07:22:35.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash

07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial, DisplayName: testFactorial(org.apache.commons.math.util.MathUtilsTest)

07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial

07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta, DisplayName: testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta
07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong, DisplayName: testGcdLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong
07:22:35.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps, DisplayName: testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong, DisplayName: testLcmLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals, DisplayName: testArrayEquals(org.apache.commons.math.util.MathUtilsTest)

07:22:35.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck, DisplayName: testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite, DisplayName: testCheckFinite(org.apache.commons.math.util.MathUtilsTest)

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps, DisplayName: testFloatEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)

07:22:35.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong, DisplayName: testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble, DisplayName: testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt, DisplayName: testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)

07:22:35.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt

07:22:35.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail, DisplayName: testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)

07:22:35.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail

07:22:35.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475, DisplayName: testMath475(org.apache.commons.math.util.MathUtilsTest)

07:22:35.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475

07:22:35.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.util.MathUtilsTest)

07:22:35.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN

07:22:35.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage, DisplayName: testSubAndCheckErrorMessage(org.apache.commons.math.util.MathUtilsTest)

07:22:35.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0, DisplayName: test0Choose0(org.apache.commons.math.util.MathUtilsTest)

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps, DisplayName: testEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck, DisplayName: testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck

07:22:35.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte, DisplayName: testSignByte(org.apache.commons.math.util.MathUtilsTest)

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong, DisplayName: testSignLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta, DisplayName: testEqualsWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong, DisplayName: testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong
07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble, DisplayName: testCopyOfDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat, DisplayName: testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps, DisplayName: testCompareToMaxUlps(org.apache.commons.math.util.MathUtilsTest)

07:22:35.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort, DisplayName: testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte, DisplayName: testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong, DisplayName: testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)

07:22:35.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1, DisplayName: testCheckNotNull1(org.apache.commons.math.util.MathUtilsTest)

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2, DisplayName: testCheckNotNull2(org.apache.commons.math.util.MathUtilsTest)

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN, DisplayName: testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)

07:22:35.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble, DisplayName: testSignDouble(org.apache.commons.math.util.MathUtilsTest)

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck, DisplayName: testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce, DisplayName: testReduce(org.apache.commons.math.util.MathUtilsTest)

07:22:35.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt, DisplayName: testSignInt(org.apache.commons.math.util.MathUtilsTest)

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.util.MathUtilsTest)

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat, DisplayName: testSignFloat(org.apache.commons.math.util.MathUtilsTest)

07:22:35.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat

07:22:35.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort, DisplayName: testSignShort(org.apache.commons.math.util.MathUtilsTest)

07:22:35.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort

07:22:35.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 73
TestResult: 0

07:22:35.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest

07:22:35.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:35.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
07:22:35.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane

07:22:35.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)

07:22:35.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions

07:22:35.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)

07:22:35.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid

07:22:35.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:22:35.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TTestTest

07:22:35.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:22:35.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest

07:22:35.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples

07:22:35.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic

07:22:35.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT

07:22:35.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired

07:22:35.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TTestTest)

07:22:35.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic

07:22:35.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

07:22:35.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest

07:22:35.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:35.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)

07:22:35.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency

07:22:35.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)

07:22:35.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization

07:22:35.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ChiSquareDistributionTest

07:22:35.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:22:35.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts

07:22:35.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity

07:22:35.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors

07:22:35.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf

07:22:35.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities

07:22:35.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:35.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling

07:22:35.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities

07:22:35.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments

07:22:35.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ChiSquareDistributionTest)

07:22:35.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency

07:22:35.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest

07:22:35.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:22:35.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial

07:22:35.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck

07:22:35.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep

07:22:35.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations

07:22:35.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance

07:22:35.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

07:22:35.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward

07:22:35.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.FixedGenerationCountTest

07:22:35.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:35.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied, DisplayName: testIsSatisfied(org.apache.commons.math.genetics.FixedGenerationCountTest)

07:22:35.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied

07:22:35.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.MeanTest

07:22:35.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:35.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples

07:22:35.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean, DisplayName: testWeightedMean(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean

07:22:35.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples

07:22:35.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization

07:22:35.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency

07:22:35.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial

07:22:35.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.MeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy
07:22:35.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.MeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation

07:22:35.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

07:22:35.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency

07:22:35.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.HarmonicFitterTest

07:22:35.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:22:35.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError, DisplayName: test1PercentError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:22:35.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError

07:22:35.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData, DisplayName: testTinyVariationsData(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

07:22:35.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData

07:22:35.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

07:22:35.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1

07:22:35.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

07:22:35.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess

07:22:35.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted, DisplayName: testUnsorted(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

07:22:35.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted

07:22:35.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

07:22:35.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError

07:22:35.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest
07:22:35.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:35.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:35.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)

07:22:35.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency

07:22:35.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)

07:22:36.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization

07:22:36.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.CovarianceTest

07:22:36.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:36.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.CovarianceTest)

07:22:36.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData

07:22:36.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.CovarianceTest)

07:22:36.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility

07:22:36.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.CovarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant
07:22:36.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.CovarianceTest)

07:22:36.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency

07:22:36.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.CovarianceTest)

07:22:36.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly

07:22:36.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.EmpiricalDistributionTest

07:22:36.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:36.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow, DisplayName: testBinIndexOverflow(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow

07:22:36.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization

07:22:36.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad, DisplayName: testLoad(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad

07:22:36.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext, DisplayName: testNext(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext

07:22:36.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray, DisplayName: testLoadNullDoubleArray(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray

07:22:36.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat, DisplayName: testGridTooFat(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat

07:22:36.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad, DisplayName: testDoubleLoad(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad

07:22:36.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine, DisplayName: testGridTooFine(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine

07:22:36.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile, DisplayName: testLoadNullFile(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile

07:22:36.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds, DisplayName: testGetBinUpperBounds(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds

07:22:36.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL, DisplayName: testLoadNullURL(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL

07:22:36.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail, DisplayName: testNexFail(org.apache.commons.math.random.EmpiricalDistributionTest)

07:22:36.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail

07:22:36.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.RealVectorFormatTest

07:22:36.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

07:22:36.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat

07:22:36.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals

07:22:36.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator

07:22:36.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX

07:22:36.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan

07:22:36.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc

07:22:36.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX
07:22:36.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY

07:22:36.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ
07:22:36.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll

07:22:36.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix

07:22:36.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix

07:22:36.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX

07:22:36.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY

07:22:36.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ

07:22:36.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace

07:22:36.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

07:22:36.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents

07:22:36.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents

07:22:36.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity

07:22:36.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl

07:22:36.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity

07:22:36.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting
07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals
07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)

07:22:36.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals
07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity

07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting
07:22:36.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan

07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity
07:22:36.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals

07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest
07:22:36.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:22:36.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:36.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck

07:22:36.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward

07:22:36.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep

07:22:36.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps

07:22:36.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep

07:22:36.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

07:22:36.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize

07:22:36.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6

07:22:36.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.OneWayAnovaTest

07:22:36.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:36.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest, DisplayName: testAnovaTest(org.apache.commons.math.stat.inference.OneWayAnovaTest)

07:22:36.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest

07:22:36.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue, DisplayName: testAnovaFValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)

07:22:36.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue

07:22:36.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue, DisplayName: testAnovaPValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)

07:22:36.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue

07:22:36.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest

07:22:36.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:36.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)

07:22:36.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane

07:22:36.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)

07:22:36.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave

07:22:36.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)
* Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions
Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well19937aTest
Number of testcases to execute : 1
* Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode
Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.FastMathTest
Number of testcases to execute : 36
* Started : ClasseName: org.apache.commons.math.ut
07:22:36.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - il.FastMathTest, MethodName: testLogSpecialCases, DisplayName: testLogSpecialCases(org.apache.commons.math.util.FastMathTest)
* Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogSpecialCases
* Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases, DisplayName: testDoubleNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)
* Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases
* Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases, DisplayName: testAtan2SpecialCases(org.apache.commons.math.util.FastMathTest)
* Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases
* Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy, DisplayName: testCbrtAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:38.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy

07:22:38.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTest)

07:22:38.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2

07:22:38.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses, DisplayName: checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)

07:22:38.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses

07:22:38.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy, DisplayName: testLogAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:38.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy

07:22:38.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy, DisplayName: testAcosAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:40.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy

07:22:40.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble, DisplayName: testMinMaxDouble(org.apache.commons.math.util.FastMathTest)

07:22:40.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble

07:22:40.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases, DisplayName: testPowSpecialCases(org.apache.commons.math.util.FastMathTest)

07:22:40.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases

07:22:40.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases, DisplayName: testDoubleScalbSpecialCases(org.apache.commons.math.util.FastMathTest)

07:22:40.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases

07:22:40.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy, DisplayName: testTanhAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:42.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy

07:22:42.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians, DisplayName: testToRadians(org.apache.commons.math.util.FastMathTest)

07:22:42.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians

07:22:42.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.util.FastMathTest)

07:22:42.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants

07:22:42.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy, DisplayName: testTanAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:42.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy

07:22:42.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases, DisplayName: testFloatScalbSpecialCases(org.apache.commons.math.util.FastMathTest)

07:22:42.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases

07:22:42.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees, DisplayName: testToDegrees(org.apache.commons.math.util.FastMathTest)

07:22:42.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees

07:22:42.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy, DisplayName: testSinAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:43.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy

07:22:43.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy, DisplayName: testAtan2Accuracy(org.apache.commons.math.util.FastMathTest)

07:22:43.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy

07:22:43.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases, DisplayName: testFloatNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)

07:22:43.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases

07:22:43.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy, DisplayName: testExpm1Accuracy(org.apache.commons.math.util.FastMathTest)

07:22:43.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy

07:22:43.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat, DisplayName: testMinMaxFloat(org.apache.commons.math.util.FastMathTest)

07:22:43.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat

07:22:43.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic, DisplayName: testHyperbolic(org.apache.commons.math.util.FastMathTest)

07:22:43.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic

07:22:43.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy, DisplayName: testCoshAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:44.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy

07:22:44.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy, DisplayName: testPowAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:45.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy

07:22:45.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases, DisplayName: testExpSpecialCases(org.apache.commons.math.util.FastMathTest)

07:22:45.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases

07:22:45.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy, DisplayName: testLog10Accuracy(org.apache.commons.math.util.FastMathTest)

07:22:45.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy

07:22:45.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy, DisplayName: testAtanAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:45.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy

07:22:45.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.util.FastMathTest)

07:22:45.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter

07:22:45.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy, DisplayName: testLog1pAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:45.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy

07:22:45.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses, DisplayName: testHyperbolicInverses(org.apache.commons.math.util.FastMathTest)

07:22:45.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses

07:22:45.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Execution of test case ignored : checkExtraFastMathClasses

07:22:45.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy, DisplayName: testAsinAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:47.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy

07:22:47.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy, DisplayName: testCosAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:47.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy

07:22:47.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy, DisplayName: testExpAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:47.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy

07:22:47.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy, DisplayName: testSinhAccuracy(org.apache.commons.math.util.FastMathTest)

07:22:48.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy

07:22:48.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 35
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionFieldTest
07:22:48.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:48.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:48.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.FractionFieldTest)

07:22:48.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne
07:22:48.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:48.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.FractionFieldTest)

07:22:48.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero

07:22:48.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionFieldTest)

07:22:48.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial

07:22:48.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:22:48.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well512aTest

07:22:48.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:48.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well512aTest)

07:22:48.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode

07:22:48.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.NewtonSolverTest

07:22:48.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:48.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)

07:22:48.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero

07:22:48.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)

07:22:48.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero

07:22:48.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.RandomKeyMutationTest

07:22:48.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:48.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.RandomKeyMutationTest)

07:22:48.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate

07:22:48.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.LUDecompositionImplTest
07:22:48.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:48.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:22:48.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation

07:22:48.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular

07:22:48.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions

07:22:48.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare

07:22:48.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular

07:22:48.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular

07:22:48.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU

07:22:48.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1

07:22:48.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.LUDecompositionImplTest)

07:22:48.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2

07:22:48.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.GammaDistributionTest

07:22:48.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:22:48.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities, DisplayName: testProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities

07:22:48.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors, DisplayName: testParameterAccessors(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity

07:22:48.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:22:48.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues

07:22:48.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities

07:22:48.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:48.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling

07:22:48.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities
07:22:48.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:48.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments

07:22:48.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.GammaDistributionTest)

07:22:48.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency

07:22:48.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.InteractionTest

07:22:48.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:48.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction, DisplayName: testInteraction(org.apache.commons.math.stat.descriptive.InteractionTest)

07:22:48.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction

07:22:48.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.ProductTest

07:22:48.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:22:48.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues

07:22:48.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct, DisplayName: testWeightedProduct(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct

07:22:48.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.ProductTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples

07:22:48.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode

07:22:48.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency

07:22:48.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial

07:22:48.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency

07:22:48.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12

07:22:48.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest

07:22:48.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:48.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

07:22:48.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction

07:22:48.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

07:22:48.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction

07:22:48.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters
07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction

07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:22:48.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest

07:22:48.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:48.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)

07:22:48.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial

07:22:48.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum, DisplayName: testNoOptimum(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)

07:22:48.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum

07:22:48.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

07:22:48.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest

07:22:48.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:22:48.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData

07:22:48.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency

07:22:48.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss, DisplayName: testSwiss(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss

07:22:48.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant

07:22:48.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency

07:22:48.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency

07:22:48.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly

07:22:48.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility

07:22:48.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

07:22:48.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero

07:22:48.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

07:22:48.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.OpenIntToDoubleHashMapTest

07:22:48.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

07:22:48.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:48.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting

07:22:48.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:48.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2

07:22:48.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:48.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions

07:22:48.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:48.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy

07:22:48.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:48.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey

07:22:48.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent

07:22:49.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet

07:22:49.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize

07:22:49.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2

07:22:49.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification

07:22:49.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent

07:22:49.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty

07:22:49.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.024 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting

07:22:49.025 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove

07:22:49.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator

07:22:49.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize

07:22:49.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:22:49.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty

07:22:49.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17

07:22:49.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastHadamardTransformerTest

07:22:49.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:49.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points, DisplayName: test3Points(org.apache.commons.math.transform.FastHadamardTransformerTest)

07:22:49.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points

07:22:49.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points, DisplayName: test8Points(org.apache.commons.math.transform.FastHadamardTransformerTest)

07:22:49.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points

07:22:49.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points, DisplayName: test4Points(org.apache.commons.math.transform.FastHadamardTransformerTest)

07:22:49.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points

07:22:49.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse, DisplayName: testNoIntInverse(org.apache.commons.math.transform.FastHadamardTransformerTest)

07:22:49.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse

07:22:49.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well44497bTest

07:22:49.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:22:49.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497bTest)

07:22:49.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode

07:22:49.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.MatrixUtilsTest

07:22:49.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:22:49.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter, DisplayName: testFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter

07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix, DisplayName: testcreateFieldIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix
07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix, DisplayName: testCreateRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix

07:22:49.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix, DisplayName: testCreateRowRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix

07:22:49.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix, DisplayName: testcreateFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix

07:22:49.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter, DisplayName: testBigFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter

07:22:49.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix, DisplayName: testCreateIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix

07:22:49.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix, DisplayName: testCreateColumnRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix, DisplayName: testCreateRowFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix, DisplayName: testCreateColumnFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:22:49.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ConvergenceExceptionTest

07:22:49.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:49.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.ConvergenceExceptionTest)

07:22:49.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause

07:22:49.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.ConvergenceExceptionTest)

07:22:49.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor

07:22:49.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

07:22:49.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest

07:22:49.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:49.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward

07:22:49.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent

07:22:49.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep

07:22:49.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps

07:22:49.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep

07:22:49.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler

07:22:49.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks
07:22:49.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:22:49.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize

07:22:49.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:22:49.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.FieldMatrixImplTest

07:22:49.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 37

07:22:49.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate

07:22:49.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples

07:22:49.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry

07:22:49.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail
07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd

07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd
07:22:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower

07:22:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace

07:22:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk

07:22:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString
07:22:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix

07:22:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus

07:22:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector

07:22:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2

07:22:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions

07:22:49.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix

07:22:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector

07:22:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions

07:22:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix

07:22:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209

07:22:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors

07:22:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn

07:22:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix
07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn

07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector

07:22:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply

07:22:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow
07:22:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode

07:22:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial

07:22:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow

07:22:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose

07:22:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix

07:22:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply

07:22:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix

07:22:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector

07:22:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix

07:22:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)

07:22:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector

07:22:49.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 37
07:22:49.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest

07:22:49.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:22:49.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate, DisplayName: testPerformClusterAnalysisDegenerate(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

07:22:49.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate

07:22:49.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace, DisplayName: testCertainSpace(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

07:22:49.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace

07:22:49.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters, DisplayName: testPerformClusterAnalysisToManyClusters(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

07:22:49.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters

07:22:49.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances, DisplayName: testSmallDistances(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

07:22:49.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances

07:22:49.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2, DisplayName: dimension2(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

07:22:49.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2

07:22:49.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest

07:22:49.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:49.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)

07:22:49.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency

07:22:49.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)

07:22:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization

07:22:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.TriDiagonalTransformerTest

07:22:49.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:49.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt, DisplayName: testAEqualQTQt(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt

07:22:49.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal, DisplayName: testTTriDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal

07:22:49.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare

07:22:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal, DisplayName: testQTOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal

07:22:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal, DisplayName: testNoAccessBelowDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal

07:22:49.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal

07:22:49.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3, DisplayName: testMatricesValues3(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3

07:22:49.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5, DisplayName: testMatricesValues5(org.apache.commons.math.linear.TriDiagonalTransformerTest)

07:22:49.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5

07:22:49.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest

07:22:49.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:22:49.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)

07:22:49.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization

07:22:49.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization, DisplayName: testImpossibleSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)

07:22:49.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization

07:22:49.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState, DisplayName: testFixedState(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
* Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState

07:22:49.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset, DisplayName: testNoReset(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
* Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset
07:22:49.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:22:49.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.StatUtilsTest

07:22:49.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

07:22:49.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1, DisplayName: testNormalize1(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1
07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2, DisplayName: testNormalize2(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2

07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats, DisplayName: testDifferenceStats(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats
07:22:49.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile

07:22:49.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions, DisplayName: testArrayIndexConditions(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions

07:22:49.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax, DisplayName: testMax(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax

07:22:49.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin, DisplayName: testMin(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin

07:22:49.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq, DisplayName: testSumSq(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct, DisplayName: testProduct(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean, DisplayName: testGeometricMean(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean
07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance, DisplayName: testVariance(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance

07:22:49.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog, DisplayName: testSumLog(org.apache.commons.math.stat.StatUtilsTest)

07:22:49.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog

07:22:49.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
TestResult: 0

07:22:49.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest

07:22:49.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:22:49.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

07:22:49.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean

07:22:49.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

07:22:49.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization

07:22:49.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats

07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions
07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

07:22:49.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis

07:22:49.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

07:22:49.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.ZipfDistributionTest

07:22:49.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:22:49.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions

07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts

07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities
07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities

07:22:49.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling

07:22:49.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities

07:22:49.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments

07:22:49.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.ZipfDistributionTest)

07:22:49.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments

07:22:49.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.FrenchRealVectorFormatTest

07:22:49.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

07:22:49.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat

07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals

07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator
07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX

07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan

07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:22:49.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX

07:22:49.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY

07:22:49.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ

07:22:49.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll

07:22:49.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix

07:22:49.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix

07:22:49.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX

07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY
07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ
07:22:49.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace

07:22:49.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

07:22:49.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents

07:22:49.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents

07:22:49.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity

07:22:49.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl

07:22:49.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals
07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals

07:22:49.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity

07:22:49.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting

07:22:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan

07:22:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity

07:22:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

07:22:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals

07:22:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
TestResult: 0

07:22:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest

07:22:49.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 19

07:22:49.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat, DisplayName: testHat(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat

07:22:49.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility

07:22:49.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull, DisplayName: testNewSampleDataXNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull

07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull, DisplayName: testNewSampleDataYNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull
07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance

07:22:49.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch

07:22:49.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit, DisplayName: testPerfectFit(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit

07:22:49.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2
07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters

07:22:49.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance

07:22:49.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData

07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull
07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData
07:22:49.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

07:22:49.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull

07:22:49.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 19
TestResult: 0

07:22:49.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest

07:22:49.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:49.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
07:22:49.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization

07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)

07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString

07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)

07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode
07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:49.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:22:49.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest

07:22:49.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:22:49.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck

07:22:49.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward

07:22:49.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps

07:22:49.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls, DisplayName: testIntegratorControls(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls

07:22:49.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep

07:22:49.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative

07:22:49.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck

07:22:49.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents

07:22:49.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler

07:22:49.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

07:22:49.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance

07:22:49.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MedianTest

07:22:49.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:22:49.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MedianTest)

07:22:49.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy

07:22:49.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MedianTest)

07:22:49.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation

07:22:49.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MedianTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency

07:22:49.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.MannWhitneyUTestTest

07:22:49.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:22:49.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation, DisplayName: testMannWhitneyUInputValidation(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)

07:22:49.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation

07:22:49.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple, DisplayName: testMannWhitneyUSimple(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)

07:22:49.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple

07:22:49.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.CMAESOptimizerTest

07:22:49.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21

07:22:49.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen, DisplayName: testConstrainedRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:51.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen

07:22:51.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated, DisplayName: testElliRotated(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:51.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated

07:22:51.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse, DisplayName: testEllipse(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:52.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse

07:22:52.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes, DisplayName: testTwoAxes(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:54.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes

07:22:54.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar, DisplayName: testCigar(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar

07:22:55.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen, DisplayName: testRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen

07:22:55.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds, DisplayName: testInitOutofbounds(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds

07:22:55.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange, DisplayName: testInputSigmaOutOfRange(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange
07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative, DisplayName: testInputSigmaNegative(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative
07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch, DisplayName: testInputSigmaDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch

07:22:55.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData, DisplayName: testBoundariesNoData(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:22:55.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData

07:22:55.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin, DisplayName: testRastrigin(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:02.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin

07:23:02.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen, DisplayName: testDiagonalRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:04.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen

07:23:04.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow, DisplayName: testSsDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:05.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow

07:23:05.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize, DisplayName: testMaximize(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
* Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize
07:23:05.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:05.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley, DisplayName: testAckley(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:06.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley

07:23:06.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab, DisplayName: testCigTab(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:07.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab

07:23:07.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow, DisplayName: testDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:07.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow

07:23:07.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch, DisplayName: testBoundariesDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:07.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch

07:23:07.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere, DisplayName: testSphere(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:07.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere

07:23:07.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet, DisplayName: testTablet(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:23:08.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet

07:23:08.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.SimpleRegressionTest

07:23:08.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

07:23:08.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty, DisplayName: testRemoveMultiplePastEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear
07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr, DisplayName: testCorr(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs
07:23:08.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect, DisplayName: testPerfect(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect

07:23:08.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty, DisplayName: testRemoveObsFromEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty

07:23:08.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative, DisplayName: testSSENonNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative

07:23:08.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle, DisplayName: testRemoveObsFromSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle

07:23:08.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty, DisplayName: testRemoveMultipleToEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty

07:23:08.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle, DisplayName: testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle

07:23:08.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY, DisplayName: testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY

07:23:08.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative, DisplayName: testPerfectNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative

07:23:08.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris, DisplayName: testNorris(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris

07:23:08.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference, DisplayName: testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference

07:23:08.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom, DisplayName: testRandom(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom

07:23:08.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple, DisplayName: testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:23:08.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple

07:23:08.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest

07:23:08.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:08.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimizeMaximize, DisplayName: testMinimizeMaximize(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:23:08.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimizeMaximize

07:23:08.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283, DisplayName: testMath283(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

07:23:08.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283

07:23:08.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

07:23:08.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock

07:23:08.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

07:23:08.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell

07:23:08.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:23:08.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SparseRealMatrixTest

07:23:08.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 27

07:23:08.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate

07:23:08.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples

07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry
07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail

07:23:08.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd
07:23:08.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd

07:23:08.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace

07:23:08.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm

07:23:08.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString
07:23:08.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus

07:23:08.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2

07:23:08.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions

07:23:08.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix

07:23:08.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector

07:23:08.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions

07:23:08.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209

07:23:08.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors

07:23:08.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix

07:23:08.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector

07:23:08.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply

07:23:08.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode

07:23:08.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial

07:23:08.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose

07:23:08.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply

07:23:08.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix

07:23:08.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix

07:23:08.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseRealMatrixTest)

07:23:08.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector

07:23:08.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 27
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest

07:23:08.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:08.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter

07:23:08.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720

07:23:08.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy

07:23:08.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString

07:23:08.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics

07:23:08.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection

07:23:08.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval

07:23:08.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize

07:23:08.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

07:23:08.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues

07:23:08.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.Vector3DTest

07:23:08.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 19

07:23:08.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testVectorialProducts, DisplayName: testVectorialProducts(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testVectorialProducts

07:23:08.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCrossProductCancellation, DisplayName: testCrossProductCancellation(org.apache.commons.math.geometry.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCrossProductCancellation
07:23:08.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.geometry.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAdd

07:23:08.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistanceInf, DisplayName: testDistanceInf(org.apache.commons.math.geometry.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistanceInf
07:23:08.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.geometry.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testSubtract

07:23:08.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngular, DisplayName: testAngular(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngular

07:23:08.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngle, DisplayName: testAngle(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngle

07:23:08.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm1, DisplayName: testNorm1(org.apache.commons.math.geometry.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm1

07:23:08.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testConstructors

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testScalarProduct, DisplayName: testScalarProduct(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testScalarProduct

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testOrthogonal, DisplayName: testOrthogonal(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testOrthogonal

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngularSeparation, DisplayName: testAngularSeparation(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngularSeparation

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormalize, DisplayName: testNormalize(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormalize

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistance

07:23:08.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistance1, DisplayName: testDistance1(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistance1

07:23:08.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCoordinates, DisplayName: testCoordinates(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCoordinates

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistanceSq, DisplayName: testDistanceSq(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testDistanceSq

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormInf, DisplayName: testNormInf(org.apache.commons.math.geometry.Vector3DTest)

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormInf

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 19
TestResult: 0

07:23:08.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest

07:23:08.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:23:08.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN

07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation
07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples

07:23:08.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode

07:23:08.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency

07:23:08.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

07:23:08.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency

07:23:08.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12

07:23:08.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest

07:23:08.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:08.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)

07:23:08.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency

07:23:08.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)

07:23:08.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization

07:23:08.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest

07:23:08.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:08.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

07:23:08.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData

07:23:08.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff, DisplayName: testVarianceDecompNonMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

07:23:08.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff

07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance, DisplayName: testNoVariance(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance

07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown, DisplayName: testSingleDown(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown
07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs, DisplayName: testNonMeanCutoffs(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs
07:23:08.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp, DisplayName: testSingleUp(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp
07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation
07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff, DisplayName: testVarianceDecompMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

07:23:08.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff

07:23:08.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample, DisplayName: testSample(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

07:23:08.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample

07:23:08.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

07:23:08.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.EigenSolverTest

07:23:08.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:08.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.EigenSolverTest)
07:23:08.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve

07:23:08.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.EigenSolverTest)

07:23:08.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors

07:23:08.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.linear.EigenSolverTest)

07:23:08.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible

07:23:08.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible, DisplayName: testInvertible(org.apache.commons.math.linear.EigenSolverTest)

07:23:08.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible

07:23:08.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:23:08.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.KurtosisTest

07:23:08.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:23:08.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN

07:23:08.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples

07:23:08.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization

07:23:08.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation

07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency
07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode

07:23:08.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency

07:23:08.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

07:23:08.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency

07:23:08.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

07:23:08.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest

07:23:08.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:23:08.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck

07:23:08.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward

07:23:08.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep

07:23:08.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps

07:23:08.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep

07:23:08.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

07:23:08.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize

07:23:08.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest

07:23:08.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:08.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward

07:23:08.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative, DisplayName: testWrongDerivative(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative

07:23:08.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep

07:23:08.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents

07:23:08.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors, DisplayName: testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors

07:23:08.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler

07:23:08.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance

07:23:08.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence, DisplayName: testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence

07:23:08.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

07:23:08.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks

07:23:08.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.QRDecompositionImplTest

07:23:08.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:23:08.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR, DisplayName: testAEqualQR(org.apache.commons.math.linear.QRDecompositionImplTest)
07:23:08.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR

07:23:09.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.QRDecompositionImplTest)

07:23:09.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues

07:23:09.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.QRDecompositionImplTest)

07:23:09.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions

07:23:09.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular, DisplayName: testRUpperTriangular(org.apache.commons.math.linear.QRDecompositionImplTest)

07:23:09.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular

07:23:09.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.QRDecompositionImplTest)

07:23:09.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal

07:23:09.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal, DisplayName: testHTrapezoidal(org.apache.commons.math.linear.QRDecompositionImplTest)

07:23:09.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal

07:23:09.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest

07:23:09.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:09.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)
07:23:09.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane

07:23:09.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)

07:23:09.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave

07:23:09.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)

07:23:09.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions

07:23:09.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:23:09.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.CertifiedDataTest

07:23:09.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:09.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics, DisplayName: testSummaryStatistics(org.apache.commons.math.stat.CertifiedDataTest)
07:23:09.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics

07:23:09.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics, DisplayName: testDescriptiveStatistics(org.apache.commons.math.stat.CertifiedDataTest)
07:23:09.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics

07:23:09.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest

07:23:09.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:09.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:23:09.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization

07:23:09.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats

07:23:09.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString

07:23:09.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts

07:23:09.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions

07:23:09.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics

07:23:09.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension

07:23:09.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection

07:23:09.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState

07:23:09.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

07:23:09.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode

07:23:09.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:23:09.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest

07:23:09.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:09.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooLargeExceptionTest)

07:23:09.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors

07:23:09.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:23:09.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest

07:23:09.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:23:09.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations, DisplayName: testMaxIterations(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations

07:23:09.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimizeMaximize, DisplayName: testMinimizeMaximize(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimizeMaximize

07:23:09.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock

07:23:09.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1, DisplayName: testLeastSquares1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1

07:23:09.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2, DisplayName: testLeastSquares2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2

07:23:09.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3, DisplayName: testLeastSquares3(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3

07:23:09.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

07:23:09.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell

07:23:09.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest

07:23:09.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:23:09.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency

07:23:09.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations

07:23:09.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial
07:23:09.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets

07:23:09.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple

07:23:09.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

07:23:09.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned

07:23:09.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation
07:23:09.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible

07:23:09.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations
07:23:09.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting

07:23:09.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

07:23:09.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet

07:23:09.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest

07:23:09.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

07:23:09.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency

07:23:09.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes, DisplayName: testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes

07:23:09.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations

07:23:09.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial

07:23:09.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation, DisplayName: testQRColumnsPermutation(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation

07:23:09.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets

07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple
07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

07:23:09.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned

07:23:09.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199, DisplayName: testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199

07:23:09.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible

07:23:09.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations

07:23:09.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting

07:23:09.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters, DisplayName: testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters

07:23:09.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet

07:23:09.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

07:23:09.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit

07:23:09.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0

07:23:09.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SparseFieldVectorTest

07:23:09.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:09.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseFieldVectorTest)

07:23:09.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc

07:23:09.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)

07:23:09.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions

07:23:09.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseFieldVectorTest)

07:23:09.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates

07:23:09.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)

07:23:09.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions

07:23:09.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:23:09.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionFormatTest

07:23:09.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 19

07:23:09.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat

07:23:09.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative

07:23:09.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat

07:23:09.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper

07:23:09.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper

07:23:09.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative

07:23:09.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse

07:23:09.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat

07:23:09.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero

07:23:09.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative

07:23:09.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator

07:23:09.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat

07:23:09.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus
07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger
07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid
07:23:09.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat
07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat
07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig, DisplayName: testParseBig(org.apache.commons.math.fraction.BigFractionFormatTest)
07:23:09.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig
07:23:09.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

07:23:09.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative

07:23:09.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 19
TestResult: 0

07:23:09.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest

07:23:09.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:09.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest)
07:23:09.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock

07:23:09.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest

07:23:09.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:09.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest)

07:23:09.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors
07:23:09.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:23:09.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.OpenIntToFieldTest

07:23:09.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

07:23:09.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting

07:23:09.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2

07:23:09.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions

07:23:09.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy

07:23:09.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey

07:23:09.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent

07:23:09.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet

07:23:09.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize

07:23:09.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2

07:23:09.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification

07:23:09.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent

07:23:09.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty

07:23:09.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting

07:23:09.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove

07:23:09.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator

07:23:09.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize

07:23:09.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)

07:23:09.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty

07:23:09.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0

07:23:09.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SingularValueDecompositionImplTest

07:23:09.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:09.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal

07:23:09.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns, DisplayName: testMoreColumns(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns

07:23:09.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions

07:23:09.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber

07:23:09.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt

07:23:09.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard, DisplayName: testHadamard(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard

07:23:09.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows, DisplayName: testMoreRows(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows

07:23:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal

07:23:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

07:23:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMatricesValues1

07:23:09.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

07:23:09.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.Vector3DFormatTest

07:23:09.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28

07:23:09.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testConstructorSingleFormat

07:23:09.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals

07:23:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenSeparator

07:23:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseZeroX

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNan

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeX

07:23:09.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeY

07:23:09.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeZ

07:23:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeAll

07:23:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testDefaultFormatVector3D

07:23:09.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenPrefix

07:23:09.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testForgottenSuffix

07:23:09.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeX
07:23:09.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeY

07:23:09.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNegativeZ
07:23:09.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace

07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: tesNegativeInfinity

07:23:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNegativeInfinity
07:23:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testNonDefaultSetting

07:23:09.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleNoDecimals

07:23:09.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals
07:23:09.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testPositiveInfinity

07:23:09.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNonDefaultSetting
07:23:09.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParseNan

07:23:09.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testParsePositiveInfinity

07:23:09.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.Vector3DFormatTest)

07:23:09.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DFormatTest, MethodName: testSimpleWithDecimals

07:23:09.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
TestResult: 0

07:23:09.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.StepFunctionTest

07:23:09.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:23:09.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues

07:23:09.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1

07:23:09.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3, DisplayName: testPreconditions3(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4, DisplayName: testPreconditions4(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5, DisplayName: testPreconditions5(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6, DisplayName: testPreconditions6(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside, DisplayName: testHeaviside(org.apache.commons.math.analysis.function.StepFunctionTest)

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:23:09.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.RotationOrderTest

07:23:09.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:09.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationOrderTest, MethodName: testName, DisplayName: testName(org.apache.commons.math.geometry.RotationOrderTest)

07:23:09.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationOrderTest, MethodName: testName

07:23:09.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:23:09.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest

07:23:09.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:09.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples

07:23:09.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization

07:23:09.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation
07:23:09.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency

07:23:09.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode

07:23:09.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency

07:23:09.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial

07:23:09.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy
07:23:09.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation

07:23:09.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:23:09.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency

07:23:09.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:23:09.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest

07:23:09.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:09.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples

07:23:09.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization

07:23:09.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation

07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency

07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode
07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency

07:23:09.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial

07:23:09.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency

07:23:09.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:23:09.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest

07:23:09.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:09.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter

07:23:09.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720

07:23:09.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy

07:23:09.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString

07:23:09.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics

07:23:09.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection

07:23:09.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval

07:23:09.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize

07:23:09.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

07:23:09.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues

07:23:09.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.ListPopulationTest

07:23:09.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:09.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome, DisplayName: testGetFittestChromosome(org.apache.commons.math.genetics.ListPopulationTest)

07:23:09.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome

07:23:09.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.PercentileTest

07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile
07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample, DisplayName: testNISTExample(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton, DisplayName: testSingleton(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile, DisplayName: testSetQuantile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5, DisplayName: test5(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5

07:23:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile, DisplayName: testHighPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile

07:23:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues

07:23:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty, DisplayName: testNullEmpty(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty

07:23:09.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy

07:23:09.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation

07:23:09.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

07:23:09.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency

07:23:09.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

07:23:09.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomAdaptorTest

07:23:09.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

07:23:09.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor, DisplayName: testAdaptor(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor

07:23:09.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPascal

07:23:09.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSample

07:23:09.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextIntExtremeValues

07:23:09.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniformExclusiveEndpoints

07:23:09.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGaussian

07:23:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextF

07:23:09.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextT

07:23:09.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextChiSquare

07:23:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureLong

07:23:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureHex

07:23:09.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomAdaptorTest)

07:23:09.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureInt

07:23:09.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoissonConsistency

07:23:11.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHypergeometric

07:23:11.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLongExtremeValues

07:23:11.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextExponential

07:23:11.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoisson

07:23:11.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniform

07:23:11.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPermutation

07:23:11.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextBinomial

07:23:11.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testConfig

07:23:11.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInversionDeviate

07:23:11.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHex

07:23:11.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInt

07:23:11.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextCauchy

07:23:11.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGamma

07:23:11.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextWeibull

07:23:11.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextBeta

07:23:11.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLong

07:23:11.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomAdaptorTest)

07:23:11.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextZipf

07:23:11.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest

07:23:11.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:11.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

07:23:11.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic

07:23:11.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

07:23:11.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats

07:23:11.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

07:23:11.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch

07:23:11.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

07:23:11.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial

07:23:11.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.QRSolverTest

07:23:11.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

07:23:11.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined, DisplayName: testOverdetermined(org.apache.commons.math.linear.QRSolverTest)

07:23:11.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined

07:23:11.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.QRSolverTest)

07:23:11.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve

07:23:11.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.linear.QRSolverTest)

07:23:11.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank

07:23:11.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors, DisplayName: testSolveRankErrors(org.apache.commons.math.linear.QRSolverTest)

07:23:11.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors

07:23:11.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.QRSolverTest)

07:23:11.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors

07:23:11.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined, DisplayName: testUnderdetermined(org.apache.commons.math.linear.QRSolverTest)

07:23:11.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined

07:23:11.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.ranking.NaturalRankingTest

07:23:11.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:23:11.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage, DisplayName: testNaNsMinimalTiesAverage(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage

07:23:11.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom, DisplayName: testNaNsFixedTiesRandom(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom

07:23:11.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential, DisplayName: testNaNsRemovedTiesSequential(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential

07:23:11.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum, DisplayName: testNaNsMinimalTiesMaximum(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum

07:23:11.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault, DisplayName: testDefault(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault

07:23:11.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs, DisplayName: testNaNsAndInfs(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs

07:23:11.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum, DisplayName: testNaNsMaximalTiesMinimum(org.apache.commons.math.stat.ranking.NaturalRankingTest)

07:23:11.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum

07:23:11.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0

07:23:11.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest

07:23:11.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:23:11.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck

07:23:11.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward

07:23:11.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep

07:23:11.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps

07:23:11.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep

07:23:11.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler

07:23:11.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

07:23:11.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize

07:23:11.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest

07:23:11.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:11.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:23:11.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane

07:23:11.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

07:23:11.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions

07:23:11.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

07:23:11.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid

07:23:11.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives, DisplayName: testSplinePartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

07:23:11.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives

07:23:11.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives, DisplayName: testMatchingPartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

07:23:11.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives

07:23:11.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.BigRealFieldTest

07:23:11.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:11.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.util.BigRealFieldTest)

07:23:11.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne

07:23:11.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.util.BigRealFieldTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero
07:23:11.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.BigRealFieldTest)

07:23:11.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial

07:23:11.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:23:11.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest

07:23:11.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:11.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

07:23:11.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters

07:23:11.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

07:23:11.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction

07:23:11.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

07:23:11.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction

07:23:11.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

07:23:11.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest

07:23:11.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:11.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest)

07:23:11.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors

07:23:11.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:23:11.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest

07:23:11.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:11.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

07:23:11.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency

07:23:11.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

07:23:11.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone

07:23:11.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

07:23:11.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization

07:23:11.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.ValueServerTest

07:23:11.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:23:11.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties, DisplayName: testProperties(org.apache.commons.math.random.ValueServerTest)

07:23:11.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties

07:23:11.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes, DisplayName: testModes(org.apache.commons.math.random.ValueServerTest)

07:23:11.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes

07:23:11.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill, DisplayName: testFill(org.apache.commons.math.random.ValueServerTest)

07:23:11.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill

07:23:11.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile, DisplayName: testEmptyDigestFile(org.apache.commons.math.random.ValueServerTest)

07:23:11.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile

07:23:11.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile, DisplayName: testEmptyReplayFile(org.apache.commons.math.random.ValueServerTest)

07:23:11.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile

07:23:11.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail, DisplayName: testNextDigestFail(org.apache.commons.math.random.ValueServerTest)

07:23:11.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail

07:23:11.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay, DisplayName: testReplay(org.apache.commons.math.random.ValueServerTest)

07:23:11.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay

07:23:11.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest, DisplayName: testNextDigest(org.apache.commons.math.random.ValueServerTest)

07:23:11.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest

07:23:11.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest

07:23:11.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:11.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples
07:23:11.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization

07:23:11.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation

07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency
07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode

07:23:11.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency

07:23:11.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

07:23:11.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency

07:23:11.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:23:11.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.TransformerMapTest

07:23:11.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:23:11.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.util.TransformerMapTest)

07:23:11.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer, DisplayName: testContainsTransformer(org.apache.commons.math.util.TransformerMapTest)

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers, DisplayName: testTransformers(org.apache.commons.math.util.TransformerMapTest)

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer, DisplayName: testPutTransformer(org.apache.commons.math.util.TransformerMapTest)

07:23:11.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer

07:23:11.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass, DisplayName: testContainsClass(org.apache.commons.math.util.TransformerMapTest)

07:23:11.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass

07:23:11.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses, DisplayName: testClasses(org.apache.commons.math.util.TransformerMapTest)

07:23:11.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses

07:23:11.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.TransformerMapTest)

07:23:11.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial

07:23:11.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer, DisplayName: testRemoveTransformer(org.apache.commons.math.util.TransformerMapTest)

07:23:11.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer

07:23:11.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.EigenDecompositionImplTest
07:23:11.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

07:23:11.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit, DisplayName: testDimension4WithoutSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit

07:23:11.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors, DisplayName: testEigenvectors(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors

07:23:11.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal, DisplayName: testTridiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal

07:23:11.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1, DisplayName: testDimension1(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1

07:23:11.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2, DisplayName: testDimension2(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2

07:23:11.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3, DisplayName: testDimension3(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3

07:23:11.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions

07:23:11.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues, DisplayName: testEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues

07:23:11.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue, DisplayName: testRepeatedEigenvalue(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue

07:23:11.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt, DisplayName: testAEqualVDVt(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt

07:23:11.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308, DisplayName: testMath308(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308

07:23:11.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal, DisplayName: testDiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal

07:23:11.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues, DisplayName: testDistinctEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues

07:23:11.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal

07:23:11.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot, DisplayName: testDimension3MultipleRoot(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot
07:23:11.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02, DisplayName: testMathpbx02(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:23:11.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:11.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02

07:23:11.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03, DisplayName: testMathpbx03(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:11.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03

07:23:11.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix, DisplayName: testBigMatrix(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:12.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix

07:23:12.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit, DisplayName: testDimension4WithSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:12.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit

07:23:12.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide, DisplayName: testZeroDivide(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:23:12.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide

07:23:12.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.ArrayFieldVectorTest

07:23:12.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:23:12.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors

07:23:12.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc

07:23:12.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors

07:23:12.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions

07:23:12.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut

07:23:12.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions

07:23:12.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayFieldVectorTest)

07:23:12.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial

07:23:12.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolver2Test

07:23:12.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:12.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

07:23:12.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters

07:23:12.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

07:23:12.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction

07:23:12.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

07:23:12.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function

07:23:12.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

07:23:12.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction

07:23:12.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

07:23:12.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest

07:23:12.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:12.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction, DisplayName: testCumulativeDensityFunction(org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest)
07:23:12.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction

07:23:12.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.UniformRandomGeneratorTest

07:23:12.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:12.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.UniformRandomGeneratorTest)

07:23:12.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation

07:23:12.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:23:12.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest

07:23:12.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:12.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid, DisplayName: testCentroid(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
07:23:12.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid

07:23:12.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
* Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance
07:23:12.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference, DisplayName: testArrayIsReference(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
* Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference

07:23:12.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)

07:23:12.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial

07:23:12.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest

07:23:12.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:12.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)

07:23:12.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency

07:23:12.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)

07:23:12.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone

07:23:12.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)

07:23:12.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization

07:23:12.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolverTest

07:23:12.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:12.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolverTest)

07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters

07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)

07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction
07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolverTest)

07:23:12.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function

07:23:12.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)

07:23:12.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction

07:23:12.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest

07:23:12.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:12.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials, DisplayName: testFirstChebyshevPolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials

07:23:12.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre, DisplayName: testHighDegreeLegendre(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre

07:23:12.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials, DisplayName: testLaguerreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials

07:23:12.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials, DisplayName: testHermiteDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials

07:23:12.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds, DisplayName: testChebyshevBounds(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds

07:23:12.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials, DisplayName: testFirstHermitePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials
* Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials, DisplayName: testFirstLegendrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
* Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials
* Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials, DisplayName: testChebyshevDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
* Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials
* Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials, DisplayName: te
07:23:12.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - stFirstLaguerrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials

07:23:12.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials, DisplayName: testLegendreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

07:23:12.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials

07:23:12.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.util.ExceptionContextTest

07:23:12.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:12.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage, DisplayName: testNoArgAddMessage(org.apache.commons.math.exception.util.ExceptionContextTest)
07:23:12.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage

07:23:12.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable, DisplayName: testSerializeUnserializable(org.apache.commons.math.exception.util.ExceptionContextTest)

07:23:12.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable

07:23:12.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain, DisplayName: testMessageChain(org.apache.commons.math.exception.util.ExceptionContextTest)

07:23:12.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain

07:23:12.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize, DisplayName: testSerialize(org.apache.commons.math.exception.util.ExceptionContextTest)

07:23:12.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize

07:23:12.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext, DisplayName: testContext(org.apache.commons.math.exception.util.ExceptionContextTest)

07:23:12.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext

07:23:12.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.MinpackTest

07:23:12.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18

07:23:12.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1, DisplayName: testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1

07:23:12.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis, DisplayName: testMinpackBrownDennis(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis

07:23:12.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson, DisplayName: testMinpackJennrichSampson(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson

07:23:12.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok, DisplayName: testMinpackRosenbrok(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok

07:23:12.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional, DisplayName: testMinpackBox3Dimensional(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional

07:23:12.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley, DisplayName: testMinpackHelicalValley(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley

07:23:12.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer, DisplayName: testMinpackMeyer(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer

07:23:12.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank, DisplayName: testMinpackLinearFullRank(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank

07:23:12.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth, DisplayName: testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth

07:23:12.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1, DisplayName: testMinpackOsborne1(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1

07:23:12.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2, DisplayName: testMinpackOsborne2(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2

07:23:12.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson, DisplayName: testMinpackWatson(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson

07:23:12.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne, DisplayName: testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne

07:23:12.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular, DisplayName: testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular

07:23:12.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad, DisplayName: testMinpackChebyquad(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad

07:23:12.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows, DisplayName: testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows

07:23:12.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard, DisplayName: testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard

07:23:12.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear, DisplayName: testMinpackBrownAlmostLinear(org.apache.commons.math.optimization.general.MinpackTest)

07:23:12.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear

07:23:12.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SkewnessTest

07:23:12.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:23:12.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN

07:23:12.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples

07:23:12.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization

07:23:12.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation

07:23:12.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency

07:23:12.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode

07:23:12.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency

07:23:12.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.965 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial

07:23:12.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy

07:23:12.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation

07:23:12.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

07:23:12.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency

07:23:12.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

07:23:12.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.BinaryMutationTest

07:23:12.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:12.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.BinaryMutationTest)
07:23:12.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate

07:23:12.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.GaussianFitterTest
07:23:12.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:23:12.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01, DisplayName: testFit01(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01

07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02, DisplayName: testFit02(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02
07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03, DisplayName: testFit03(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03
07:23:12.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:12.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04, DisplayName: testFit04(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04

07:23:12.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05, DisplayName: testFit05(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05

07:23:12.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06, DisplayName: testFit06(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06

07:23:12.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07, DisplayName: testFit07(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:12.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07

07:23:12.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519, DisplayName: testMath519(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

07:23:13.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519

07:23:13.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest

07:23:13.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:13.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

07:23:13.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency

07:23:13.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

07:23:13.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone

07:23:13.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

07:23:13.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization

07:23:13.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
07:23:13.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.exception.DimensionMismatchExceptionTest

07:23:13.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:13.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.DimensionMismatchExceptionTest)
07:23:13.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors

07:23:13.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.BigRealTest

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.util.BigRealTest)

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.util.BigRealTest)

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract

07:23:13.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.util.BigRealTest)

07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo

07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.util.BigRealTest)

07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue
07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.util.BigRealTest)

07:23:13.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide

07:23:13.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.util.BigRealTest)

07:23:13.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply

07:23:13.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.BigRealTest)

07:23:13.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode

07:23:13.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.BigRealTest)

07:23:13.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial

07:23:13.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue
07:23:13.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.util.BigRealTest)

07:23:13.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor

07:23:13.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.data.LewTest
07:23:13.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:13.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LewTest)

07:23:13.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues

07:23:13.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathConfigurationExceptionTest
07:23:13.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:13.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathConfigurationExceptionTest)

07:23:13.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause

07:23:13.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathConfigurationExceptionTest)

07:23:13.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor

07:23:13.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

07:23:13.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest

07:23:13.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:13.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean

07:23:13.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary

07:23:13.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization

07:23:13.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats

07:23:13.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy

07:23:13.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts

07:23:13.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions

07:23:13.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection

07:23:13.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState

07:23:13.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

07:23:13.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode

07:23:13.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

07:23:13.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.MathRuntimeExceptionTest

07:23:13.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:13.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testNoArgAddMessage, DisplayName: testNoArgAddMessage(org.apache.commons.math.exception.MathRuntimeExceptionTest)

07:23:13.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testNoArgAddMessage

07:23:13.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testSerializeUnserializable, DisplayName: testSerializeUnserializable(org.apache.commons.math.exception.MathRuntimeExceptionTest)

07:23:13.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testSerializeUnserializable

07:23:13.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testMessageChain, DisplayName: testMessageChain(org.apache.commons.math.exception.MathRuntimeExceptionTest)

07:23:13.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testMessageChain

07:23:13.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testSerialize, DisplayName: testSerialize(org.apache.commons.math.exception.MathRuntimeExceptionTest)

07:23:13.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testSerialize

07:23:13.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testContext, DisplayName: testContext(org.apache.commons.math.exception.MathRuntimeExceptionTest)

07:23:13.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MathRuntimeExceptionTest, MethodName: testContext

07:23:13.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

07:23:13.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest

07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooSmallExceptionTest)
07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors

07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:23:13.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.PoissonDistributionTest

07:23:13.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:23:13.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability, DisplayName: testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability

07:23:13.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial, DisplayName: testCumulativeProbabilitySpecial(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial

07:23:13.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean

07:23:13.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability, DisplayName: testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability

07:23:13.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts

07:23:13.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability, DisplayName: testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability

07:23:13.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability, DisplayName: testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability

07:23:13.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities

07:23:13.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:13.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling

07:23:13.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities

07:23:13.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments

07:23:13.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PoissonDistributionTest)

07:23:13.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments

07:23:13.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest

07:23:13.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:13.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)
07:23:13.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues

07:23:13.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)

07:23:13.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor

07:23:13.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary

07:23:13.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:13.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestBinary)

07:23:13.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test

07:23:13.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest

07:23:13.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:13.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin, DisplayName: testInterpolateSin(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

07:23:13.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

07:23:13.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear

07:23:13.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

07:23:13.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment

07:23:13.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.RandomDataTest
07:23:13.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 29

07:23:13.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomDataTest)

07:23:13.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal

07:23:13.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomDataTest)

07:23:13.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample

07:23:13.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomDataTest)
* Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues
07:23:13.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:13.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomDataTest)

07:23:13.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints

07:23:13.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomDataTest)

07:23:13.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian

07:23:13.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomDataTest)

07:23:13.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF

07:23:13.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomDataTest)

07:23:13.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT

07:23:13.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomDataTest)

07:23:13.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare

07:23:13.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomDataTest)

07:23:13.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong

07:23:13.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomDataTest)

07:23:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex

07:23:13.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomDataTest)

07:23:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt

07:23:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomDataTest)

07:23:15.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency

07:23:15.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomDataTest)

07:23:15.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric

07:23:15.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomDataTest)
* Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues
07:23:15.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomDataTest)

07:23:15.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential

07:23:15.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomDataTest)

07:23:15.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson

07:23:15.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomDataTest)

07:23:15.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform

07:23:15.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomDataTest)

07:23:15.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation

07:23:15.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomDataTest)

07:23:15.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial

07:23:15.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomDataTest)

07:23:15.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig

07:23:15.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomDataTest)

07:23:15.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate

07:23:15.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomDataTest)

07:23:15.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex

07:23:15.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomDataTest)

07:23:15.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt

07:23:15.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomDataTest)

07:23:15.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy

07:23:15.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomDataTest)

07:23:15.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma

07:23:15.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomDataTest)

07:23:15.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull

07:23:15.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomDataTest)

07:23:15.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta

07:23:15.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomDataTest)

07:23:15.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong

07:23:15.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomDataTest)

07:23:15.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf

07:23:15.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 29
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.MaxCountExceededExceptionTest

07:23:15.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:15.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.MaxCountExceededExceptionTest)

07:23:15.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors

07:23:15.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
07:23:15.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.function.LogisticTest

07:23:15.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:23:15.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues

07:23:15.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1

07:23:15.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5
07:23:15.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6

07:23:15.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5, DisplayName: testGradientComponent5(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5

07:23:15.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1

07:23:15.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2

07:23:15.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid, DisplayName: testCompareDerivativeSigmoid(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid

07:23:15.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid, DisplayName: testCompareSigmoid(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid

07:23:15.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4, DisplayName: testGradientComponent0Component4(org.apache.commons.math.analysis.function.LogisticTest)

07:23:15.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4

07:23:15.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3, DisplayName: testGradientComponent1Component2Component3(org.apache.commons.math.analysis.function.LogisticTest)
* Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3
07:23:15.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.GaussianRandomGeneratorTest

07:23:15.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:15.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.GaussianRandomGeneratorTest)

07:23:15.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation

07:23:15.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.HarmonicOscillatorTest

07:23:15.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:23:15.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative

07:23:15.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues

07:23:15.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue

07:23:15.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1

07:23:15.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2

07:23:15.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3

07:23:15.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

07:23:15.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4

07:23:15.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
* Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient
07:23:15.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:23:15.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.ChiSquareTestTest

07:23:15.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

07:23:15.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts, DisplayName: testChiSquareDataSetsComparisonEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts

07:23:15.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence

07:23:15.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts, DisplayName: testChiSquareDataSetsComparisonUnEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts

07:23:15.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount
07:23:15.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic

07:23:15.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare

07:23:15.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts, DisplayName: testChiSquareDataSetsComparisonBadCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

07:23:15.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts

07:23:15.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0

07:23:15.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest

07:23:15.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:23:15.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck

07:23:15.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward

07:23:15.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps

07:23:15.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent

07:23:15.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNoDenseOutput, DisplayName: testNoDenseOutput(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNoDenseOutput

07:23:15.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep

07:23:15.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative

07:23:15.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck
07:23:15.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents

07:23:15.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler

07:23:15.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

07:23:15.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance

07:23:15.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.NormalDistributionTest

07:23:15.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

07:23:15.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues, DisplayName: testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues

07:23:15.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions

07:23:15.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation, DisplayName: testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation

07:23:15.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles, DisplayName: testQuantiles(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles

07:23:15.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean, DisplayName: testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean

07:23:15.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280, DisplayName: testMath280(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280

07:23:15.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts

07:23:15.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity

07:23:15.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:23:15.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities

07:23:15.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:15.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling

07:23:15.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities

07:23:15.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments

07:23:15.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.NormalDistributionTest)

07:23:15.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency

07:23:15.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.PascalDistributionTest

07:23:15.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:15.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts

07:23:15.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0

07:23:15.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1

07:23:15.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities

07:23:15.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:15.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling

07:23:15.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities

07:23:15.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments

07:23:15.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PascalDistributionTest)

07:23:15.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments

07:23:15.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
07:23:15.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.WeibullDistributionTest

07:23:15.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha, DisplayName: testAlpha(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha
07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta, DisplayName: testBeta(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta
07:23:15.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts

07:23:15.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
07:23:15.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities
07:23:15.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:15.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling

07:23:15.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities

07:23:15.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments

07:23:15.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.WeibullDistributionTest)

07:23:15.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency

07:23:15.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest

07:23:15.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:15.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

07:23:15.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency

07:23:15.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

07:23:15.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization

07:23:15.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.events.EventStateTest
07:23:15.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:15.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents, DisplayName: closeEvents(org.apache.commons.math.ode.events.EventStateTest)
07:23:15.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents

07:23:15.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest

07:23:15.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:15.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage, DisplayName: testLessThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:23:15.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage

07:23:15.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine, DisplayName: testSine(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:23:15.594 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine

07:23:15.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples, DisplayName: testTooFewSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:23:15.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples

07:23:15.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage, DisplayName: testMoreThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:23:15.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage

07:23:15.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples, DisplayName: testUnsortedSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:23:15.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples

07:23:15.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

07:23:15.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.ContinuousOutputModelTest

07:23:15.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:15.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:23:15.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries

07:23:15.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging, DisplayName: testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:23:15.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging

07:23:15.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess, DisplayName: testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:23:15.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess

07:23:15.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions, DisplayName: testErrorConditions(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:23:15.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions

07:23:15.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.util.ArgUtilsTest

07:23:15.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:23:15.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten, DisplayName: testFlatten(org.apache.commons.math.exception.util.ArgUtilsTest)

07:23:15.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten

07:23:15.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexTableauTest

07:23:15.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:15.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization, DisplayName: testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:23:15.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization

07:23:15.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars, DisplayName: testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:23:15.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars

07:23:15.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:23:15.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial

07:23:15.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective, DisplayName: testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:23:15.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective

07:23:15.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:23:15.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumLogTest

07:23:15.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

07:23:15.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues

07:23:15.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples
07:23:15.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization

07:23:15.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation

07:23:15.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency

07:23:15.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode

07:23:15.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency

07:23:15.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial

07:23:15.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy

07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation

07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency

07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
07:23:15.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.FieldLUDecompositionImplTest

07:23:15.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:15.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation

07:23:15.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular

07:23:15.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions

07:23:15.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare

07:23:15.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular

07:23:15.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular

07:23:15.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU

07:23:15.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1

07:23:15.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:23:15.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2

07:23:15.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ExponentialDistributionTest

07:23:15.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:23:15.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions

07:23:15.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2, DisplayName: testCumulativeProbability2(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2

07:23:15.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes

07:23:15.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts
07:23:15.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity

07:23:15.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:23:15.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors, DisplayName: testMeanAccessors(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors

07:23:15.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities

07:23:15.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:15.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling

07:23:15.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities

07:23:15.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments

07:23:15.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:23:15.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency

07:23:15.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13

07:23:15.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.PolynomialFitterTest

07:23:15.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:15.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError, DisplayName: testSmallError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:23:15.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError

07:23:15.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable, DisplayName: testRedundantSolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:23:15.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable

07:23:15.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:23:15.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError

07:23:15.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable, DisplayName: testRedundantUnsolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:23:15.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable

07:23:15.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:23:15.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VarianceTest

07:23:15.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:23:15.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN

07:23:15.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance, DisplayName: testWeightedVariance(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance

07:23:15.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation

07:23:15.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples

07:23:15.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization

07:23:15.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation

07:23:15.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency

07:23:15.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode

07:23:15.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency

07:23:15.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial

07:23:15.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy
07:23:15.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation
07:23:15.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:15.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:23:15.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency

07:23:15.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13

07:23:15.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.HypergeometricDistributionTest

07:23:15.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:23:15.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues

07:23:16.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures, DisplayName: testDegenerateNoFailures(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures

07:23:16.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors

07:23:16.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions

07:23:16.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses, DisplayName: testDegenerateNoSuccesses(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses

07:23:16.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample, DisplayName: testDegenerateFullSample(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample
07:23:16.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts

07:23:16.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues, DisplayName: testMoreLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues

07:23:16.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities

07:23:16.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities

07:23:16.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling

07:23:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)
* Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities
07:23:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments

07:23:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:23:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments

07:23:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest

07:23:16.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:23:16.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:23:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters

07:23:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:23:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction

07:23:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:23:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function

07:23:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.univariate.BrentOptimizerTest

07:23:16.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:16.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax, DisplayName: testQuinticMax(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:23:16.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax

07:23:16.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:23:16.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin

07:23:16.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints, DisplayName: testMinEndpoints(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:23:16.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints

07:23:16.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics, DisplayName: testQuinticMinStatistics(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:23:16.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics

07:23:16.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:23:16.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin

07:23:16.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexSolverTest
07:23:16.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 22

07:23:16.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative, DisplayName: testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative

07:23:16.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon, DisplayName: testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon

07:23:16.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution, DisplayName: testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution

07:23:16.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint, DisplayName: testSingleVariableAndConstraint(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint
07:23:16.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver, DisplayName: testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver

07:23:16.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ, DisplayName: testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ

07:23:16.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ, DisplayName: testMath290LEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ

07:23:16.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel, DisplayName: testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel

07:23:16.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution, DisplayName: testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution

07:23:16.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272, DisplayName: testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272

07:23:16.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286, DisplayName: testMath286(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286

07:23:16.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288, DisplayName: testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288

07:23:16.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293, DisplayName: testMath293(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293

07:23:16.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars, DisplayName: testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars

07:23:16.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization, DisplayName: testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization

07:23:16.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2, DisplayName: testMath434PivotRowSelection2(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2

07:23:16.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy, DisplayName: testDegeneracy(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy

07:23:16.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection, DisplayName: testMath434PivotRowSelection(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection

07:23:16.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel, DisplayName: testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel

07:23:16.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable, DisplayName: testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable

07:23:16.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution, DisplayName: testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution

07:23:16.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable, DisplayName: testMath434NegativeVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:23:16.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable

07:23:16.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 22
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.RiddersSolverTest

07:23:16.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:23:16.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:23:16.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters

07:23:16.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:23:16.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction

07:23:16.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:23:16.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function

07:23:16.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:23:16.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction

07:23:16.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerTest

07:23:16.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:23:16.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)

07:23:16.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries

07:23:16.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd, DisplayName: testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)

07:23:16.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd

07:23:16.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

07:23:16.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.CholeskyDecompositionImplTest

07:23:16.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:23:16.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues

07:23:16.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException, DisplayName: testNotSymmetricMatrixException(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException

07:23:16.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions

07:23:16.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274, DisplayName: testMath274(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274

07:23:16.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare

07:23:16.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite, DisplayName: testNotPositiveDefinite(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite

07:23:16.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular

07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed, DisplayName: testLTTransposed(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed

07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT, DisplayName: testAEqualLLT(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT

07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest
07:23:16.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean
07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary

07:23:16.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization

07:23:16.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions

07:23:16.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection

07:23:16.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState

07:23:16.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:23:16.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode

07:23:16.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest

07:23:16.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:23:16.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation, DisplayName: testAggregation(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:23:16.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation

07:23:16.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues, DisplayName: testAggregateSpecialValues(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:23:16.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues

07:23:16.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency, DisplayName: testAggregationConsistency(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:23:16.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency

07:23:16.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate, DisplayName: testAggregate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:23:16.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate

07:23:16.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate, DisplayName: testAggregateDegenerate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:23:16.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate

07:23:16.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

07:23:17.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - <<< End subprocess output
07:23:18.166 [main] DEBUG f.i.l.r.n.s.g.GZoltarSuspiciousProgramStatements - Suspicious statements:
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=174, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=175, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=188, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=190, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=191, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=192, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=193, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=194, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=195, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=197, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=199, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=205, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=208, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=209, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=210, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=211, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=212, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=213, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=214, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=215, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=216, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=217, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=218, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=219, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=220, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=221, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=223, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=226, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=227, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=228, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=229, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=230, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=231, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=232, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=233, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=234, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=235, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=236, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=237, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=238, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=239, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=242, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=248, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=266, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=295, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=296, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=328, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=329, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=383, Suspiciousness=0.19611613513818404]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=393, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=400, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=522, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=523, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=524, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=525, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=527, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=529, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=530, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=532, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=533, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=536, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=537, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=538, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=541, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=542, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=543, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=546, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=547, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=529, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=551, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=553, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=554, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=555, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=556, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=553, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=560, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=562, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=570, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=573, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=574, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=575, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=576, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=578, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=579, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=580, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=582, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=583, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=584, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=586, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=587, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=588, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=589, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=590, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=593, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=603, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=604, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=605, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=606, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=607, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=616, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=618, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=619, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=620, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=621, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=623, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=625, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=626, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=627, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=629, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=630, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=634, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=645, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=646, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=647, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=648, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=649, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=652, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=653, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=654, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=655, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=656, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=657, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=659, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=662, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=728, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=729, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=731, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=732, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=733, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=735, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=736, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=737, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=738, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=739, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=740, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=741, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=743, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=746, Suspiciousness=0.7071067811865475]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=202, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=203, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=209, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=212, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=213, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=214, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=216, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=217, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=225, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=226, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=227, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=229, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=232, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=233, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=234, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=235, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=236, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=237, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=240, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=250, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=318, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=319, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=320, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=321, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=322, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=323, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=324, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=330, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=333, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=334, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=335, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=336, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=337, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=339, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=340, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=341, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=342, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=345, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=351, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=357, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=364, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=365, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=366, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=370, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=371, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=393, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=397, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=398, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=402, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=405, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=407, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=408, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=411, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=412, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=415, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=416, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=419, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=421, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=422, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=427, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=428, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=429, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=430, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=431, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=432, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=434, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=435, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=439, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=440, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=443, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=444, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=445, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=446, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=447, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=450, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=455, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=456, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=457, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=458, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=463, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=465, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=466, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=469, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=470, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=478, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=483, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=484, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=488, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=489, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=491, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=492, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=493, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=494, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=501, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=502, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=503, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=506, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=507, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=508, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=507, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=514, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=515, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=519, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=514, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=523, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=525, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=527, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=530, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=538, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=539, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=540, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=541, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=542, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=543, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=544, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=594, Suspiciousness=0.15075567228888181]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=601, Suspiciousness=0.15075567228888181]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=632, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=639, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=646, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=666, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=667, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=666, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=669, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=670, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=671, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=678, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=679, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=678, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=681, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=682, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=683, Suspiciousness=0.18257418583505536]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=694, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=695, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=697, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=699, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=700, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=701, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=704, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=705, Suspiciousness=0.17677669529663687]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=708, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=710, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=711, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=713, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=714, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=716, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=719, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=720, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=725, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=726, Suspiciousness=0.20851441405707477]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=729, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=731, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=719, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=737, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=738, Suspiciousness=0.20851441405707477]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=739, Suspiciousness=0.20851441405707477]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=742, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=753, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=762, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=768, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=778, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=787, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=793, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=807, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=817, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=818, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=819, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=823, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=844, Suspiciousness=0.2773500981126146]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=848, Suspiciousness=0.31622776601683794]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=859, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=861, Suspiciousness=0.24253562503633297]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=864, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=873, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=877, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=881, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=886, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=887, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=888, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=891, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=892, Suspiciousness=0.17677669529663687]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=897, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=898, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=899, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=902, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=903, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=897, Suspiciousness=0.15617376188860607]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=907, Suspiciousness=0.16012815380508713]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1144, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1145, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1146, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1145, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1149, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1150, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1151, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1152, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1153, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1154, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1151, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1157, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1167, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1175, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1206, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1207, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1210, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1213, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1214, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1216, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1217, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1220, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1221, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1222, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1228, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1229, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1232, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1233, Suspiciousness=0.22941573387056174]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1237, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1238, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1239, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1240, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1242, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1246, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1247, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1248, Suspiciousness=0.1796053020267749]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1250, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1255, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1256, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1257, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1258, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1259, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1256, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1261, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1262, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1267, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1268, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1269, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1270, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1271, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1272, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1273, Suspiciousness=0.2886751345948129]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1278, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1279, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1280, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1282, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1283, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1284, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1285, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1286, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1278, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1291, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1292, Suspiciousness=0.31622776601683794]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1294, Suspiciousness=0.31622776601683794]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1296, Suspiciousness=0.31622776601683794]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1301, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1302, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1303, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1306, Suspiciousness=0.17407765595569785]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1313, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1314, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1315, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1323, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1331, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1332, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1350, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1351, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1367, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1369, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1370, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1371, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1372, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1373, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1370, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1376, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1383, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1389, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1395, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1397, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1398, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1401, Suspiciousness=0.1259881576697424]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1412, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1419, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1422, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1459, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1461, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1462, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1463, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1464, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1465, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1467, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1468, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1463, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1470, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1461, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1474, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1475, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1476, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1477, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1478, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1475, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1483, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1484, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1483, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1488, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1489, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1491, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1493, Suspiciousness=0.25]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1497, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1498, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1503, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1504, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1507, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1584, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1587, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1591, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1598, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1601, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1632, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1633, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1634, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1635, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1636, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1637, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1638, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1641, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1642, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1643, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1647, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1648, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1649, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1650, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1655, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1656, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1657, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1658, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1655, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1662, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1663, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1667, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1668, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1669, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1671, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1672, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1674, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1677, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1678, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1679, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1680, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1681, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1682, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1678, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1686, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1687, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1688, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1689, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1690, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1687, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1694, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1696, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1697, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1701, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1702, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1704, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1705, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1706, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1711, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1712, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1713, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1714, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1716, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1717, Suspiciousness=0.19611613513818404]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1712, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1721, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1722, Suspiciousness=0.2672612419124244]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1725, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1726, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1728, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1731, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1732, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1733, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1736, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1741, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1743, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1747, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1748, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1749, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1748, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1663, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1754, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1755, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1756, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1757, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1758, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1755, Suspiciousness=0.19611613513818404]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1763, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1764, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1763, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1768, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1769, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1771, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1772, Suspiciousness=0.2886751345948129]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1775, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1776, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1781, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1782, Suspiciousness=0.19611613513818404]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1785, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1796, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1807, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1817, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1825, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1827, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1828, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1829, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1830, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1831, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1832, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1828, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1835, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1837, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1838, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1839, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1840, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1841, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1844, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1845, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1846, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1849, Suspiciousness=0.20412414523193154]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1859, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1864, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1884, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1895, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1898, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1903, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1905, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1906, Suspiciousness=0.4472135954999579]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1914, Suspiciousness=0.5]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1917, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1922, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1923, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1924, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1925, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1926, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1927, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1928, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1929, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1930, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1931, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1933, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1940, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1941, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1945, Suspiciousness=0.4082482904638631]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1954, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1963, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1967, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2056, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2057, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2059, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2060, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2062, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2064, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2065, Suspiciousness=0.2581988897471611]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2066, Suspiciousness=0.2581988897471611]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2067, Suspiciousness=0.2581988897471611]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2070, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2078, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2079, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2080, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2081, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2082, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2083, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2084, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2085, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2078, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2089, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2097, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2103, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2104, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2105, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2107, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2108, Suspiciousness=0.2581988897471611]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2112, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2113, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2117, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2118, Suspiciousness=0.2773500981126146]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2121, Suspiciousness=0.17149858514250882]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2133, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2135, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2143, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2145, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2146, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2147, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2150, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2152, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2153, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2156, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2161, Suspiciousness=0.1889822365046136]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2184, Suspiciousness=0.16666666666666666]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2187, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2203, Suspiciousness=0.14586499149789456]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=958, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=960, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=964, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=968, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=975, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=986, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=993, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=994, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=995, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=996, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=994, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=999, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1095, Suspiciousness=0.21320071635561041]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1098, Suspiciousness=0.21320071635561041]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1101, Suspiciousness=0.21320071635561041]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1104, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=407, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=653, Suspiciousness=0.18569533817705186]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=917, Suspiciousness=0.2]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1040, Suspiciousness=0.2581988897471611]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=213, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=215, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=217, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=222, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=223, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=224, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=229, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=231, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=235, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=236, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=237, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=238, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=239, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=241, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=242, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=244, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=245, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=247, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=249, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=250, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=253, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=414, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=575, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=660, Suspiciousness=0.2182178902359924]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=800, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2304, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2312, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2316, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2317, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2318, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2325, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2326, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2327, Suspiciousness=0.22941573387056174]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2330, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2331, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2335, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2339, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2340, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2341, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2344, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2348, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2353, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2354, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2355, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2356, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2358, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2365, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2369, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2374, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2375, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2377, Suspiciousness=0.22360679774997896]
GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2381, Suspiciousness=0.22360679774997896]
07:23:19.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause started...]
07:23:19.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
07:23:19.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. org.apache.commons.math.ConvergenceExceptionTest#testConstructor started...]
07:23:19.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
07:23:19.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause started...]
07:23:19.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
07:23:19.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. org.apache.commons.math.MathConfigurationExceptionTest#testConstructor started...]
07:23:19.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
07:23:19.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. org.apache.commons.math.MathExceptionTest#testSerialization started...]
07:23:19.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
07:23:19.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. org.apache.commons.math.MathExceptionTest#testConstructorCause started...]
07:23:19.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
07:23:19.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. org.apache.commons.math.MathExceptionTest#testPrintStackTrace started...]
07:23:19.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
07:23:19.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. org.apache.commons.math.MathExceptionTest#testConstructor started...]
07:23:19.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
07:23:19.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes started...]
07:23:19.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
07:23:19.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. org.apache.commons.math.RetryRunnerTest#testRetryFailAlways started...]
07:23:19.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
07:23:19.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. org.apache.commons.math.analysis.FunctionUtilsTest#testCollector started...]
07:23:19.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
07:23:19.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments started...]
07:23:19.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
07:23:19.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. org.apache.commons.math.analysis.FunctionUtilsTest#testAdd started...]
07:23:19.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
07:23:19.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. org.apache.commons.math.analysis.FunctionUtilsTest#testSinc started...]
07:23:19.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
07:23:19.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. org.apache.commons.math.analysis.FunctionUtilsTest#testCombine started...]
07:23:19.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
07:23:19.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. org.apache.commons.math.analysis.FunctionUtilsTest#testCompose started...]
07:23:19.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
07:23:19.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply started...]
07:23:19.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
07:23:19.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. org.apache.commons.math.analysis.function.GaussianTest#testDerivative started...]
07:23:19.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
07:23:19.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN started...]
07:23:19.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
07:23:19.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. org.apache.commons.math.analysis.function.GaussianTest#testSomeValues started...]
07:23:19.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
07:23:19.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. org.apache.commons.math.analysis.function.GaussianTest#testParametricValue started...]
07:23:19.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
07:23:19.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. org.apache.commons.math.analysis.function.GaussianTest#testPreconditions started...]
07:23:19.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
07:23:19.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1 started...]
07:23:19.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
07:23:19.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2 started...]
07:23:19.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. SUCCESS]
07:23:19.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3 started...]
07:23:19.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
07:23:19.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4 started...]
07:23:19.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. SUCCESS]
07:23:19.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5 started...]
07:23:19.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
07:23:19.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6 started...]
07:23:19.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. SUCCESS]
07:23:19.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments started...]
07:23:19.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
07:23:19.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments started...]
07:23:19.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
07:23:19.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient started...]
07:23:19.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
07:23:19.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative started...]
07:23:19.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
07:23:19.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues started...]
07:23:19.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
07:23:19.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue started...]
07:23:19.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
07:23:19.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1 started...]
07:23:19.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
07:23:19.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2 started...]
07:23:19.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
07:23:19.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3 started...]
07:23:19.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
07:23:19.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4 started...]
07:23:19.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
07:23:19.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient started...]
07:23:19.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
07:23:19.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. org.apache.commons.math.analysis.function.LogisticTest#testSomeValues started...]
07:23:19.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
07:23:19.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1 started...]
07:23:19.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
07:23:19.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2 started...]
07:23:19.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
07:23:19.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3 started...]
07:23:19.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
07:23:19.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4 started...]
07:23:19.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
07:23:19.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5 started...]
07:23:19.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6 started...]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5 started...]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1 started...]
07:23:19.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
07:23:19.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2 started...]
07:23:19.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
07:23:19.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid started...]
07:23:19.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
07:23:19.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid started...]
07:23:19.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
07:23:19.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4 started...]
07:23:19.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
07:23:19.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3 started...]
07:23:19.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
07:23:19.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. org.apache.commons.math.analysis.function.LogitTest#testDerivative started...]
07:23:19.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
07:23:19.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. org.apache.commons.math.analysis.function.LogitTest#testSomeValues started...]
07:23:19.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
07:23:19.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. org.apache.commons.math.analysis.function.LogitTest#testParametricValue started...]
07:23:19.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
07:23:19.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1 started...]
07:23:19.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
07:23:19.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2 started...]
07:23:19.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
07:23:19.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3 started...]
07:23:19.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
07:23:19.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4 started...]
07:23:19.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5 started...]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6 started...]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. org.apache.commons.math.analysis.function.LogitTest#testPreconditions1 started...]
07:23:19.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. org.apache.commons.math.analysis.function.LogitTest#testPreconditions2 started...]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments started...]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction started...]
07:23:19.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
07:23:19.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction started...]
07:23:19.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
07:23:19.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. org.apache.commons.math.analysis.function.SigmoidTest#testDerivative started...]
07:23:19.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
07:23:19.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues started...]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue started...]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1 started...]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
07:23:19.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2 started...]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3 started...]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4 started...]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
07:23:19.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments started...]
07:23:19.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. SUCCESS]
07:23:19.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues started...]
07:23:19.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. SUCCESS]
07:23:19.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1 started...]
07:23:19.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. SUCCESS]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2 started...]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. SUCCESS]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3 started...]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. SUCCESS]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4 started...]
07:23:19.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. SUCCESS]
07:23:19.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5 started...]
07:23:19.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. SUCCESS]
07:23:19.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6 started...]
07:23:19.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. SUCCESS]
07:23:19.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside started...]
07:23:19.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. SUCCESS]
07:23:19.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration started...]
07:23:19.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. SUCCESS]
07:23:19.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction started...]
07:23:19.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. SUCCESS]
07:23:19.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction started...]
07:23:19.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. SUCCESS]
07:23:19.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters started...]
07:23:19.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. SUCCESS]
07:23:19.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction started...]
07:23:19.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. SUCCESS]
07:23:19.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction started...]
07:23:19.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. SUCCESS]
07:23:19.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters started...]
07:23:19.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. SUCCESS]
07:23:19.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction started...]
07:23:19.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. SUCCESS]
07:23:19.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction started...]
07:23:19.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. SUCCESS]
07:23:19.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters started...]
07:23:19.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. SUCCESS]
07:23:19.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction started...]
07:23:19.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. SUCCESS]
07:23:19.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction started...]
07:23:19.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. SUCCESS]
07:23:19.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane started...]
07:23:19.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. SUCCESS]
07:23:19.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions started...]
07:23:19.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. SUCCESS]
07:23:19.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid started...]
07:23:19.366 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. SUCCESS]
07:23:19.367 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives started...]
07:23:19.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. SUCCESS]
07:23:19.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives started...]
07:23:19.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. SUCCESS]
07:23:19.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane started...]
07:23:19.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. SUCCESS]
07:23:19.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions started...]
07:23:19.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. SUCCESS]
07:23:19.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid started...]
07:23:19.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. SUCCESS]
07:23:19.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters started...]
07:23:19.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. SUCCESS]
07:23:19.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction started...]
07:23:19.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. SUCCESS]
07:23:19.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function started...]
07:23:19.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. SUCCESS]
07:23:19.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. SUCCESS]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments started...]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. SUCCESS]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear started...]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. SUCCESS]
07:23:19.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
07:23:19.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. SUCCESS]
07:23:19.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness started...]
07:23:19.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. SUCCESS]
07:23:19.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine started...]
07:23:19.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. SUCCESS]
07:23:19.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth started...]
07:23:19.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. SUCCESS]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1 started...]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. SUCCESS]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2 started...]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. SUCCESS]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3 started...]
07:23:19.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. SUCCESS]
07:23:19.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4 started...]
07:23:19.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. SUCCESS]
07:23:19.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5 started...]
07:23:19.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. SUCCESS]
07:23:19.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6 started...]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. SUCCESS]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints started...]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. SUCCESS]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData started...]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. SUCCESS]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1 started...]
07:23:19.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. SUCCESS]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2 started...]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. SUCCESS]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint started...]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. SUCCESS]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1 started...]
07:23:19.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. SUCCESS]
07:23:19.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2 started...]
07:23:19.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. SUCCESS]
07:23:19.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers started...]
07:23:19.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. SUCCESS]
07:23:19.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine started...]
07:23:19.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. SUCCESS]
07:23:19.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments started...]
07:23:19.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. SUCCESS]
07:23:19.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights started...]
07:23:19.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. SUCCESS]
07:23:19.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D started...]
07:23:19.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. SUCCESS]
07:23:19.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D started...]
07:23:19.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. SUCCESS]
07:23:19.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters started...]
07:23:19.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. SUCCESS]
07:23:19.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction started...]
07:23:19.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. SUCCESS]
07:23:19.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function started...]
07:23:19.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. SUCCESS]
07:23:19.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane started...]
07:23:19.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. SUCCESS]
07:23:19.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions started...]
07:23:19.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. SUCCESS]
07:23:19.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid started...]
07:23:19.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. SUCCESS]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin started...]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. SUCCESS]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. SUCCESS]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments started...]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. SUCCESS]
07:23:19.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear started...]
07:23:19.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. SUCCESS]
07:23:19.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
07:23:19.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. SUCCESS]
07:23:19.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane started...]
07:23:19.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. SUCCESS]
07:23:19.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave started...]
07:23:19.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. SUCCESS]
07:23:19.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions started...]
07:23:19.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. SUCCESS]
07:23:19.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane started...]
07:23:19.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. SUCCESS]
07:23:19.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave started...]
07:23:19.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. SUCCESS]
07:23:19.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions started...]
07:23:19.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. SUCCESS]
07:23:19.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage started...]
07:23:19.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. SUCCESS]
07:23:19.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine started...]
07:23:19.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. SUCCESS]
07:23:19.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples started...]
07:23:19.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. SUCCESS]
07:23:19.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage started...]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. SUCCESS]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples started...]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. SUCCESS]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction started...]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. SUCCESS]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction started...]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. SUCCESS]
07:23:19.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters started...]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. SUCCESS]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction started...]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. SUCCESS]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction started...]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. SUCCESS]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction started...]
07:23:19.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. SUCCESS]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters started...]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. SUCCESS]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction started...]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. SUCCESS]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison started...]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. SUCCESS]
07:23:19.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic started...]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. SUCCESS]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication started...]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. SUCCESS]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition started...]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. SUCCESS]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants started...]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. SUCCESS]
07:23:19.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic started...]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. SUCCESS]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341 started...]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. SUCCESS]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear started...]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. SUCCESS]
07:23:19.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial started...]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. SUCCESS]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString started...]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. SUCCESS]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction started...]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. SUCCESS]
07:23:19.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues started...]
07:23:19.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. SUCCESS]
07:23:19.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor started...]
07:23:19.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. SUCCESS]
07:23:19.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials started...]
07:23:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. SUCCESS]
07:23:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre started...]
07:23:19.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. SUCCESS]
07:23:19.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials started...]
07:23:19.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. SUCCESS]
07:23:19.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials started...]
07:23:19.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. SUCCESS]
07:23:19.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds started...]
07:23:19.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. SUCCESS]
07:23:19.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials started...]
07:23:19.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. SUCCESS]
07:23:19.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials started...]
07:23:19.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. SUCCESS]
07:23:19.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials started...]
07:23:19.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. SUCCESS]
07:23:19.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials started...]
07:23:19.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. SUCCESS]
07:23:19.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials started...]
07:23:19.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. SUCCESS]
07:23:19.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369 started...]
07:23:19.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. SUCCESS]
07:23:19.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero started...]
07:23:19.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. SUCCESS]
07:23:19.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero started...]
07:23:19.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. SUCCESS]
07:23:19.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints started...]
07:23:19.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. SUCCESS]
07:23:19.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess started...]
07:23:19.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. SUCCESS]
07:23:19.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints started...]
07:23:19.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. SUCCESS]
07:23:19.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero started...]
07:23:19.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. SUCCESS]
07:23:19.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero started...]
07:23:19.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. SUCCESS]
07:23:19.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction started...]
07:23:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. SUCCESS]
07:23:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction started...]
07:23:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. SUCCESS]
07:23:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters started...]
07:23:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. SUCCESS]
07:23:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction started...]
07:23:19.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. SUCCESS]
07:23:19.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters started...]
07:23:19.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. SUCCESS]
07:23:19.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction started...]
07:23:19.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. SUCCESS]
07:23:19.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function started...]
07:23:19.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. SUCCESS]
07:23:19.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction started...]
07:23:19.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. SUCCESS]
07:23:19.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters started...]
07:23:19.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. SUCCESS]
07:23:19.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction started...]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. SUCCESS]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function started...]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. SUCCESS]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction started...]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. SUCCESS]
07:23:19.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero started...]
07:23:19.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. SUCCESS]
07:23:19.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero started...]
07:23:19.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. SUCCESS]
07:23:19.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters started...]
07:23:19.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. SUCCESS]
07:23:19.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction started...]
07:23:19.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. SUCCESS]
07:23:19.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function started...]
07:23:19.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. SUCCESS]
07:23:19.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction started...]
07:23:19.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. SUCCESS]
07:23:19.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints started...]
07:23:19.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. SUCCESS]
07:23:19.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints started...]
07:23:19.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. SUCCESS]
07:23:19.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero started...]
07:23:19.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. SUCCESS]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero started...]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. SUCCESS]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot started...]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. SUCCESS]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin started...]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. SUCCESS]
07:23:19.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction started...]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. SUCCESS]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin started...]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. SUCCESS]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy started...]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. SUCCESS]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc started...]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. SUCCESS]
07:23:19.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull started...]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. SUCCESS]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin started...]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. SUCCESS]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial started...]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. SUCCESS]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations started...]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. SUCCESS]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints started...]
07:23:19.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. SUCCESS]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot started...]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. SUCCESS]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull started...]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. SUCCESS]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints started...]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. SUCCESS]
07:23:19.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. org.apache.commons.math.complex.ComplexFieldTest#testOne started...]
07:23:19.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. SUCCESS]
07:23:19.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. org.apache.commons.math.complex.ComplexFieldTest#testZero started...]
07:23:19.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. SUCCESS]
07:23:19.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. org.apache.commons.math.complex.ComplexFieldTest#testSerial started...]
07:23:19.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. SUCCESS]
07:23:19.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary started...]
07:23:19.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. SUCCESS]
07:23:19.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat started...]
07:23:19.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. SUCCESS]
07:23:19.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals started...]
07:23:19.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. SUCCESS]
07:23:19.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary started...]
07:23:19.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. SUCCESS]
07:23:19.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar started...]
07:23:19.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. SUCCESS]
07:23:19.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber started...]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. SUCCESS]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. org.apache.commons.math.complex.ComplexFormatTest#testNan started...]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. SUCCESS]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. SUCCESS]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat started...]
07:23:19.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. SUCCESS]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth started...]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. SUCCESS]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal started...]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. SUCCESS]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat started...]
07:23:19.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. SUCCESS]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. SUCCESS]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity started...]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. SUCCESS]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity started...]
07:23:19.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. SUCCESS]
07:23:19.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar started...]
07:23:19.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. SUCCESS]
07:23:19.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex started...]
07:23:19.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. SUCCESS]
07:23:19.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals started...]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. SUCCESS]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. org.apache.commons.math.complex.ComplexFormatTest#testZeroReal started...]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. SUCCESS]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth started...]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. SUCCESS]
07:23:19.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal started...]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. SUCCESS]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary started...]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. SUCCESS]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals started...]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. SUCCESS]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity started...]
07:23:19.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. SUCCESS]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter started...]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. SUCCESS]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal started...]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. SUCCESS]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. org.apache.commons.math.complex.ComplexFormatTest#testParseNan started...]
07:23:19.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. SUCCESS]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary started...]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. SUCCESS]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity started...]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. SUCCESS]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals started...]
07:23:19.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. SUCCESS]
07:23:19.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf started...]
07:23:19.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. SUCCESS]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. org.apache.commons.math.complex.ComplexTest#testTanhInf started...]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. SUCCESS]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. org.apache.commons.math.complex.ComplexTest#testTanhNaN started...]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. SUCCESS]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. org.apache.commons.math.complex.ComplexTest#testConjugateNaN started...]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. SUCCESS]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf started...]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. SUCCESS]
07:23:19.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN started...]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. SUCCESS]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. org.apache.commons.math.complex.ComplexTest#testDivideImaginary started...]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. SUCCESS]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. org.apache.commons.math.complex.ComplexTest#testAcosInf started...]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. SUCCESS]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. org.apache.commons.math.complex.ComplexTest#testAcosNaN started...]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. SUCCESS]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. org.apache.commons.math.complex.ComplexTest#testEqualsClass started...]
07:23:19.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. SUCCESS]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. org.apache.commons.math.complex.ComplexTest#testAddInfinite started...]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. SUCCESS]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. org.apache.commons.math.complex.ComplexTest#testAbs started...]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. SUCCESS]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. org.apache.commons.math.complex.ComplexTest#testAdd started...]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. SUCCESS]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. org.apache.commons.math.complex.ComplexTest#testCos started...]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. SUCCESS]
07:23:19.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. org.apache.commons.math.complex.ComplexTest#testExp started...]
07:23:19.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. SUCCESS]
07:23:19.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. org.apache.commons.math.complex.ComplexTest#testLog started...]
07:23:19.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. SUCCESS]
07:23:19.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. org.apache.commons.math.complex.ComplexTest#testPow started...]
07:23:19.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. SUCCESS]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. org.apache.commons.math.complex.ComplexTest#testSin started...]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. SUCCESS]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. org.apache.commons.math.complex.ComplexTest#testTan started...]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. SUCCESS]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. org.apache.commons.math.complex.ComplexTest#testSubtract started...]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. SUCCESS]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. org.apache.commons.math.complex.ComplexTest#testDivideNaNInf started...]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. SUCCESS]
07:23:19.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. org.apache.commons.math.complex.ComplexTest#testAcos started...]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. SUCCESS]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. org.apache.commons.math.complex.ComplexTest#testAsin started...]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. SUCCESS]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. org.apache.commons.math.complex.ComplexTest#testAtan started...]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. SUCCESS]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. org.apache.commons.math.complex.ComplexTest#testCosh started...]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. SUCCESS]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. org.apache.commons.math.complex.ComplexTest#testSinh started...]
07:23:20.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. SUCCESS]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. org.apache.commons.math.complex.ComplexTest#testTanh started...]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. SUCCESS]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. org.apache.commons.math.complex.ComplexTest#testAsinInf started...]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. SUCCESS]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. org.apache.commons.math.complex.ComplexTest#testAsinNaN started...]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. SUCCESS]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. org.apache.commons.math.complex.ComplexTest#testAtanInf started...]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. SUCCESS]
07:23:20.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. org.apache.commons.math.complex.ComplexTest#testAtanNaN started...]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. SUCCESS]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. org.apache.commons.math.complex.ComplexTest#testDivideNaN started...]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. SUCCESS]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference started...]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. SUCCESS]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. org.apache.commons.math.complex.ComplexTest#testNegateNaN started...]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. SUCCESS]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. org.apache.commons.math.complex.ComplexTest#testTanhCritical started...]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. SUCCESS]
07:23:20.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. org.apache.commons.math.complex.ComplexTest#testPowZero started...]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. SUCCESS]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. org.apache.commons.math.complex.ComplexTest#testScalarMultiply started...]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. SUCCESS]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero started...]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. SUCCESS]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive started...]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. SUCCESS]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. org.apache.commons.math.complex.ComplexTest#testEqualsNull started...]
07:23:20.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. SUCCESS]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. org.apache.commons.math.complex.ComplexTest#testEqualsSame started...]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. SUCCESS]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. org.apache.commons.math.complex.ComplexTest#testEqualsTrue started...]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. SUCCESS]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN started...]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. SUCCESS]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative started...]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. SUCCESS]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. org.apache.commons.math.complex.ComplexTest#testGetArgument started...]
07:23:20.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. SUCCESS]
07:23:20.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. org.apache.commons.math.complex.ComplexTest#testSqrtPolar started...]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. SUCCESS]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. org.apache.commons.math.complex.ComplexTest#testMultiplyNaN started...]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. SUCCESS]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. org.apache.commons.math.complex.ComplexTest#testLogZero started...]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. SUCCESS]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. org.apache.commons.math.complex.ComplexTest#testConjugate started...]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. SUCCESS]
07:23:20.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot started...]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. SUCCESS]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf started...]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. SUCCESS]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference started...]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. SUCCESS]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. org.apache.commons.math.complex.ComplexTest#testTanCritical started...]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. SUCCESS]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. org.apache.commons.math.complex.ComplexTest#testPowNaNBase started...]
07:23:20.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. SUCCESS]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. org.apache.commons.math.complex.ComplexTest#testMath221 started...]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. SUCCESS]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty started...]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. SUCCESS]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. org.apache.commons.math.complex.ComplexTest#testGetArgumentInf started...]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. SUCCESS]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN started...]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. SUCCESS]
07:23:20.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. org.apache.commons.math.complex.ComplexTest#testConstructorNaN started...]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. SUCCESS]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. org.apache.commons.math.complex.ComplexTest#testCoshInf started...]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. SUCCESS]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. org.apache.commons.math.complex.ComplexTest#testCoshNaN started...]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. SUCCESS]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. org.apache.commons.math.complex.ComplexTest#testPowNaNExponent started...]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. SUCCESS]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. org.apache.commons.math.complex.ComplexTest#testHashCode started...]
07:23:20.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. SUCCESS]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. org.apache.commons.math.complex.ComplexTest#testSqrtRealZero started...]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. SUCCESS]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative started...]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. SUCCESS]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero started...]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. SUCCESS]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. org.apache.commons.math.complex.ComplexTest#testAbsNaN started...]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. SUCCESS]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. org.apache.commons.math.complex.ComplexTest#testAddNaN started...]
07:23:20.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. SUCCESS]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. org.apache.commons.math.complex.ComplexTest#testCosInf started...]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. SUCCESS]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. org.apache.commons.math.complex.ComplexTest#testCosNaN started...]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. SUCCESS]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. org.apache.commons.math.complex.ComplexTest#testDivide started...]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. SUCCESS]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. org.apache.commons.math.complex.ComplexTest#testExpInf started...]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. SUCCESS]
07:23:20.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. org.apache.commons.math.complex.ComplexTest#testExpNaN started...]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. SUCCESS]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. org.apache.commons.math.complex.ComplexTest#testMultiply started...]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. SUCCESS]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. org.apache.commons.math.complex.ComplexTest#testDivideReal started...]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. SUCCESS]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. SUCCESS]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. org.apache.commons.math.complex.ComplexTest#testEqualsNaN started...]
07:23:20.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. SUCCESS]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. org.apache.commons.math.complex.ComplexTest#testLogInf started...]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. SUCCESS]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. org.apache.commons.math.complex.ComplexTest#testLogNaN started...]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. SUCCESS]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. org.apache.commons.math.complex.ComplexTest#testDivideInfinite started...]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. SUCCESS]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. org.apache.commons.math.complex.ComplexTest#testNegate started...]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. SUCCESS]
07:23:20.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. org.apache.commons.math.complex.ComplexTest#testPowInf started...]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. SUCCESS]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite started...]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. SUCCESS]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. org.apache.commons.math.complex.ComplexTest#testSinhInf started...]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. SUCCESS]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. org.apache.commons.math.complex.ComplexTest#testSinhNaN started...]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. SUCCESS]
07:23:20.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. org.apache.commons.math.complex.ComplexTest#testSerial started...]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. SUCCESS]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. org.apache.commons.math.complex.ComplexTest#testSinInf started...]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. SUCCESS]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. org.apache.commons.math.complex.ComplexTest#testSinNaN started...]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. SUCCESS]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. org.apache.commons.math.complex.ComplexTest#testSqrt1z started...]
07:23:20.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. SUCCESS]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. org.apache.commons.math.complex.ComplexTest#testTanInf started...]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. SUCCESS]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. org.apache.commons.math.complex.ComplexTest#testTanNaN started...]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. SUCCESS]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot started...]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. SUCCESS]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. org.apache.commons.math.complex.ComplexTest#testpowNull started...]
07:23:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. SUCCESS]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. org.apache.commons.math.complex.ComplexTest#testSubtractNaN started...]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. SUCCESS]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. org.apache.commons.math.complex.ComplexTest#testAbsInfinite started...]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. SUCCESS]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. org.apache.commons.math.complex.ComplexTest#testSqrtInf started...]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. SUCCESS]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. org.apache.commons.math.complex.ComplexTest#testSqrtNaN started...]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. SUCCESS]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. org.apache.commons.math.complex.ComplexTest#testConstructor started...]
07:23:20.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. SUCCESS]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf started...]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. SUCCESS]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN started...]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. SUCCESS]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus started...]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. SUCCESS]
07:23:20.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex started...]
07:23:20.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. SUCCESS]
07:23:20.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary started...]
07:23:20.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. SUCCESS]
07:23:20.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat started...]
07:23:20.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. SUCCESS]
07:23:20.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals started...]
07:23:20.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. SUCCESS]
07:23:20.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary started...]
07:23:20.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. SUCCESS]
07:23:20.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar started...]
07:23:20.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. SUCCESS]
07:23:20.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber started...]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. SUCCESS]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. org.apache.commons.math.complex.FrenchComplexFormatTest#testNan started...]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. SUCCESS]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. SUCCESS]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat started...]
07:23:20.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. SUCCESS]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth started...]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. SUCCESS]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal started...]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. SUCCESS]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat started...]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. SUCCESS]
07:23:20.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:20.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. SUCCESS]
07:23:20.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity started...]
07:23:20.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. SUCCESS]
07:23:20.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity started...]
07:23:20.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. SUCCESS]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar started...]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. SUCCESS]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex started...]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. SUCCESS]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals started...]
07:23:20.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. SUCCESS]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal started...]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. SUCCESS]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth started...]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. SUCCESS]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal started...]
07:23:20.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. SUCCESS]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary started...]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. SUCCESS]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals started...]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. SUCCESS]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity started...]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. SUCCESS]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter started...]
07:23:20.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. SUCCESS]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal started...]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. SUCCESS]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan started...]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. SUCCESS]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary started...]
07:23:20.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. SUCCESS]
07:23:20.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity started...]
07:23:20.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. SUCCESS]
07:23:20.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals started...]
07:23:20.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. SUCCESS]
07:23:20.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. org.apache.commons.math.dfp.DfpDecTest#testRound started...]
07:23:20.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. SUCCESS]
07:23:20.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10 started...]
07:23:20.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. SUCCESS]
07:23:20.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. org.apache.commons.math.dfp.DfpDecTest#testNextAfter started...]
07:23:20.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. SUCCESS]
07:23:20.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. org.apache.commons.math.dfp.DfpMathTest#testPow started...]
07:23:20.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. SUCCESS]
07:23:20.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. org.apache.commons.math.dfp.DfpMathTest#testSin started...]
07:23:20.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. SUCCESS]
07:23:20.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. org.apache.commons.math.dfp.DfpTest#testAdd started...]
07:23:20.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. SUCCESS]
07:23:20.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. org.apache.commons.math.dfp.DfpTest#testFloor started...]
07:23:20.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. SUCCESS]
07:23:20.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. org.apache.commons.math.dfp.DfpTest#testLog10 started...]
07:23:20.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. SUCCESS]
07:23:20.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. org.apache.commons.math.dfp.DfpTest#testRound started...]
07:23:20.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. SUCCESS]
07:23:20.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. org.apache.commons.math.dfp.DfpTest#testCeil started...]
07:23:20.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. SUCCESS]
07:23:20.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. org.apache.commons.math.dfp.DfpTest#testRint started...]
07:23:20.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. SUCCESS]
07:23:20.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. org.apache.commons.math.dfp.DfpTest#testSqrt started...]
07:23:20.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. SUCCESS]
07:23:20.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. org.apache.commons.math.dfp.DfpTest#testToString started...]
07:23:20.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. SUCCESS]
07:23:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. org.apache.commons.math.dfp.DfpTest#testDivideInt started...]
07:23:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. SUCCESS]
07:23:20.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. org.apache.commons.math.dfp.DfpTest#testPower10 started...]
07:23:20.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. SUCCESS]
07:23:20.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. org.apache.commons.math.dfp.DfpTest#testCopySign started...]
07:23:20.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. SUCCESS]
07:23:20.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. org.apache.commons.math.dfp.DfpTest#testCompare started...]
07:23:20.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. SUCCESS]
07:23:20.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. org.apache.commons.math.dfp.DfpTest#testByteConstructor started...]
07:23:20.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. SUCCESS]
07:23:20.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. org.apache.commons.math.dfp.DfpTest#testIntValue started...]
07:23:20.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. SUCCESS]
07:23:20.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. org.apache.commons.math.dfp.DfpTest#testDivide started...]
07:23:20.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. SUCCESS]
07:23:20.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. org.apache.commons.math.dfp.DfpTest#testMultiply started...]
07:23:20.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. SUCCESS]
07:23:20.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:23:20.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. FAILED]
07:23:20.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. org.apache.commons.math.dfp.DfpTest#testIntConstructor started...]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. SUCCESS]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. org.apache.commons.math.dfp.DfpTest#testLog10K started...]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. SUCCESS]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. org.apache.commons.math.dfp.DfpTest#testRemainder started...]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. SUCCESS]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. org.apache.commons.math.dfp.DfpTest#testPower10K started...]
07:23:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. SUCCESS]
07:23:20.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. org.apache.commons.math.dfp.DfpTest#testLongConstructor started...]
07:23:20.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. SUCCESS]
07:23:20.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. org.apache.commons.math.dfp.DfpTest#testNextAfter started...]
07:23:20.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. SUCCESS]
07:23:20.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. org.apache.commons.math.distribution.BetaDistributionTest#testMomonts started...]
07:23:20.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. SUCCESS]
07:23:20.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. org.apache.commons.math.distribution.BetaDistributionTest#testCumulative started...]
07:23:20.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. SUCCESS]
07:23:20.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. org.apache.commons.math.distribution.BetaDistributionTest#testDensity started...]
07:23:20.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. SUCCESS]
07:23:20.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts started...]
07:23:20.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. SUCCESS]
07:23:20.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0 started...]
07:23:20.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. SUCCESS]
07:23:20.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1 started...]
07:23:20.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. SUCCESS]
07:23:20.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. org.apache.commons.math.distribution.BinomialDistributionTest#testDensities started...]
07:23:20.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. SUCCESS]
07:23:20.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. SUCCESS]
07:23:20.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. org.apache.commons.math.distribution.BinomialDistributionTest#testSampling started...]
07:23:20.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. SUCCESS]
07:23:20.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities started...]
07:23:20.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. SUCCESS]
07:23:20.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments started...]
07:23:20.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. SUCCESS]
07:23:20.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments started...]
07:23:20.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. SUCCESS]
07:23:20.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. org.apache.commons.math.distribution.CauchyDistributionTest#testScale started...]
07:23:20.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. SUCCESS]
07:23:20.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions started...]
07:23:20.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. SUCCESS]
07:23:20.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts started...]
07:23:20.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. SUCCESS]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. org.apache.commons.math.distribution.CauchyDistributionTest#testMedian started...]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. SUCCESS]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. SUCCESS]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. org.apache.commons.math.distribution.CauchyDistributionTest#testDensities started...]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. SUCCESS]
07:23:20.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. SUCCESS]
07:23:20.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. org.apache.commons.math.distribution.CauchyDistributionTest#testSampling started...]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. SUCCESS]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities started...]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. SUCCESS]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments started...]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. SUCCESS]
07:23:20.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency started...]
07:23:20.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. SUCCESS]
07:23:20.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts started...]
07:23:20.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. SUCCESS]
07:23:20.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity started...]
07:23:20.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. SUCCESS]
07:23:20.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors started...]
07:23:20.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. SUCCESS]
07:23:20.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf started...]
07:23:20.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. SUCCESS]
07:23:20.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities started...]
07:23:20.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. SUCCESS]
07:23:20.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. SUCCESS]
07:23:20.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling started...]
07:23:20.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. SUCCESS]
07:23:20.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities started...]
07:23:20.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. SUCCESS]
07:23:20.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments started...]
07:23:20.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. SUCCESS]
07:23:20.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency started...]
07:23:20.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. SUCCESS]
07:23:20.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions started...]
07:23:20.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. SUCCESS]
07:23:20.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2 started...]
07:23:20.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. SUCCESS]
07:23:20.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes started...]
07:23:20.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. SUCCESS]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts started...]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. SUCCESS]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity started...]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. SUCCESS]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. SUCCESS]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors started...]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. SUCCESS]
07:23:20.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities started...]
07:23:20.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. SUCCESS]
07:23:20.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. SUCCESS]
07:23:20.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling started...]
07:23:20.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. SUCCESS]
07:23:20.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities started...]
07:23:20.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. SUCCESS]
07:23:20.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments started...]
07:23:20.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. SUCCESS]
07:23:20.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency started...]
07:23:20.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. SUCCESS]
07:23:20.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom started...]
07:23:20.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. SUCCESS]
07:23:20.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. org.apache.commons.math.distribution.FDistributionTest#testPreconditions started...]
07:23:20.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. SUCCESS]
07:23:20.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes started...]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. SUCCESS]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom started...]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. SUCCESS]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. org.apache.commons.math.distribution.FDistributionTest#testMomonts started...]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. SUCCESS]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. org.apache.commons.math.distribution.FDistributionTest#testDfAccessors started...]
07:23:20.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. SUCCESS]
07:23:20.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:20.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. SUCCESS]
07:23:20.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. org.apache.commons.math.distribution.FDistributionTest#testDensities started...]
07:23:20.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. SUCCESS]
07:23:20.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. SUCCESS]
07:23:20.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. org.apache.commons.math.distribution.FDistributionTest#testSampling started...]
07:23:20.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. SUCCESS]
07:23:20.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities started...]
07:23:20.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. SUCCESS]
07:23:20.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments started...]
07:23:20.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. SUCCESS]
07:23:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. org.apache.commons.math.distribution.FDistributionTest#testConsistency started...]
07:23:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. SUCCESS]
07:23:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities started...]
07:23:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. SUCCESS]
07:23:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions started...]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. SUCCESS]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors started...]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. SUCCESS]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. org.apache.commons.math.distribution.GammaDistributionTest#testMomonts started...]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. SUCCESS]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. org.apache.commons.math.distribution.GammaDistributionTest#testDensity started...]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. SUCCESS]
07:23:20.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:20.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. SUCCESS]
07:23:20.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. org.apache.commons.math.distribution.GammaDistributionTest#testValues started...]
07:23:20.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. SUCCESS]
07:23:20.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. org.apache.commons.math.distribution.GammaDistributionTest#testDensities started...]
07:23:20.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. SUCCESS]
07:23:20.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities started...]
07:23:20.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. SUCCESS]
07:23:20.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. org.apache.commons.math.distribution.GammaDistributionTest#testSampling started...]
07:23:20.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. SUCCESS]
07:23:20.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities started...]
07:23:20.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. SUCCESS]
07:23:20.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments started...]
07:23:20.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. SUCCESS]
07:23:20.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. org.apache.commons.math.distribution.GammaDistributionTest#testConsistency started...]
07:23:20.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. SUCCESS]
07:23:20.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues started...]
07:23:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. SUCCESS]
07:23:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures started...]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. SUCCESS]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors started...]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. SUCCESS]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions started...]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. SUCCESS]
07:23:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses started...]
07:23:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. SUCCESS]
07:23:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample started...]
07:23:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. SUCCESS]
07:23:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts started...]
07:23:21.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. SUCCESS]
07:23:21.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues started...]
07:23:21.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. SUCCESS]
07:23:21.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities started...]
07:23:21.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. SUCCESS]
07:23:21.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. SUCCESS]
07:23:21.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling started...]
07:23:21.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. SUCCESS]
07:23:21.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities started...]
07:23:21.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. SUCCESS]
07:23:21.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments started...]
07:23:21.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. SUCCESS]
07:23:21.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments started...]
07:23:21.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. SUCCESS]
07:23:21.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction started...]
07:23:21.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. SUCCESS]
07:23:21.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues started...]
07:23:21.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. SUCCESS]
07:23:21.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions started...]
07:23:21.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. SUCCESS]
07:23:21.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation started...]
07:23:21.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. SUCCESS]
07:23:21.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles started...]
07:23:21.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. SUCCESS]
07:23:21.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. org.apache.commons.math.distribution.NormalDistributionTest#testGetMean started...]
07:23:21.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. SUCCESS]
07:23:21.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. org.apache.commons.math.distribution.NormalDistributionTest#testMath280 started...]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. SUCCESS]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. org.apache.commons.math.distribution.NormalDistributionTest#testMomonts started...]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. SUCCESS]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. org.apache.commons.math.distribution.NormalDistributionTest#testDensity started...]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. SUCCESS]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. SUCCESS]
07:23:21.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. org.apache.commons.math.distribution.NormalDistributionTest#testDensities started...]
07:23:21.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. SUCCESS]
07:23:21.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. SUCCESS]
07:23:21.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. org.apache.commons.math.distribution.NormalDistributionTest#testSampling started...]
07:23:21.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. SUCCESS]
07:23:21.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities started...]
07:23:21.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. SUCCESS]
07:23:21.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments started...]
07:23:21.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. SUCCESS]
07:23:21.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. org.apache.commons.math.distribution.NormalDistributionTest#testConsistency started...]
07:23:21.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. SUCCESS]
07:23:21.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. org.apache.commons.math.distribution.PascalDistributionTest#testMomonts started...]
07:23:21.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. SUCCESS]
07:23:21.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0 started...]
07:23:21.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. SUCCESS]
07:23:21.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1 started...]
07:23:21.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. SUCCESS]
07:23:21.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. org.apache.commons.math.distribution.PascalDistributionTest#testDensities started...]
07:23:21.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. SUCCESS]
07:23:21.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. SUCCESS]
07:23:21.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. org.apache.commons.math.distribution.PascalDistributionTest#testSampling started...]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. SUCCESS]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities started...]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. SUCCESS]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments started...]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. SUCCESS]
07:23:21.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments started...]
07:23:21.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. SUCCESS]
07:23:21.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability started...]
07:23:21.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. SUCCESS]
07:23:21.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial started...]
07:23:21.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. SUCCESS]
07:23:21.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. org.apache.commons.math.distribution.PoissonDistributionTest#testMean started...]
07:23:21.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. SUCCESS]
07:23:21.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability started...]
07:23:21.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. SUCCESS]
07:23:21.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts started...]
07:23:21.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. SUCCESS]
07:23:21.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability started...]
07:23:21.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. SUCCESS]
07:23:21.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability started...]
07:23:21.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. SUCCESS]
07:23:21.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. org.apache.commons.math.distribution.PoissonDistributionTest#testDensities started...]
07:23:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. SUCCESS]
07:23:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. SUCCESS]
07:23:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. org.apache.commons.math.distribution.PoissonDistributionTest#testSampling started...]
07:23:21.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. SUCCESS]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities started...]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. SUCCESS]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments started...]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. SUCCESS]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments started...]
07:23:21.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. SUCCESS]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow started...]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. SUCCESS]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. org.apache.commons.math.distribution.TDistributionTest#testPreconditions started...]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. SUCCESS]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. org.apache.commons.math.distribution.TDistributionTest#testMomonts started...]
07:23:21.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. SUCCESS]
07:23:21.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. org.apache.commons.math.distribution.TDistributionTest#testDfAccessors started...]
07:23:21.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. SUCCESS]
07:23:21.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:21.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. SUCCESS]
07:23:21.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. org.apache.commons.math.distribution.TDistributionTest#testSmallDf started...]
07:23:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. SUCCESS]
07:23:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. org.apache.commons.math.distribution.TDistributionTest#testDensities started...]
07:23:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. SUCCESS]
07:23:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. SUCCESS]
07:23:21.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. org.apache.commons.math.distribution.TDistributionTest#testSampling started...]
07:23:21.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. SUCCESS]
07:23:21.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities started...]
07:23:21.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. SUCCESS]
07:23:21.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments started...]
07:23:21.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. SUCCESS]
07:23:21.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. org.apache.commons.math.distribution.TDistributionTest#testConsistency started...]
07:23:21.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. SUCCESS]
07:23:21.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha started...]
07:23:21.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. SUCCESS]
07:23:21.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. org.apache.commons.math.distribution.WeibullDistributionTest#testBeta started...]
07:23:21.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. SUCCESS]
07:23:21.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts started...]
07:23:21.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. SUCCESS]
07:23:21.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:23:21.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. SUCCESS]
07:23:21.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. org.apache.commons.math.distribution.WeibullDistributionTest#testDensities started...]
07:23:21.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. SUCCESS]
07:23:21.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. SUCCESS]
07:23:21.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. org.apache.commons.math.distribution.WeibullDistributionTest#testSampling started...]
07:23:21.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. SUCCESS]
07:23:21.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities started...]
07:23:21.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. SUCCESS]
07:23:21.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments started...]
07:23:21.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. SUCCESS]
07:23:21.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency started...]
07:23:21.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. SUCCESS]
07:23:21.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions started...]
07:23:21.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. SUCCESS]
07:23:21.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts started...]
07:23:21.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. SUCCESS]
07:23:21.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. org.apache.commons.math.distribution.ZipfDistributionTest#testDensities started...]
07:23:21.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. SUCCESS]
07:23:21.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities started...]
07:23:21.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. SUCCESS]
07:23:21.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. org.apache.commons.math.distribution.ZipfDistributionTest#testSampling started...]
07:23:21.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. SUCCESS]
07:23:21.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities started...]
07:23:21.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. SUCCESS]
07:23:21.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments started...]
07:23:21.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. SUCCESS]
07:23:21.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments started...]
07:23:21.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. SUCCESS]
07:23:21.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors started...]
07:23:21.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. SUCCESS]
07:23:21.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. org.apache.commons.math.exception.MathRuntimeExceptionTest#testNoArgAddMessage started...]
07:23:21.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. SUCCESS]
07:23:21.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. org.apache.commons.math.exception.MathRuntimeExceptionTest#testSerializeUnserializable started...]
07:23:21.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. SUCCESS]
07:23:21.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. org.apache.commons.math.exception.MathRuntimeExceptionTest#testMessageChain started...]
07:23:21.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. SUCCESS]
07:23:21.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. org.apache.commons.math.exception.MathRuntimeExceptionTest#testSerialize started...]
07:23:21.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. SUCCESS]
07:23:21.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. org.apache.commons.math.exception.MathRuntimeExceptionTest#testContext started...]
07:23:21.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. SUCCESS]
07:23:21.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors started...]
07:23:21.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. SUCCESS]
07:23:21.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest#testAccessors started...]
07:23:21.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. SUCCESS]
07:23:21.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors started...]
07:23:21.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. SUCCESS]
07:23:21.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors started...]
07:23:21.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. SUCCESS]
07:23:21.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors started...]
07:23:21.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. SUCCESS]
07:23:21.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors started...]
07:23:21.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. SUCCESS]
07:23:21.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors started...]
07:23:21.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. SUCCESS]
07:23:21.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage started...]
07:23:21.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. SUCCESS]
07:23:21.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten started...]
07:23:21.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. SUCCESS]
07:23:21.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage started...]
07:23:21.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. SUCCESS]
07:23:21.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable started...]
07:23:21.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. SUCCESS]
07:23:21.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain started...]
07:23:21.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. SUCCESS]
07:23:21.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize started...]
07:23:21.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. SUCCESS]
07:23:21.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. org.apache.commons.math.exception.util.ExceptionContextTest#testContext started...]
07:23:21.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. SUCCESS]
07:23:21.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. org.apache.commons.math.fraction.BigFractionFieldTest#testOne started...]
07:23:21.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. SUCCESS]
07:23:21.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. org.apache.commons.math.fraction.BigFractionFieldTest#testZero started...]
07:23:21.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. SUCCESS]
07:23:21.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. org.apache.commons.math.fraction.BigFractionFieldTest#testSerial started...]
07:23:21.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. SUCCESS]
07:23:21.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat started...]
07:23:21.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. SUCCESS]
07:23:21.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative started...]
07:23:21.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. SUCCESS]
07:23:21.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat started...]
07:23:21.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. SUCCESS]
07:23:21.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper started...]
07:23:21.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. SUCCESS]
07:23:21.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper started...]
07:23:21.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. SUCCESS]
07:23:21.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative started...]
07:23:21.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. SUCCESS]
07:23:21.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. org.apache.commons.math.fraction.BigFractionFormatTest#testParse started...]
07:23:21.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. SUCCESS]
07:23:21.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat started...]
07:23:21.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. SUCCESS]
07:23:21.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero started...]
07:23:21.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. SUCCESS]
07:23:21.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative started...]
07:23:21.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. SUCCESS]
07:23:21.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator started...]
07:23:21.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. SUCCESS]
07:23:21.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat started...]
07:23:21.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. SUCCESS]
07:23:21.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus started...]
07:23:21.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. SUCCESS]
07:23:21.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger started...]
07:23:21.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. SUCCESS]
07:23:21.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid started...]
07:23:21.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. SUCCESS]
07:23:21.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. org.apache.commons.math.fraction.BigFractionFormatTest#testFormat started...]
07:23:21.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. SUCCESS]
07:23:21.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat started...]
07:23:21.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. SUCCESS]
07:23:21.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig started...]
07:23:21.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. SUCCESS]
07:23:21.841 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative started...]
07:23:21.841 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. SUCCESS]
07:23:21.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. org.apache.commons.math.fraction.BigFractionTest#testFloatValue started...]
07:23:21.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. SUCCESS]
07:23:21.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. org.apache.commons.math.fraction.BigFractionTest#testAbs started...]
07:23:21.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. SUCCESS]
07:23:21.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. org.apache.commons.math.fraction.BigFractionTest#testAdd started...]
07:23:21.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. SUCCESS]
07:23:21.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. org.apache.commons.math.fraction.BigFractionTest#testPow started...]
07:23:21.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. SUCCESS]
07:23:21.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. org.apache.commons.math.fraction.BigFractionTest#testSubtract started...]
07:23:21.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. SUCCESS]
07:23:21.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. org.apache.commons.math.fraction.BigFractionTest#testReciprocal started...]
07:23:21.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. SUCCESS]
07:23:21.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor started...]
07:23:21.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. SUCCESS]
07:23:21.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction started...]
07:23:21.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. SUCCESS]
07:23:21.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble started...]
07:23:21.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. SUCCESS]
07:23:21.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. org.apache.commons.math.fraction.BigFractionTest#testCompareTo started...]
07:23:21.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. SUCCESS]
07:23:21.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor started...]
07:23:21.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. SUCCESS]
07:23:21.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue started...]
07:23:21.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. SUCCESS]
07:23:21.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. org.apache.commons.math.fraction.BigFractionTest#testMath340 started...]
07:23:21.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. SUCCESS]
07:23:21.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. org.apache.commons.math.fraction.BigFractionTest#testLongValue started...]
07:23:21.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. SUCCESS]
07:23:21.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor started...]
07:23:21.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. SUCCESS]
07:23:21.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. org.apache.commons.math.fraction.BigFractionTest#testIntValue started...]
07:23:21.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. SUCCESS]
07:23:21.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. org.apache.commons.math.fraction.BigFractionTest#testDivide started...]
07:23:21.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. SUCCESS]
07:23:21.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. org.apache.commons.math.fraction.BigFractionTest#testMultiply started...]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. SUCCESS]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode started...]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. SUCCESS]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. org.apache.commons.math.fraction.BigFractionTest#testNegate started...]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. SUCCESS]
07:23:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. org.apache.commons.math.fraction.BigFractionTest#testSerial started...]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. SUCCESS]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio started...]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. SUCCESS]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. org.apache.commons.math.fraction.BigFractionTest#testDoubleValue started...]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. SUCCESS]
07:23:21.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. org.apache.commons.math.fraction.BigFractionTest#testConstructor started...]
07:23:21.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. SUCCESS]
07:23:21.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. org.apache.commons.math.fraction.FractionFieldTest#testOne started...]
07:23:21.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. SUCCESS]
07:23:21.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. org.apache.commons.math.fraction.FractionFieldTest#testZero started...]
07:23:21.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. SUCCESS]
07:23:21.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. org.apache.commons.math.fraction.FractionFieldTest#testSerial started...]
07:23:21.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. SUCCESS]
07:23:21.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat started...]
07:23:21.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. SUCCESS]
07:23:21.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative started...]
07:23:21.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. SUCCESS]
07:23:21.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. org.apache.commons.math.fraction.FractionFormatTest#testLongFormat started...]
07:23:21.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. SUCCESS]
07:23:21.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper started...]
07:23:21.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. SUCCESS]
07:23:21.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. org.apache.commons.math.fraction.FractionFormatTest#testParseProper started...]
07:23:21.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. SUCCESS]
07:23:21.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative started...]
07:23:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. SUCCESS]
07:23:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. org.apache.commons.math.fraction.FractionFormatTest#testParse started...]
07:23:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. SUCCESS]
07:23:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat started...]
07:23:21.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. SUCCESS]
07:23:21.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. org.apache.commons.math.fraction.FractionFormatTest#testFormatZero started...]
07:23:21.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. SUCCESS]
07:23:21.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative started...]
07:23:21.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. SUCCESS]
07:23:21.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator started...]
07:23:21.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. SUCCESS]
07:23:21.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat started...]
07:23:21.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. SUCCESS]
07:23:21.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus started...]
07:23:21.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. SUCCESS]
07:23:21.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. org.apache.commons.math.fraction.FractionFormatTest#testParseInteger started...]
07:23:21.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. SUCCESS]
07:23:21.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid started...]
07:23:21.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. SUCCESS]
07:23:21.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. org.apache.commons.math.fraction.FractionFormatTest#testFormat started...]
07:23:21.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. SUCCESS]
07:23:21.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat started...]
07:23:21.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. SUCCESS]
07:23:21.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. org.apache.commons.math.fraction.FractionFormatTest#testParseNegative started...]
07:23:21.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. SUCCESS]
07:23:21.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. org.apache.commons.math.fraction.FractionTest#testFloatValue started...]
07:23:21.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. SUCCESS]
07:23:21.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. org.apache.commons.math.fraction.FractionTest#testAbs started...]
07:23:21.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. SUCCESS]
07:23:21.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. org.apache.commons.math.fraction.FractionTest#testAdd started...]
07:23:21.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. SUCCESS]
07:23:21.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. org.apache.commons.math.fraction.FractionTest#testSubtract started...]
07:23:21.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. SUCCESS]
07:23:21.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. org.apache.commons.math.fraction.FractionTest#testToString started...]
07:23:21.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. SUCCESS]
07:23:21.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. org.apache.commons.math.fraction.FractionTest#testReciprocal started...]
07:23:21.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. SUCCESS]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor started...]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. SUCCESS]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. org.apache.commons.math.fraction.FractionTest#testGetReducedFraction started...]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. SUCCESS]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. org.apache.commons.math.fraction.FractionTest#testConstructorDouble started...]
07:23:21.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. SUCCESS]
07:23:21.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. org.apache.commons.math.fraction.FractionTest#testCompareTo started...]
07:23:21.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. SUCCESS]
07:23:21.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. org.apache.commons.math.fraction.FractionTest#testDoubleConstructor started...]
07:23:21.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. SUCCESS]
07:23:21.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. org.apache.commons.math.fraction.FractionTest#testLongValue started...]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. SUCCESS]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor started...]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. SUCCESS]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. org.apache.commons.math.fraction.FractionTest#testIntValue started...]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. SUCCESS]
07:23:21.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. org.apache.commons.math.fraction.FractionTest#testDivide started...]
07:23:21.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. SUCCESS]
07:23:21.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. org.apache.commons.math.fraction.FractionTest#testMultiply started...]
07:23:21.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. SUCCESS]
07:23:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode started...]
07:23:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. SUCCESS]
07:23:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. org.apache.commons.math.fraction.FractionTest#testNegate started...]
07:23:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. SUCCESS]
07:23:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. org.apache.commons.math.fraction.FractionTest#testSerial started...]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. SUCCESS]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. org.apache.commons.math.fraction.FractionTest#testGoldenRatio started...]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. SUCCESS]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. org.apache.commons.math.fraction.FractionTest#testIntegerOverflow started...]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. SUCCESS]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. org.apache.commons.math.fraction.FractionTest#testDoubleValue started...]
07:23:21.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. SUCCESS]
07:23:21.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. org.apache.commons.math.fraction.FractionTest#testConstructor started...]
07:23:21.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. SUCCESS]
07:23:21.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor started...]
07:23:21.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. SUCCESS]
07:23:21.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame started...]
07:23:21.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. SUCCESS]
07:23:21.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor started...]
07:23:21.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. SUCCESS]
07:23:21.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. org.apache.commons.math.genetics.BinaryMutationTest#testMutate started...]
07:23:21.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. SUCCESS]
07:23:21.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome started...]
07:23:21.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. SUCCESS]
07:23:21.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. org.apache.commons.math.genetics.ChromosomeTest#testCompareTo started...]
07:23:21.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. SUCCESS]
07:23:21.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration started...]
07:23:21.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. SUCCESS]
07:23:21.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching started...]
07:23:21.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. SUCCESS]
07:23:21.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied started...]
07:23:21.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. SUCCESS]
07:23:21.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test started...]
07:23:22.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. SUCCESS]
07:23:22.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test started...]
07:23:22.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. SUCCESS]
07:23:22.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome started...]
07:23:22.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. SUCCESS]
07:23:22.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover started...]
07:23:22.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. SUCCESS]
07:23:22.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate started...]
07:23:22.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. SUCCESS]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation started...]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. SUCCESS]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation started...]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. SUCCESS]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation started...]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. SUCCESS]
07:23:22.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. org.apache.commons.math.genetics.RandomKeyTest#testConstructor1 started...]
07:23:22.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. SUCCESS]
07:23:22.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. org.apache.commons.math.genetics.RandomKeyTest#testConstructor2 started...]
07:23:22.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. SUCCESS]
07:23:22.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation started...]
07:23:22.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. SUCCESS]
07:23:22.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. org.apache.commons.math.genetics.RandomKeyTest#testDecode started...]
07:23:22.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. SUCCESS]
07:23:22.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. org.apache.commons.math.genetics.RandomKeyTest#testIsSame started...]
07:23:22.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. SUCCESS]
07:23:22.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr started...]
07:23:22.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. SUCCESS]
07:23:22.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. org.apache.commons.math.genetics.TournamentSelectionTest#testSelect started...]
07:23:22.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. SUCCESS]
07:23:22.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat started...]
07:23:22.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. SUCCESS]
07:23:22.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals started...]
07:23:22.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. SUCCESS]
07:23:22.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator started...]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. SUCCESS]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX started...]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. SUCCESS]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan started...]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. SUCCESS]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:22.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. SUCCESS]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX started...]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. SUCCESS]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY started...]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. SUCCESS]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ started...]
07:23:22.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. SUCCESS]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll started...]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. SUCCESS]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testDefaultFormatVector3D started...]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. SUCCESS]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix started...]
07:23:22.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. SUCCESS]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix started...]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. SUCCESS]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX started...]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. SUCCESS]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY started...]
07:23:22.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. SUCCESS]
07:23:22.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ started...]
07:23:22.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. SUCCESS]
07:23:22.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace started...]
07:23:22.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. SUCCESS]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. SUCCESS]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. org.apache.commons.math.geometry.FrenchVector3DFormatTest#tesNegativeInfinity started...]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. SUCCESS]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity started...]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. SUCCESS]
07:23:22.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting started...]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. SUCCESS]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals started...]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. SUCCESS]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals started...]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. SUCCESS]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity started...]
07:23:22.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. SUCCESS]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting started...]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. SUCCESS]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan started...]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. SUCCESS]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity started...]
07:23:22.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. SUCCESS]
07:23:22.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals started...]
07:23:22.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. SUCCESS]
07:23:22.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. org.apache.commons.math.geometry.RotationOrderTest#testName started...]
07:23:22.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. SUCCESS]
07:23:22.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. org.apache.commons.math.geometry.RotationTest#testAxisAngle started...]
07:23:22.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. SUCCESS]
07:23:22.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs started...]
07:23:22.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. SUCCESS]
07:23:22.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. org.apache.commons.math.geometry.RotationTest#testCompose started...]
07:23:22.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. SUCCESS]
07:23:22.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. org.apache.commons.math.geometry.RotationTest#testIdentity started...]
07:23:22.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. SUCCESS]
07:23:22.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. org.apache.commons.math.geometry.RotationTest#testComposeInverse started...]
07:23:22.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. SUCCESS]
07:23:22.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. org.apache.commons.math.geometry.RotationTest#testApplyInverseTo started...]
07:23:22.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. SUCCESS]
07:23:22.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. org.apache.commons.math.geometry.RotationTest#testAngles started...]
07:23:22.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. SUCCESS]
07:23:22.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. org.apache.commons.math.geometry.RotationTest#testVectorOnePair started...]
07:23:22.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. SUCCESS]
07:23:22.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. org.apache.commons.math.geometry.RotationTest#testMatrix started...]
07:23:22.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. SUCCESS]
07:23:22.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. org.apache.commons.math.geometry.RotationTest#testRevert started...]
07:23:22.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. SUCCESS]
07:23:22.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. org.apache.commons.math.geometry.RotationTest#testSingularities started...]
07:23:22.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. SUCCESS]
07:23:22.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. org.apache.commons.math.geometry.RotationTest#testQuaternion started...]
07:23:22.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. SUCCESS]
07:23:22.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat started...]
07:23:22.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. SUCCESS]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals started...]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. SUCCESS]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator started...]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. SUCCESS]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX started...]
07:23:22.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. SUCCESS]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. org.apache.commons.math.geometry.Vector3DFormatTest#testNan started...]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. SUCCESS]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. SUCCESS]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX started...]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. SUCCESS]
07:23:22.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY started...]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. SUCCESS]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ started...]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. SUCCESS]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll started...]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. SUCCESS]
07:23:22.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. org.apache.commons.math.geometry.Vector3DFormatTest#testDefaultFormatVector3D started...]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. SUCCESS]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix started...]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. SUCCESS]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix started...]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. SUCCESS]
07:23:22.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX started...]
07:23:22.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. SUCCESS]
07:23:22.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY started...]
07:23:22.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. SUCCESS]
07:23:22.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ started...]
07:23:22.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. SUCCESS]
07:23:22.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace started...]
07:23:22.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. SUCCESS]
07:23:22.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:22.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. SUCCESS]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. org.apache.commons.math.geometry.Vector3DFormatTest#tesNegativeInfinity started...]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. SUCCESS]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity started...]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. SUCCESS]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting started...]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. SUCCESS]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals started...]
07:23:22.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. SUCCESS]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals started...]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. SUCCESS]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity started...]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. SUCCESS]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting started...]
07:23:22.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. SUCCESS]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan started...]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. SUCCESS]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity started...]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. SUCCESS]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals started...]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. SUCCESS]
07:23:22.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts started...]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. SUCCESS]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. org.apache.commons.math.geometry.Vector3DTest#testCrossProductCancellation started...]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. SUCCESS]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. org.apache.commons.math.geometry.Vector3DTest#testAdd started...]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. SUCCESS]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. org.apache.commons.math.geometry.Vector3DTest#testDistanceInf started...]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. SUCCESS]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. org.apache.commons.math.geometry.Vector3DTest#testSubtract started...]
07:23:22.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. SUCCESS]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. org.apache.commons.math.geometry.Vector3DTest#testAngular started...]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. SUCCESS]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. org.apache.commons.math.geometry.Vector3DTest#testAngle started...]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. SUCCESS]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. org.apache.commons.math.geometry.Vector3DTest#testNorm1 started...]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. SUCCESS]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. org.apache.commons.math.geometry.Vector3DTest#testNorm started...]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. SUCCESS]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. org.apache.commons.math.geometry.Vector3DTest#testConstructors started...]
07:23:22.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. SUCCESS]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. org.apache.commons.math.geometry.Vector3DTest#testScalarProduct started...]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. SUCCESS]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. org.apache.commons.math.geometry.Vector3DTest#testOrthogonal started...]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. SUCCESS]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation started...]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. SUCCESS]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. org.apache.commons.math.geometry.Vector3DTest#testNormalize started...]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. SUCCESS]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. org.apache.commons.math.geometry.Vector3DTest#testDistance started...]
07:23:22.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. SUCCESS]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. org.apache.commons.math.geometry.Vector3DTest#testDistance1 started...]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. SUCCESS]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. org.apache.commons.math.geometry.Vector3DTest#testCoordinates started...]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. SUCCESS]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. org.apache.commons.math.geometry.Vector3DTest#testDistanceSq started...]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. SUCCESS]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. org.apache.commons.math.geometry.Vector3DTest#testNormInf started...]
07:23:22.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. SUCCESS]
07:23:22.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. org.apache.commons.math.linear.AbstractRealVectorTest#testMap started...]
07:23:22.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. SUCCESS]
07:23:22.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. org.apache.commons.math.linear.AbstractRealVectorTest#testClone started...]
07:23:22.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. SUCCESS]
07:23:22.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. org.apache.commons.math.linear.AbstractRealVectorTest#testSparseIterator started...]
07:23:22.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. SUCCESS]
07:23:22.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. org.apache.commons.math.linear.AbstractRealVectorTest#testIterator started...]
07:23:22.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. SUCCESS]
07:23:22.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm started...]
07:23:22.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. SUCCESS]
07:23:22.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate started...]
07:23:22.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. SUCCESS]
07:23:22.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples started...]
07:23:22.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. SUCCESS]
07:23:22.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry started...]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. SUCCESS]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail started...]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. SUCCESS]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd started...]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. SUCCESS]
07:23:22.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd started...]
07:23:22.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. SUCCESS]
07:23:22.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower started...]
07:23:22.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. SUCCESS]
07:23:22.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace started...]
07:23:22.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. SUCCESS]
07:23:22.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm started...]
07:23:22.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. SUCCESS]
07:23:22.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk started...]
07:23:22.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. SUCCESS]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString started...]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. SUCCESS]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix started...]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. SUCCESS]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus started...]
07:23:22.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. SUCCESS]
07:23:22.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector started...]
07:23:22.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. SUCCESS]
07:23:22.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2 started...]
07:23:22.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. SUCCESS]
07:23:22.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions started...]
07:23:22.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. SUCCESS]
07:23:22.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix started...]
07:23:22.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. SUCCESS]
07:23:22.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector started...]
07:23:22.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. SUCCESS]
07:23:22.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions started...]
07:23:22.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. SUCCESS]
07:23:22.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix started...]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. SUCCESS]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209 started...]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. SUCCESS]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors started...]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. SUCCESS]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn started...]
07:23:22.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. SUCCESS]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix started...]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. SUCCESS]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn started...]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. SUCCESS]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector started...]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. SUCCESS]
07:23:22.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply started...]
07:23:22.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. SUCCESS]
07:23:22.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow started...]
07:23:22.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. SUCCESS]
07:23:22.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode started...]
07:23:22.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. SUCCESS]
07:23:22.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial started...]
07:23:22.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. SUCCESS]
07:23:22.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow started...]
07:23:22.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. SUCCESS]
07:23:22.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose started...]
07:23:22.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. SUCCESS]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix started...]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. SUCCESS]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply started...]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. SUCCESS]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix started...]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. SUCCESS]
07:23:22.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector started...]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. SUCCESS]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix started...]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. SUCCESS]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector started...]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. SUCCESS]
07:23:22.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors started...]
07:23:22.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. SUCCESS]
07:23:22.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc started...]
07:23:22.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. SUCCESS]
07:23:22.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors started...]
07:23:22.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. SUCCESS]
07:23:22.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions started...]
07:23:22.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. SUCCESS]
07:23:22.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut started...]
07:23:22.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. SUCCESS]
07:23:22.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions started...]
07:23:22.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. SUCCESS]
07:23:22.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial started...]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. SUCCESS]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors started...]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. SUCCESS]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. org.apache.commons.math.linear.ArrayRealVectorTest#testMisc started...]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. SUCCESS]
07:23:22.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors started...]
07:23:22.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. SUCCESS]
07:23:22.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions started...]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. SUCCESS]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut started...]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. SUCCESS]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates started...]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. SUCCESS]
07:23:22.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions started...]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. SUCCESS]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. org.apache.commons.math.linear.ArrayRealVectorTest#testCosine started...]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. SUCCESS]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1 started...]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. SUCCESS]
07:23:22.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2 started...]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. SUCCESS]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3 started...]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. SUCCESS]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax started...]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. SUCCESS]
07:23:22.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. org.apache.commons.math.linear.ArrayRealVectorTest#testSerial started...]
07:23:22.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. SUCCESS]
07:23:22.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal started...]
07:23:22.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. SUCCESS]
07:23:22.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower started...]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. SUCCESS]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal started...]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. SUCCESS]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix started...]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. SUCCESS]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues started...]
07:23:22.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. SUCCESS]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions started...]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. SUCCESS]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt started...]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. SUCCESS]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal started...]
07:23:22.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. SUCCESS]
07:23:22.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge started...]
07:23:23.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. SUCCESS]
07:23:23.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge started...]
07:23:23.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. SUCCESS]
07:23:23.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate started...]
07:23:23.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. SUCCESS]
07:23:23.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples started...]
07:23:23.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. SUCCESS]
07:23:23.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry started...]
07:23:23.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. SUCCESS]
07:23:23.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail started...]
07:23:23.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. SUCCESS]
07:23:23.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge started...]
07:23:23.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. SUCCESS]
07:23:23.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd started...]
07:23:23.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. SUCCESS]
07:23:23.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd started...]
07:23:23.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. SUCCESS]
07:23:23.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace started...]
07:23:23.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. SUCCESS]
07:23:23.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk started...]
07:23:23.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. SUCCESS]
07:23:23.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. org.apache.commons.math.linear.BlockFieldMatrixTest#testToString started...]
07:23:23.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. SUCCESS]
07:23:23.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge started...]
07:23:23.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. SUCCESS]
07:23:23.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge started...]
07:23:23.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. SUCCESS]
07:23:23.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix started...]
07:23:23.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. SUCCESS]
07:23:23.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks started...]
07:23:23.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. SUCCESS]
07:23:23.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus started...]
07:23:23.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. SUCCESS]
07:23:23.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector started...]
07:23:23.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. SUCCESS]
07:23:23.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2 started...]
07:23:23.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. SUCCESS]
07:23:23.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions started...]
07:23:23.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. SUCCESS]
07:23:23.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix started...]
07:23:23.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. SUCCESS]
07:23:23.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge started...]
07:23:23.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. SUCCESS]
07:23:23.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector started...]
07:23:23.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. SUCCESS]
07:23:23.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions started...]
07:23:23.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. SUCCESS]
07:23:23.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix started...]
07:23:23.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. SUCCESS]
07:23:23.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209 started...]
07:23:23.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. SUCCESS]
07:23:23.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge started...]
07:23:23.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. SUCCESS]
07:23:23.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors started...]
07:23:23.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. SUCCESS]
07:23:23.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge started...]
07:23:23.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. SUCCESS]
07:23:23.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn started...]
07:23:23.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. SUCCESS]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix started...]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. SUCCESS]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn started...]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. SUCCESS]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector started...]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. SUCCESS]
07:23:23.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply started...]
07:23:23.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. SUCCESS]
07:23:23.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow started...]
07:23:23.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. SUCCESS]
07:23:23.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode started...]
07:23:23.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. SUCCESS]
07:23:23.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge started...]
07:23:23.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. SUCCESS]
07:23:23.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial started...]
07:23:23.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. SUCCESS]
07:23:23.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow started...]
07:23:23.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. SUCCESS]
07:23:23.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose started...]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. SUCCESS]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix started...]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. SUCCESS]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply started...]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. SUCCESS]
07:23:23.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix started...]
07:23:23.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. SUCCESS]
07:23:23.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector started...]
07:23:23.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. SUCCESS]
07:23:23.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix started...]
07:23:23.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. SUCCESS]
07:23:23.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector started...]
07:23:23.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. SUCCESS]
07:23:23.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge started...]
07:23:23.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. SUCCESS]
07:23:23.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge started...]
07:23:23.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. SUCCESS]
07:23:23.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm started...]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. SUCCESS]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. org.apache.commons.math.linear.BlockRealMatrixTest#testOperate started...]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. SUCCESS]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. org.apache.commons.math.linear.BlockRealMatrixTest#testExamples started...]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. SUCCESS]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry started...]
07:23:23.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. SUCCESS]
07:23:23.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail started...]
07:23:23.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. SUCCESS]
07:23:23.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge started...]
07:23:23.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. SUCCESS]
07:23:23.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. org.apache.commons.math.linear.BlockRealMatrixTest#testAdd started...]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. SUCCESS]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd started...]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. SUCCESS]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. org.apache.commons.math.linear.BlockRealMatrixTest#testTrace started...]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. SUCCESS]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. org.apache.commons.math.linear.BlockRealMatrixTest#testNorm started...]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. SUCCESS]
07:23:23.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. org.apache.commons.math.linear.BlockRealMatrixTest#testWalk started...]
07:23:23.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. SUCCESS]
07:23:23.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. org.apache.commons.math.linear.BlockRealMatrixTest#testToString started...]
07:23:23.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. SUCCESS]
07:23:23.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge started...]
07:23:23.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. SUCCESS]
07:23:23.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge started...]
07:23:23.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. SUCCESS]
07:23:23.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix started...]
07:23:23.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. SUCCESS]
07:23:23.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks started...]
07:23:23.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. SUCCESS]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus started...]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. SUCCESS]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector started...]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. SUCCESS]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2 started...]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. SUCCESS]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions started...]
07:23:23.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. SUCCESS]
07:23:23.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix started...]
07:23:23.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. SUCCESS]
07:23:23.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge started...]
07:23:23.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. SUCCESS]
07:23:23.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector started...]
07:23:23.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. SUCCESS]
07:23:23.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions started...]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. SUCCESS]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix started...]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. SUCCESS]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. org.apache.commons.math.linear.BlockRealMatrixTest#testMath209 started...]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. SUCCESS]
07:23:23.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge started...]
07:23:23.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. SUCCESS]
07:23:23.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors started...]
07:23:23.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. SUCCESS]
07:23:23.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge started...]
07:23:23.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. SUCCESS]
07:23:23.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn started...]
07:23:23.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. SUCCESS]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix started...]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. SUCCESS]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn started...]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. SUCCESS]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector started...]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. SUCCESS]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply started...]
07:23:23.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. SUCCESS]
07:23:23.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow started...]
07:23:23.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. SUCCESS]
07:23:23.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode started...]
07:23:23.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. SUCCESS]
07:23:23.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge started...]
07:23:23.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. SUCCESS]
07:23:23.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. org.apache.commons.math.linear.BlockRealMatrixTest#testSerial started...]
07:23:23.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. SUCCESS]
07:23:23.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow started...]
07:23:23.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. SUCCESS]
07:23:23.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose started...]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. SUCCESS]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix started...]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. SUCCESS]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply started...]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. SUCCESS]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix started...]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. SUCCESS]
07:23:23.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector started...]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. SUCCESS]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix started...]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. SUCCESS]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector started...]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. SUCCESS]
07:23:23.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues started...]
07:23:23.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. SUCCESS]
07:23:23.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException started...]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. SUCCESS]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions started...]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. SUCCESS]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274 started...]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. SUCCESS]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare started...]
07:23:23.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. SUCCESS]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite started...]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. SUCCESS]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular started...]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. SUCCESS]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed started...]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. SUCCESS]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT started...]
07:23:23.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. SUCCESS]
07:23:23.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. org.apache.commons.math.linear.CholeskySolverTest#testSolve started...]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. SUCCESS]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. org.apache.commons.math.linear.CholeskySolverTest#testDeterminant started...]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. SUCCESS]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors started...]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. SUCCESS]
07:23:23.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit started...]
07:23:23.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. SUCCESS]
07:23:23.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors started...]
07:23:23.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. SUCCESS]
07:23:23.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal started...]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. SUCCESS]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1 started...]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. SUCCESS]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2 started...]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. SUCCESS]
07:23:23.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3 started...]
07:23:23.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. SUCCESS]
07:23:23.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions started...]
07:23:23.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. SUCCESS]
07:23:23.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues started...]
07:23:23.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. SUCCESS]
07:23:23.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue started...]
07:23:23.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. SUCCESS]
07:23:23.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt started...]
07:23:23.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. SUCCESS]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308 started...]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. SUCCESS]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal started...]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. SUCCESS]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues started...]
07:23:23.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. SUCCESS]
07:23:23.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal started...]
07:23:23.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. SUCCESS]
07:23:23.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot started...]
07:23:23.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. SUCCESS]
07:23:23.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02 started...]
07:23:23.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. SUCCESS]
07:23:23.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03 started...]
07:23:23.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. SUCCESS]
07:23:23.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix started...]
07:23:24.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. SUCCESS]
07:23:24.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit started...]
07:23:24.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. SUCCESS]
07:23:24.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide started...]
07:23:24.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. SUCCESS]
07:23:24.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. org.apache.commons.math.linear.EigenSolverTest#testSolve started...]
07:23:24.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. SUCCESS]
07:23:24.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors started...]
07:23:24.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. SUCCESS]
07:23:24.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. org.apache.commons.math.linear.EigenSolverTest#testNonInvertible started...]
07:23:24.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. SUCCESS]
07:23:24.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. org.apache.commons.math.linear.EigenSolverTest#testInvertible started...]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. SUCCESS]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation started...]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. SUCCESS]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular started...]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. SUCCESS]
07:23:24.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions started...]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. SUCCESS]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare started...]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. SUCCESS]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular started...]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. SUCCESS]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular started...]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. SUCCESS]
07:23:24.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU started...]
07:23:24.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. SUCCESS]
07:23:24.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1 started...]
07:23:24.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. SUCCESS]
07:23:24.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2 started...]
07:23:24.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. SUCCESS]
07:23:24.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. org.apache.commons.math.linear.FieldMatrixImplTest#testOperate started...]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. SUCCESS]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. org.apache.commons.math.linear.FieldMatrixImplTest#testExamples started...]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. SUCCESS]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry started...]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. SUCCESS]
07:23:24.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail started...]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. SUCCESS]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. org.apache.commons.math.linear.FieldMatrixImplTest#testAdd started...]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. SUCCESS]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd started...]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. SUCCESS]
07:23:24.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. org.apache.commons.math.linear.FieldMatrixImplTest#testPower started...]
07:23:24.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. SUCCESS]
07:23:24.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. org.apache.commons.math.linear.FieldMatrixImplTest#testTrace started...]
07:23:24.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. SUCCESS]
07:23:24.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. org.apache.commons.math.linear.FieldMatrixImplTest#testWalk started...]
07:23:24.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. SUCCESS]
07:23:24.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. org.apache.commons.math.linear.FieldMatrixImplTest#testToString started...]
07:23:24.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. SUCCESS]
07:23:24.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix started...]
07:23:24.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. SUCCESS]
07:23:24.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus started...]
07:23:24.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. SUCCESS]
07:23:24.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector started...]
07:23:24.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. SUCCESS]
07:23:24.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2 started...]
07:23:24.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. SUCCESS]
07:23:24.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions started...]
07:23:24.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. SUCCESS]
07:23:24.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix started...]
07:23:24.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. SUCCESS]
07:23:24.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector started...]
07:23:24.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. SUCCESS]
07:23:24.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions started...]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. SUCCESS]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix started...]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. SUCCESS]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. org.apache.commons.math.linear.FieldMatrixImplTest#testMath209 started...]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. SUCCESS]
07:23:24.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors started...]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. SUCCESS]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn started...]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. SUCCESS]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix started...]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. SUCCESS]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn started...]
07:23:24.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. SUCCESS]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector started...]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. SUCCESS]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply started...]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. SUCCESS]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow started...]
07:23:24.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. SUCCESS]
07:23:24.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode started...]
07:23:24.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. SUCCESS]
07:23:24.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. org.apache.commons.math.linear.FieldMatrixImplTest#testSerial started...]
07:23:24.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. SUCCESS]
07:23:24.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow started...]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. SUCCESS]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose started...]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. SUCCESS]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix started...]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. SUCCESS]
07:23:24.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply started...]
07:23:24.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. SUCCESS]
07:23:24.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix started...]
07:23:24.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. SUCCESS]
07:23:24.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector started...]
07:23:24.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. SUCCESS]
07:23:24.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix started...]
07:23:24.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. SUCCESS]
07:23:24.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector started...]
07:23:24.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. SUCCESS]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat started...]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. SUCCESS]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals started...]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. SUCCESS]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator started...]
07:23:24.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. SUCCESS]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX started...]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. SUCCESS]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan started...]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. SUCCESS]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:24.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. SUCCESS]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX started...]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. SUCCESS]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY started...]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. SUCCESS]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ started...]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. SUCCESS]
07:23:24.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll started...]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. SUCCESS]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix started...]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. SUCCESS]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix started...]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. SUCCESS]
07:23:24.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX started...]
07:23:24.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. SUCCESS]
07:23:24.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY started...]
07:23:24.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. SUCCESS]
07:23:24.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ started...]
07:23:24.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. SUCCESS]
07:23:24.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace started...]
07:23:24.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. SUCCESS]
07:23:24.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:24.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. SUCCESS]
07:23:24.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents started...]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. SUCCESS]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents started...]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. SUCCESS]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity started...]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. SUCCESS]
07:23:24.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. SUCCESS]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity started...]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. SUCCESS]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting started...]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. SUCCESS]
07:23:24.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals started...]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. SUCCESS]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals started...]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. SUCCESS]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity started...]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. SUCCESS]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting started...]
07:23:24.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. SUCCESS]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan started...]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. SUCCESS]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity started...]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. SUCCESS]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals started...]
07:23:24.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. SUCCESS]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation started...]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. SUCCESS]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular started...]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. SUCCESS]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions started...]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. SUCCESS]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare started...]
07:23:24.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. SUCCESS]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. org.apache.commons.math.linear.LUDecompositionImplTest#testSingular started...]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. SUCCESS]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular started...]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. SUCCESS]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU started...]
07:23:24.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. SUCCESS]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1 started...]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. SUCCESS]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2 started...]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. SUCCESS]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. org.apache.commons.math.linear.LUSolverTest#testSolve started...]
07:23:24.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. SUCCESS]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. org.apache.commons.math.linear.LUSolverTest#testThreshold started...]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. SUCCESS]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. org.apache.commons.math.linear.LUSolverTest#testDeterminant started...]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. SUCCESS]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors started...]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. SUCCESS]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors started...]
07:23:24.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. SUCCESS]
07:23:24.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. org.apache.commons.math.linear.LUSolverTest#testSingular started...]
07:23:24.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. SUCCESS]
07:23:24.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors started...]
07:23:24.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. SUCCESS]
07:23:24.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter started...]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. SUCCESS]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix started...]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. SUCCESS]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix started...]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. SUCCESS]
07:23:24.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix started...]
07:23:24.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. SUCCESS]
07:23:24.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix started...]
07:23:24.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. SUCCESS]
07:23:24.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter started...]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. SUCCESS]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix started...]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. SUCCESS]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix started...]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. SUCCESS]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix started...]
07:23:24.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. SUCCESS]
07:23:24.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix started...]
07:23:24.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. SUCCESS]
07:23:24.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR started...]
07:23:24.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. SUCCESS]
07:23:24.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues started...]
07:23:24.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. SUCCESS]
07:23:24.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions started...]
07:23:24.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. SUCCESS]
07:23:24.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular started...]
07:23:24.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. SUCCESS]
07:23:24.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal started...]
07:23:24.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. SUCCESS]
07:23:24.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal started...]
07:23:24.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. SUCCESS]
07:23:24.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. org.apache.commons.math.linear.QRSolverTest#testOverdetermined started...]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. SUCCESS]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. org.apache.commons.math.linear.QRSolverTest#testSolve started...]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. SUCCESS]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. org.apache.commons.math.linear.QRSolverTest#testRank started...]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. SUCCESS]
07:23:24.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors started...]
07:23:24.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. SUCCESS]
07:23:24.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors started...]
07:23:24.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. SUCCESS]
07:23:24.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. org.apache.commons.math.linear.QRSolverTest#testUnderdetermined started...]
07:23:24.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. SUCCESS]
07:23:24.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat started...]
07:23:24.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. SUCCESS]
07:23:24.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals started...]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. SUCCESS]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator started...]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. SUCCESS]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX started...]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. SUCCESS]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. org.apache.commons.math.linear.RealVectorFormatTest#testNan started...]
07:23:24.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. SUCCESS]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. SUCCESS]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX started...]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. SUCCESS]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY started...]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. SUCCESS]
07:23:24.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ started...]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. SUCCESS]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll started...]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. SUCCESS]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix started...]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. SUCCESS]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix started...]
07:23:24.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. SUCCESS]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX started...]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. SUCCESS]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY started...]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. SUCCESS]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ started...]
07:23:24.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. SUCCESS]
07:23:24.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace started...]
07:23:24.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. SUCCESS]
07:23:24.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:23:24.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. SUCCESS]
07:23:24.286 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents started...]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. SUCCESS]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents started...]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. SUCCESS]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity started...]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. SUCCESS]
07:23:24.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. SUCCESS]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity started...]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. SUCCESS]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting started...]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. SUCCESS]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals started...]
07:23:24.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. SUCCESS]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals started...]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. SUCCESS]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity started...]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. SUCCESS]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting started...]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. SUCCESS]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. org.apache.commons.math.linear.RealVectorFormatTest#testParseNan started...]
07:23:24.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. SUCCESS]
07:23:24.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity started...]
07:23:24.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. SUCCESS]
07:23:24.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals started...]
07:23:24.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. SUCCESS]
07:23:24.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal started...]
07:23:24.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. SUCCESS]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns started...]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. SUCCESS]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions started...]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. SUCCESS]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber started...]
07:23:24.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. SUCCESS]
07:23:24.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt started...]
07:23:24.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. SUCCESS]
07:23:24.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard started...]
07:23:24.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. SUCCESS]
07:23:24.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows started...]
07:23:24.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. SUCCESS]
07:23:24.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal started...]
07:23:24.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. SUCCESS]
07:23:24.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1 started...]
07:23:24.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. SUCCESS]
07:23:24.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. org.apache.commons.math.linear.SingularValueSolverTest#testSolve started...]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. SUCCESS]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors started...]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. SUCCESS]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber started...]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. SUCCESS]
07:23:24.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve started...]
07:23:24.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. SUCCESS]
07:23:24.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. org.apache.commons.math.linear.SingularValueSolverTest#testMath320B started...]
07:23:24.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. SUCCESS]
07:23:24.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate started...]
07:23:24.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. SUCCESS]
07:23:24.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples started...]
07:23:24.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. SUCCESS]
07:23:24.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry started...]
07:23:24.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. SUCCESS]
07:23:24.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail started...]
07:23:24.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. SUCCESS]
07:23:24.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd started...]
07:23:24.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. SUCCESS]
07:23:24.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd started...]
07:23:24.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. SUCCESS]
07:23:24.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace started...]
07:23:24.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. SUCCESS]
07:23:24.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus started...]
07:23:24.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. SUCCESS]
07:23:24.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2 started...]
07:23:24.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. SUCCESS]
07:23:24.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions started...]
07:23:24.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. SUCCESS]
07:23:24.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix started...]
07:23:24.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. SUCCESS]
07:23:24.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector started...]
07:23:24.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. SUCCESS]
07:23:24.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions started...]
07:23:24.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. SUCCESS]
07:23:24.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209 started...]
07:23:24.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. SUCCESS]
07:23:24.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors started...]
07:23:24.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. SUCCESS]
07:23:24.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix started...]
07:23:24.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. SUCCESS]
07:23:24.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector started...]
07:23:24.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. SUCCESS]
07:23:24.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply started...]
07:23:24.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. SUCCESS]
07:23:24.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode started...]
07:23:24.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. SUCCESS]
07:23:24.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose started...]
07:23:24.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. SUCCESS]
07:23:24.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply started...]
07:23:24.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. SUCCESS]
07:23:24.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix started...]
07:23:24.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. SUCCESS]
07:23:24.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix started...]
07:23:24.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. SUCCESS]
07:23:24.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector started...]
07:23:24.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. SUCCESS]
07:23:24.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. org.apache.commons.math.linear.SparseFieldVectorTest#testMisc started...]
07:23:24.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. SUCCESS]
07:23:24.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions started...]
07:23:24.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. SUCCESS]
07:23:24.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates started...]
07:23:24.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. SUCCESS]
07:23:24.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions started...]
07:23:24.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. SUCCESS]
07:23:24.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. org.apache.commons.math.linear.SparseRealMatrixTest#testOperate started...]
07:23:24.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. SUCCESS]
07:23:24.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. org.apache.commons.math.linear.SparseRealMatrixTest#testExamples started...]
07:23:24.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. SUCCESS]
07:23:24.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry started...]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. SUCCESS]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail started...]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. SUCCESS]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. org.apache.commons.math.linear.SparseRealMatrixTest#testAdd started...]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. SUCCESS]
07:23:24.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd started...]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. SUCCESS]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. org.apache.commons.math.linear.SparseRealMatrixTest#testTrace started...]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. SUCCESS]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. org.apache.commons.math.linear.SparseRealMatrixTest#testNorm started...]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. SUCCESS]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. org.apache.commons.math.linear.SparseRealMatrixTest#testToString started...]
07:23:24.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. SUCCESS]
07:23:24.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus started...]
07:23:24.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. SUCCESS]
07:23:24.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2 started...]
07:23:24.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. SUCCESS]
07:23:24.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions started...]
07:23:24.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. SUCCESS]
07:23:24.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix started...]
07:23:24.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. SUCCESS]
07:23:24.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector started...]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. SUCCESS]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions started...]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. SUCCESS]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. org.apache.commons.math.linear.SparseRealMatrixTest#testMath209 started...]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. SUCCESS]
07:23:24.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors started...]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. SUCCESS]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix started...]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. SUCCESS]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector started...]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. SUCCESS]
07:23:24.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply started...]
07:23:24.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. SUCCESS]
07:23:24.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode started...]
07:23:24.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. SUCCESS]
07:23:24.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. org.apache.commons.math.linear.SparseRealMatrixTest#testSerial started...]
07:23:24.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. SUCCESS]
07:23:24.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose started...]
07:23:24.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. SUCCESS]
07:23:24.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply started...]
07:23:24.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. SUCCESS]
07:23:24.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix started...]
07:23:24.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. SUCCESS]
07:23:24.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix started...]
07:23:24.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. SUCCESS]
07:23:24.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector started...]
07:23:24.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. SUCCESS]
07:23:24.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. org.apache.commons.math.linear.SparseRealVectorTest#testMisc started...]
07:23:24.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. SUCCESS]
07:23:24.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. org.apache.commons.math.linear.SparseRealVectorTest#testConstructors started...]
07:23:24.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. SUCCESS]
07:23:24.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions started...]
07:23:24.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. SUCCESS]
07:23:24.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut started...]
07:23:24.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. SUCCESS]
07:23:24.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. org.apache.commons.math.linear.SparseRealVectorTest#testPredicates started...]
07:23:24.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. SUCCESS]
07:23:24.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions started...]
07:23:24.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. SUCCESS]
07:23:24.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. org.apache.commons.math.linear.SparseRealVectorTest#testSerial started...]
07:23:24.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. SUCCESS]
07:23:24.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt started...]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. SUCCESS]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal started...]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. SUCCESS]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare started...]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. SUCCESS]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal started...]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. SUCCESS]
07:23:24.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal started...]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. SUCCESS]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal started...]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. SUCCESS]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3 started...]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. SUCCESS]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5 started...]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. SUCCESS]
07:23:24.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries started...]
07:23:24.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. SUCCESS]
07:23:24.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging started...]
07:23:24.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. SUCCESS]
07:23:24.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess started...]
07:23:24.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. SUCCESS]
07:23:24.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions started...]
07:23:24.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. SUCCESS]
07:23:24.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep started...]
07:23:24.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. SUCCESS]
07:23:24.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps started...]
07:23:24.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. SUCCESS]
07:23:24.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep started...]
07:23:24.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. SUCCESS]
07:23:24.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension started...]
07:23:24.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. SUCCESS]
07:23:24.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. org.apache.commons.math.ode.events.EventStateTest#closeEvents started...]
07:23:24.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. SUCCESS]
07:23:24.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial started...]
07:23:24.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. SUCCESS]
07:23:24.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck started...]
07:23:24.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. SUCCESS]
07:23:24.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep started...]
07:23:24.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. SUCCESS]
07:23:24.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations started...]
07:23:24.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. SUCCESS]
07:23:24.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance started...]
07:23:24.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. SUCCESS]
07:23:24.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward started...]
07:23:24.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. SUCCESS]
07:23:24.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial started...]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. SUCCESS]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck started...]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. SUCCESS]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep started...]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. SUCCESS]
07:23:24.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations started...]
07:23:24.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. SUCCESS]
07:23:24.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance started...]
07:23:24.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. SUCCESS]
07:23:24.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward started...]
07:23:24.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. SUCCESS]
07:23:24.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward started...]
07:23:24.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. SUCCESS]
07:23:24.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent started...]
07:23:24.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. SUCCESS]
07:23:24.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep started...]
07:23:24.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. SUCCESS]
07:23:24.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps started...]
07:23:24.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. SUCCESS]
07:23:24.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep started...]
07:23:24.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. SUCCESS]
07:23:24.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler started...]
07:23:24.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. SUCCESS]
07:23:24.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks started...]
07:23:24.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. SUCCESS]
07:23:24.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize started...]
07:23:24.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. SUCCESS]
07:23:24.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency started...]
07:23:24.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. SUCCESS]
07:23:24.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization started...]
07:23:25.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. SUCCESS]
07:23:25.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep started...]
07:23:25.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. SUCCESS]
07:23:25.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck started...]
07:23:25.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. SUCCESS]
07:23:25.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward started...]
07:23:25.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. SUCCESS]
07:23:25.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps started...]
07:23:25.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. SUCCESS]
07:23:25.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep started...]
07:23:25.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. SUCCESS]
07:23:25.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents started...]
07:23:25.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. SUCCESS]
07:23:25.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler started...]
07:23:25.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. SUCCESS]
07:23:25.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance started...]
07:23:25.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. SUCCESS]
07:23:25.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency started...]
07:23:25.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. SUCCESS]
07:23:25.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone started...]
07:23:25.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. SUCCESS]
07:23:25.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization started...]
07:23:25.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. SUCCESS]
07:23:25.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck started...]
07:23:25.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. SUCCESS]
07:23:25.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward started...]
07:23:25.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. SUCCESS]
07:23:25.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps started...]
07:23:25.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. SUCCESS]
07:23:25.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent started...]
07:23:25.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. SUCCESS]
07:23:25.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput started...]
07:23:25.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. SUCCESS]
07:23:25.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep started...]
07:23:25.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. SUCCESS]
07:23:25.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative started...]
07:23:25.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. SUCCESS]
07:23:25.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck started...]
07:23:25.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. SUCCESS]
07:23:25.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents started...]
07:23:25.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. SUCCESS]
07:23:25.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler started...]
07:23:25.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. SUCCESS]
07:23:25.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance started...]
07:23:25.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. SUCCESS]
07:23:25.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency started...]
07:23:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. SUCCESS]
07:23:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone started...]
07:23:25.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. SUCCESS]
07:23:25.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization started...]
07:23:25.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. SUCCESS]
07:23:25.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck started...]
07:23:25.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. SUCCESS]
07:23:25.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward started...]
07:23:25.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. SUCCESS]
07:23:25.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep started...]
07:23:25.227 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. SUCCESS]
07:23:25.227 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps started...]
07:23:25.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. SUCCESS]
07:23:25.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep started...]
07:23:25.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. SUCCESS]
07:23:25.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize started...]
07:23:25.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. SUCCESS]
07:23:25.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds started...]
07:23:25.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. SUCCESS]
07:23:25.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency started...]
07:23:25.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. SUCCESS]
07:23:25.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside started...]
07:23:25.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. SUCCESS]
07:23:25.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization started...]
07:23:25.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. SUCCESS]
07:23:25.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset started...]
07:23:25.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. SUCCESS]
07:23:25.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck started...]
07:23:25.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. SUCCESS]
07:23:25.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward started...]
07:23:25.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. SUCCESS]
07:23:25.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep started...]
07:23:25.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. SUCCESS]
07:23:25.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps started...]
07:23:25.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. SUCCESS]
07:23:25.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep started...]
07:23:25.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. SUCCESS]
07:23:25.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative started...]
07:23:25.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. SUCCESS]
07:23:25.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler started...]
07:23:25.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. SUCCESS]
07:23:25.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize started...]
07:23:25.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. SUCCESS]
07:23:25.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency started...]
07:23:25.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. SUCCESS]
07:23:25.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization started...]
07:23:25.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. SUCCESS]
07:23:25.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck started...]
07:23:25.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. SUCCESS]
07:23:25.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward started...]
07:23:25.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. SUCCESS]
07:23:25.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps started...]
07:23:25.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. SUCCESS]
07:23:25.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls started...]
07:23:25.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. SUCCESS]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep started...]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. SUCCESS]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative started...]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. SUCCESS]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck started...]
07:23:25.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. SUCCESS]
07:23:25.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents started...]
07:23:25.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. SUCCESS]
07:23:25.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler started...]
07:23:25.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. SUCCESS]
07:23:25.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance started...]
07:23:25.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. SUCCESS]
07:23:25.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency started...]
07:23:25.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. SUCCESS]
07:23:25.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone started...]
07:23:25.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. SUCCESS]
07:23:25.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization started...]
07:23:25.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. SUCCESS]
07:23:25.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward started...]
07:23:25.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. SUCCESS]
07:23:25.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative started...]
07:23:25.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. SUCCESS]
07:23:25.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep started...]
07:23:25.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. SUCCESS]
07:23:25.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents started...]
07:23:25.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. SUCCESS]
07:23:25.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors started...]
07:23:25.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. SUCCESS]
07:23:25.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler started...]
07:23:25.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. SUCCESS]
07:23:25.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance started...]
07:23:25.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. SUCCESS]
07:23:25.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence started...]
07:23:25.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. SUCCESS]
07:23:25.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks started...]
07:23:25.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. SUCCESS]
07:23:25.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency started...]
07:23:25.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. SUCCESS]
07:23:25.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone started...]
07:23:25.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. SUCCESS]
07:23:25.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization started...]
07:23:25.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. SUCCESS]
07:23:25.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck started...]
07:23:25.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. SUCCESS]
07:23:25.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward started...]
07:23:25.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. SUCCESS]
07:23:25.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep started...]
07:23:25.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. SUCCESS]
07:23:25.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps started...]
07:23:25.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. SUCCESS]
07:23:25.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep started...]
07:23:25.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. SUCCESS]
07:23:25.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize started...]
07:23:25.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. SUCCESS]
07:23:25.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency started...]
07:23:25.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. SUCCESS]
07:23:25.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization started...]
07:23:25.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. SUCCESS]
07:23:25.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck started...]
07:23:25.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. SUCCESS]
07:23:25.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward started...]
07:23:25.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. SUCCESS]
07:23:25.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep started...]
07:23:25.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. SUCCESS]
07:23:25.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps started...]
07:23:26.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. SUCCESS]
07:23:26.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep started...]
07:23:26.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. SUCCESS]
07:23:26.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler started...]
07:23:26.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. SUCCESS]
07:23:26.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize started...]
07:23:26.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. SUCCESS]
07:23:26.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency started...]
07:23:26.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. SUCCESS]
07:23:26.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization started...]
07:23:26.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. SUCCESS]
07:23:26.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization started...]
07:23:26.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. SUCCESS]
07:23:26.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization started...]
07:23:26.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. SUCCESS]
07:23:26.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState started...]
07:23:26.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. SUCCESS]
07:23:26.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset started...]
07:23:26.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. SUCCESS]
07:23:26.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency started...]
07:23:26.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. SUCCESS]
07:23:26.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization started...]
07:23:26.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. SUCCESS]
07:23:26.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries started...]
07:23:26.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. SUCCESS]
07:23:26.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd started...]
07:23:26.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. SUCCESS]
07:23:26.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting started...]
07:23:26.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. SUCCESS]
07:23:26.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial started...]
07:23:26.161 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. SUCCESS]
07:23:26.161 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum started...]
07:23:26.162 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. SUCCESS]
07:23:26.162 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock started...]
07:23:26.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. SUCCESS]
07:23:26.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen started...]
07:23:26.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. SUCCESS]
07:23:26.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated started...]
07:23:27.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. SUCCESS]
07:23:27.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse started...]
07:23:27.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. SUCCESS]
07:23:27.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes started...]
07:23:28.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. SUCCESS]
07:23:28.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar started...]
07:23:28.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. SUCCESS]
07:23:28.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen started...]
07:23:29.210 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. SUCCESS]
07:23:29.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds started...]
07:23:29.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. SUCCESS]
07:23:29.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange started...]
07:23:29.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. SUCCESS]
07:23:29.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative started...]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. SUCCESS]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch started...]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. SUCCESS]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData started...]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. SUCCESS]
07:23:29.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin started...]
07:23:30.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. SUCCESS]
07:23:30.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen started...]
07:23:31.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. SUCCESS]
07:23:31.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow started...]
07:23:32.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. SUCCESS]
07:23:32.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize started...]
07:23:32.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. SUCCESS]
07:23:32.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley started...]
07:23:32.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. SUCCESS]
07:23:32.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab started...]
07:23:32.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. SUCCESS]
07:23:32.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow started...]
07:23:33.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. SUCCESS]
07:23:33.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch started...]
07:23:33.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. SUCCESS]
07:23:33.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere started...]
07:23:33.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. SUCCESS]
07:23:33.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet started...]
07:23:33.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. SUCCESS]
07:23:33.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic started...]
07:23:33.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. SUCCESS]
07:23:33.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic started...]
07:23:33.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. SUCCESS]
07:23:33.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc started...]
07:23:33.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. SUCCESS]
07:23:33.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimizeMaximize started...]
07:23:33.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. SUCCESS]
07:23:33.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283 started...]
07:23:33.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. SUCCESS]
07:23:33.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock started...]
07:23:33.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. SUCCESS]
07:23:33.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell started...]
07:23:33.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. SUCCESS]
07:23:33.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations started...]
07:23:33.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. SUCCESS]
07:23:33.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimizeMaximize started...]
07:23:33.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. SUCCESS]
07:23:33.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock started...]
07:23:33.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. SUCCESS]
07:23:33.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1 started...]
07:23:33.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. SUCCESS]
07:23:33.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2 started...]
07:23:33.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. SUCCESS]
07:23:33.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3 started...]
07:23:33.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. SUCCESS]
07:23:33.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell started...]
07:23:33.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. SUCCESS]
07:23:33.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303 started...]
07:23:33.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. SUCCESS]
07:23:33.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304 started...]
07:23:33.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. SUCCESS]
07:23:33.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372 started...]
07:23:33.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. SUCCESS]
07:23:33.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01 started...]
07:23:33.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. SUCCESS]
07:23:33.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02 started...]
07:23:33.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. SUCCESS]
07:23:33.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03 started...]
07:23:33.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. SUCCESS]
07:23:33.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04 started...]
07:23:33.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. SUCCESS]
07:23:33.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05 started...]
07:23:33.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. SUCCESS]
07:23:33.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06 started...]
07:23:33.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. SUCCESS]
07:23:33.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07 started...]
07:23:33.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. SUCCESS]
07:23:33.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519 started...]
07:23:33.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. SUCCESS]
07:23:33.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError started...]
07:23:33.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. SUCCESS]
07:23:33.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData started...]
07:23:33.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. SUCCESS]
07:23:33.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1 started...]
07:23:33.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. SUCCESS]
07:23:33.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess started...]
07:23:33.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. SUCCESS]
07:23:33.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted started...]
07:23:33.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. SUCCESS]
07:23:33.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError started...]
07:23:33.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. SUCCESS]
07:23:33.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError started...]
07:23:33.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. SUCCESS]
07:23:33.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable started...]
07:23:33.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. SUCCESS]
07:23:33.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError started...]
07:23:33.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. SUCCESS]
07:23:33.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable started...]
07:23:33.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. SUCCESS]
07:23:33.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency started...]
07:23:33.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. SUCCESS]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes started...]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. SUCCESS]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations started...]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. SUCCESS]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial started...]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. SUCCESS]
07:23:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets started...]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. SUCCESS]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple started...]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. SUCCESS]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. SUCCESS]
07:23:33.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned started...]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. SUCCESS]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation started...]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. SUCCESS]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible started...]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. SUCCESS]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations started...]
07:23:33.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. SUCCESS]
07:23:33.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting started...]
07:23:33.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. SUCCESS]
07:23:33.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet started...]
07:23:33.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. SUCCESS]
07:23:33.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations started...]
07:23:33.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. SUCCESS]
07:23:33.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit started...]
07:23:33.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. SUCCESS]
07:23:33.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency started...]
07:23:33.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. SUCCESS]
07:23:33.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes started...]
07:23:33.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. SUCCESS]
07:23:33.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations started...]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. SUCCESS]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial started...]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. SUCCESS]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation started...]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. SUCCESS]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets started...]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. SUCCESS]
07:23:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple started...]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. SUCCESS]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. SUCCESS]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned started...]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. SUCCESS]
07:23:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199 started...]
07:23:33.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. SUCCESS]
07:23:33.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible started...]
07:23:33.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. SUCCESS]
07:23:33.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations started...]
07:23:33.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. SUCCESS]
07:23:33.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting started...]
07:23:33.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. SUCCESS]
07:23:33.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters started...]
07:23:33.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. SUCCESS]
07:23:33.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet started...]
07:23:33.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. SUCCESS]
07:23:33.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit started...]
07:23:33.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. SUCCESS]
07:23:33.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1 started...]
07:23:33.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. SUCCESS]
07:23:33.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis started...]
07:23:33.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. SUCCESS]
07:23:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson started...]
07:23:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. SUCCESS]
07:23:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok started...]
07:23:33.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. SUCCESS]
07:23:33.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional started...]
07:23:33.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. SUCCESS]
07:23:33.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley started...]
07:23:33.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. SUCCESS]
07:23:33.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer started...]
07:23:33.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. SUCCESS]
07:23:33.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank started...]
07:23:33.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. SUCCESS]
07:23:33.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth started...]
07:23:33.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. SUCCESS]
07:23:33.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1 started...]
07:23:33.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. SUCCESS]
07:23:33.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2 started...]
07:23:33.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. SUCCESS]
07:23:33.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson started...]
07:23:33.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. SUCCESS]
07:23:33.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne started...]
07:23:33.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. SUCCESS]
07:23:33.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular started...]
07:23:33.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. SUCCESS]
07:23:33.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad started...]
07:23:33.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. SUCCESS]
07:23:33.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows started...]
07:23:33.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. SUCCESS]
07:23:33.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard started...]
07:23:33.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. SUCCESS]
07:23:33.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear started...]
07:23:33.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. SUCCESS]
07:23:33.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency started...]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. SUCCESS]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations started...]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. SUCCESS]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial started...]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. SUCCESS]
07:23:33.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets started...]
07:23:33.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. SUCCESS]
07:23:33.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple started...]
07:23:33.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. SUCCESS]
07:23:33.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:23:33.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. SUCCESS]
07:23:33.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned started...]
07:23:33.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. SUCCESS]
07:23:33.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation started...]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. SUCCESS]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible started...]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. SUCCESS]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations started...]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. SUCCESS]
07:23:33.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting started...]
07:23:33.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. SUCCESS]
07:23:33.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet started...]
07:23:33.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. SUCCESS]
07:23:33.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative started...]
07:23:33.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. SUCCESS]
07:23:33.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon started...]
07:23:33.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. SUCCESS]
07:23:33.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution started...]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. SUCCESS]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint started...]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. SUCCESS]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver started...]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. SUCCESS]
07:23:33.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ started...]
07:23:33.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. SUCCESS]
07:23:33.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ started...]
07:23:33.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. SUCCESS]
07:23:33.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel started...]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. SUCCESS]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution started...]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. SUCCESS]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272 started...]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. SUCCESS]
07:23:33.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286 started...]
07:23:33.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. SUCCESS]
07:23:33.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288 started...]
07:23:33.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. SUCCESS]
07:23:33.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293 started...]
07:23:33.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. SUCCESS]
07:23:33.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars started...]
07:23:33.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. SUCCESS]
07:23:33.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization started...]
07:23:33.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. SUCCESS]
07:23:33.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2 started...]
07:23:33.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. SUCCESS]
07:23:33.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy started...]
07:23:33.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. SUCCESS]
07:23:33.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection started...]
07:23:33.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. SUCCESS]
07:23:33.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel started...]
07:23:34.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. SUCCESS]
07:23:34.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable started...]
07:23:34.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. SUCCESS]
07:23:34.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution started...]
07:23:34.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. SUCCESS]
07:23:34.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable started...]
07:23:34.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. SUCCESS]
07:23:34.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization started...]
07:23:34.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. SUCCESS]
07:23:34.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars started...]
07:23:34.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. SUCCESS]
07:23:34.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial started...]
07:23:34.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. SUCCESS]
07:23:34.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective started...]
07:23:34.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. SUCCESS]
07:23:34.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary started...]
07:23:34.223 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. SUCCESS]
07:23:34.223 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax started...]
07:23:34.223 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. SUCCESS]
07:23:34.223 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin started...]
07:23:34.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. SUCCESS]
07:23:34.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering started...]
07:23:34.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. SUCCESS]
07:23:34.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax started...]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. SUCCESS]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin started...]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. SUCCESS]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints started...]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. SUCCESS]
07:23:34.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics started...]
07:23:34.235 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. SUCCESS]
07:23:34.236 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin started...]
07:23:34.236 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. SUCCESS]
07:23:34.236 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin started...]
07:23:34.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. SUCCESS]
07:23:34.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction started...]
07:23:34.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. SUCCESS]
07:23:34.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin started...]
07:23:34.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. SUCCESS]
07:23:34.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean started...]
07:23:34.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. SUCCESS]
07:23:34.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt started...]
07:23:34.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. SUCCESS]
07:23:34.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat started...]
07:23:34.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. SUCCESS]
07:23:34.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong started...]
07:23:34.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. SUCCESS]
07:23:34.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal started...]
07:23:34.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. SUCCESS]
07:23:34.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample started...]
07:23:34.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. SUCCESS]
07:23:34.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues started...]
07:23:34.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. SUCCESS]
07:23:34.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints started...]
07:23:34.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. SUCCESS]
07:23:34.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian started...]
07:23:34.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. SUCCESS]
07:23:34.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF started...]
07:23:34.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. SUCCESS]
07:23:34.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT started...]
07:23:34.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. SUCCESS]
07:23:34.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare started...]
07:23:34.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. SUCCESS]
07:23:34.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong started...]
07:23:34.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. SUCCESS]
07:23:34.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex started...]
07:23:34.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. SUCCESS]
07:23:34.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt started...]
07:23:34.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. SUCCESS]
07:23:34.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency started...]
07:23:36.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. SUCCESS]
07:23:36.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric started...]
07:23:36.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. SUCCESS]
07:23:36.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues started...]
07:23:36.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. SUCCESS]
07:23:36.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential started...]
07:23:36.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. SUCCESS]
07:23:36.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson started...]
07:23:36.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. SUCCESS]
07:23:36.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform started...]
07:23:36.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. SUCCESS]
07:23:36.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation started...]
07:23:36.202 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. SUCCESS]
07:23:36.202 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial started...]
07:23:36.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. SUCCESS]
07:23:36.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig started...]
07:23:36.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. SUCCESS]
07:23:36.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate started...]
07:23:36.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. SUCCESS]
07:23:36.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex started...]
07:23:36.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. SUCCESS]
07:23:36.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy started...]
07:23:36.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. SUCCESS]
07:23:36.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma started...]
07:23:36.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. SUCCESS]
07:23:36.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull started...]
07:23:36.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. SUCCESS]
07:23:36.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta started...]
07:23:36.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. SUCCESS]
07:23:36.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf started...]
07:23:36.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. SUCCESS]
07:23:36.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank started...]
07:23:36.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. SUCCESS]
07:23:36.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance started...]
07:23:36.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. SUCCESS]
07:23:36.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226 started...]
07:23:36.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. SUCCESS]
07:23:36.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix started...]
07:23:36.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. SUCCESS]
07:23:36.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow started...]
07:23:36.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. SUCCESS]
07:23:36.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization started...]
07:23:36.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. SUCCESS]
07:23:36.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. org.apache.commons.math.random.EmpiricalDistributionTest#testLoad started...]
07:23:36.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. SUCCESS]
07:23:36.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. org.apache.commons.math.random.EmpiricalDistributionTest#testNext started...]
07:23:36.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. SUCCESS]
07:23:36.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray started...]
07:23:36.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. SUCCESS]
07:23:36.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat started...]
07:23:36.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. SUCCESS]
07:23:36.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad started...]
07:23:36.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. SUCCESS]
07:23:36.431 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine started...]
07:23:36.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. SUCCESS]
07:23:36.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile started...]
07:23:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. SUCCESS]
07:23:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds started...]
07:23:36.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. SUCCESS]
07:23:36.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL started...]
07:23:36.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. SUCCESS]
07:23:36.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail started...]
07:23:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. SUCCESS]
07:23:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation started...]
07:23:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. SUCCESS]
07:23:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. org.apache.commons.math.random.MersenneTwisterTest#testFloat started...]
07:23:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. SUCCESS]
07:23:36.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. org.apache.commons.math.random.MersenneTwisterTest#testGaussian started...]
07:23:36.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. SUCCESS]
07:23:36.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. org.apache.commons.math.random.MersenneTwisterTest#testDouble started...]
07:23:36.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. SUCCESS]
07:23:36.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. org.apache.commons.math.random.MersenneTwisterTest#testNextInt started...]
07:23:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. SUCCESS]
07:23:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean started...]
07:23:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. SUCCESS]
07:23:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg started...]
07:23:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. SUCCESS]
07:23:36.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura started...]
07:23:36.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. SUCCESS]
07:23:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. org.apache.commons.math.random.MersenneTwisterTest#testNexBytes started...]
07:23:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. SUCCESS]
07:23:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. org.apache.commons.math.random.MersenneTwisterTest#testNextIntN started...]
07:23:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. SUCCESS]
07:23:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. org.apache.commons.math.random.MersenneTwisterTest#testNextLong started...]
07:23:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. SUCCESS]
07:23:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. org.apache.commons.math.random.RandomAdaptorTest#testAdaptor started...]
07:23:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. SUCCESS]
07:23:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. org.apache.commons.math.random.RandomAdaptorTest#testNextPascal started...]
07:23:36.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. SUCCESS]
07:23:36.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. org.apache.commons.math.random.RandomAdaptorTest#testNextSample started...]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. SUCCESS]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues started...]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. SUCCESS]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints started...]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. SUCCESS]
07:23:36.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian started...]
07:23:36.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. SUCCESS]
07:23:36.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. org.apache.commons.math.random.RandomAdaptorTest#testNextF started...]
07:23:36.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. SUCCESS]
07:23:36.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. org.apache.commons.math.random.RandomAdaptorTest#testNextT started...]
07:23:36.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. SUCCESS]
07:23:36.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. org.apache.commons.math.random.RandomAdaptorTest#testNextChiSquare started...]
07:23:36.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. SUCCESS]
07:23:36.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong started...]
07:23:36.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. SUCCESS]
07:23:36.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex started...]
07:23:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. SUCCESS]
07:23:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt started...]
07:23:36.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. SUCCESS]
07:23:36.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. org.apache.commons.math.random.RandomAdaptorTest#testNextPoissonConsistency started...]
07:23:38.234 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. SUCCESS]
07:23:38.234 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. org.apache.commons.math.random.RandomAdaptorTest#testNextHypergeometric started...]
07:23:38.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. SUCCESS]
07:23:38.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues started...]
07:23:38.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. SUCCESS]
07:23:38.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. org.apache.commons.math.random.RandomAdaptorTest#testNextExponential started...]
07:23:38.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. SUCCESS]
07:23:38.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson started...]
07:23:38.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. SUCCESS]
07:23:38.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. org.apache.commons.math.random.RandomAdaptorTest#testNextUniform started...]
07:23:38.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. SUCCESS]
07:23:38.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation started...]
07:23:38.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. SUCCESS]
07:23:38.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. org.apache.commons.math.random.RandomAdaptorTest#testNextBinomial started...]
07:23:38.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. SUCCESS]
07:23:38.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. org.apache.commons.math.random.RandomAdaptorTest#testConfig started...]
07:23:38.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. SUCCESS]
07:23:38.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. org.apache.commons.math.random.RandomAdaptorTest#testNextInversionDeviate started...]
07:23:38.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. SUCCESS]
07:23:38.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. org.apache.commons.math.random.RandomAdaptorTest#testNextHex started...]
07:23:38.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. SUCCESS]
07:23:38.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. org.apache.commons.math.random.RandomAdaptorTest#testNextInt started...]
07:23:38.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. SUCCESS]
07:23:38.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. org.apache.commons.math.random.RandomAdaptorTest#testNextCauchy started...]
07:23:38.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. SUCCESS]
07:23:38.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. org.apache.commons.math.random.RandomAdaptorTest#testNextGamma started...]
07:23:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. SUCCESS]
07:23:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. org.apache.commons.math.random.RandomAdaptorTest#testNextWeibull started...]
07:23:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. SUCCESS]
07:23:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. org.apache.commons.math.random.RandomAdaptorTest#testNextBeta started...]
07:23:38.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. SUCCESS]
07:23:38.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. org.apache.commons.math.random.RandomAdaptorTest#testNextLong started...]
07:23:38.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. SUCCESS]
07:23:38.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. org.apache.commons.math.random.RandomAdaptorTest#testNextZipf started...]
07:23:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. SUCCESS]
07:23:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. org.apache.commons.math.random.RandomDataTest#testNextPascal started...]
07:23:38.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. SUCCESS]
07:23:38.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. org.apache.commons.math.random.RandomDataTest#testNextSample started...]
07:23:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. SUCCESS]
07:23:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues started...]
07:23:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. SUCCESS]
07:23:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints started...]
07:23:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. SUCCESS]
07:23:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. org.apache.commons.math.random.RandomDataTest#testNextGaussian started...]
07:23:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. SUCCESS]
07:23:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. org.apache.commons.math.random.RandomDataTest#testNextF started...]
07:23:38.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. SUCCESS]
07:23:38.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. org.apache.commons.math.random.RandomDataTest#testNextT started...]
07:23:38.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. SUCCESS]
07:23:38.431 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. org.apache.commons.math.random.RandomDataTest#testNextChiSquare started...]
07:23:38.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. SUCCESS]
07:23:38.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. org.apache.commons.math.random.RandomDataTest#testNextSecureLong started...]
07:23:38.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. SUCCESS]
07:23:38.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. org.apache.commons.math.random.RandomDataTest#testNextSecureHex started...]
07:23:38.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. SUCCESS]
07:23:38.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. org.apache.commons.math.random.RandomDataTest#testNextSecureInt started...]
07:23:38.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. SUCCESS]
07:23:38.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency started...]
07:23:40.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. SUCCESS]
07:23:40.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. org.apache.commons.math.random.RandomDataTest#testNextHypergeometric started...]
07:23:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. SUCCESS]
07:23:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues started...]
07:23:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. SUCCESS]
07:23:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. org.apache.commons.math.random.RandomDataTest#testNextExponential started...]
07:23:40.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. SUCCESS]
07:23:40.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. org.apache.commons.math.random.RandomDataTest#testNextPoisson started...]
07:23:40.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. SUCCESS]
07:23:40.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. org.apache.commons.math.random.RandomDataTest#testNextUniform started...]
07:23:40.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. SUCCESS]
07:23:40.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. org.apache.commons.math.random.RandomDataTest#testNextPermutation started...]
07:23:40.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. SUCCESS]
07:23:40.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. org.apache.commons.math.random.RandomDataTest#testNextBinomial started...]
07:23:40.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. SUCCESS]
07:23:40.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. org.apache.commons.math.random.RandomDataTest#testConfig started...]
07:23:40.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. SUCCESS]
07:23:40.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate started...]
07:23:40.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. SUCCESS]
07:23:40.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. org.apache.commons.math.random.RandomDataTest#testNextHex started...]
07:23:40.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. SUCCESS]
07:23:40.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. org.apache.commons.math.random.RandomDataTest#testNextInt started...]
07:23:40.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. SUCCESS]
07:23:40.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. org.apache.commons.math.random.RandomDataTest#testNextCauchy started...]
07:23:40.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. SUCCESS]
07:23:40.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. org.apache.commons.math.random.RandomDataTest#testNextGamma started...]
07:23:40.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. SUCCESS]
07:23:40.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. org.apache.commons.math.random.RandomDataTest#testNextWeibull started...]
07:23:40.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. SUCCESS]
07:23:40.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. org.apache.commons.math.random.RandomDataTest#testNextBeta started...]
07:23:40.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. SUCCESS]
07:23:40.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. org.apache.commons.math.random.RandomDataTest#testNextLong started...]
07:23:40.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. SUCCESS]
07:23:40.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. org.apache.commons.math.random.RandomDataTest#testNextZipf started...]
07:23:40.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. SUCCESS]
07:23:40.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation started...]
07:23:40.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. SUCCESS]
07:23:40.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation started...]
07:23:40.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. SUCCESS]
07:23:40.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. org.apache.commons.math.random.ValueServerTest#testProperties started...]
07:23:40.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. SUCCESS]
07:23:40.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. org.apache.commons.math.random.ValueServerTest#testModes started...]
07:23:40.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. SUCCESS]
07:23:40.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. org.apache.commons.math.random.ValueServerTest#testFill started...]
07:23:40.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. SUCCESS]
07:23:40.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile started...]
07:23:40.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. SUCCESS]
07:23:40.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile started...]
07:23:40.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. SUCCESS]
07:23:40.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. org.apache.commons.math.random.ValueServerTest#testNextDigestFail started...]
07:23:40.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. SUCCESS]
07:23:40.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. org.apache.commons.math.random.ValueServerTest#testReplay started...]
07:23:40.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. SUCCESS]
07:23:40.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. org.apache.commons.math.random.ValueServerTest#testNextDigest started...]
07:23:40.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. SUCCESS]
07:23:40.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. org.apache.commons.math.random.Well1024aTest#testFloat started...]
07:23:40.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. SUCCESS]
07:23:40.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. org.apache.commons.math.random.Well1024aTest#testGaussian started...]
07:23:40.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. SUCCESS]
07:23:40.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. org.apache.commons.math.random.Well1024aTest#testReferenceCode started...]
07:23:40.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. SUCCESS]
07:23:40.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. org.apache.commons.math.random.Well1024aTest#testDouble started...]
07:23:40.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. SUCCESS]
07:23:40.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. org.apache.commons.math.random.Well1024aTest#testNextInt started...]
07:23:40.165 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. SUCCESS]
07:23:40.165 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. org.apache.commons.math.random.Well1024aTest#testNexBoolean started...]
07:23:40.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. SUCCESS]
07:23:40.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. org.apache.commons.math.random.Well1024aTest#testNextIntNeg started...]
07:23:40.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. SUCCESS]
07:23:40.167 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. org.apache.commons.math.random.Well1024aTest#testNexBytes started...]
07:23:40.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. SUCCESS]
07:23:40.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. org.apache.commons.math.random.Well1024aTest#testNextIntN started...]
07:23:40.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. SUCCESS]
07:23:40.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. org.apache.commons.math.random.Well1024aTest#testNextLong started...]
07:23:40.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. SUCCESS]
07:23:40.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. org.apache.commons.math.random.Well19937aTest#testReferenceCode started...]
07:23:40.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. SUCCESS]
07:23:40.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. org.apache.commons.math.random.Well19937cTest#testReferenceCode started...]
07:23:40.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. SUCCESS]
07:23:40.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. org.apache.commons.math.random.Well44497aTest#testReferenceCode started...]
07:23:40.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. SUCCESS]
07:23:40.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. org.apache.commons.math.random.Well44497bTest#testReferenceCode started...]
07:23:40.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. SUCCESS]
07:23:40.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. org.apache.commons.math.random.Well512aTest#testReferenceCode started...]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. SUCCESS]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive started...]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. SUCCESS]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive started...]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. SUCCESS]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative started...]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. SUCCESS]
07:23:40.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. SUCCESS]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. SUCCESS]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. SUCCESS]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. SUCCESS]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. SUCCESS]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan started...]
07:23:40.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. SUCCESS]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive started...]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. SUCCESS]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero started...]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. SUCCESS]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive started...]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. SUCCESS]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. org.apache.commons.math.special.BetaTest#testLogBetaNanPositive started...]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. SUCCESS]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive started...]
07:23:40.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. SUCCESS]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero started...]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. SUCCESS]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive started...]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. SUCCESS]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive started...]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. SUCCESS]
07:23:40.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. org.apache.commons.math.special.ErfTest#testLargeValues started...]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. SUCCESS]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. org.apache.commons.math.special.ErfTest#testErf1960 started...]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. SUCCESS]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. org.apache.commons.math.special.ErfTest#testErf2576 started...]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. SUCCESS]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. org.apache.commons.math.special.ErfTest#testErf2807 started...]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. SUCCESS]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. org.apache.commons.math.special.ErfTest#testErf3291 started...]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. SUCCESS]
07:23:40.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. org.apache.commons.math.special.ErfTest#testErfcGnu started...]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. SUCCESS]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. org.apache.commons.math.special.ErfTest#testErfcMaple started...]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. SUCCESS]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. org.apache.commons.math.special.ErfTest#testErf0 started...]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. SUCCESS]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. org.apache.commons.math.special.ErfTest#testErfGnu started...]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. SUCCESS]
07:23:40.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. org.apache.commons.math.special.GammaTest#testTrigamma started...]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. SUCCESS]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. org.apache.commons.math.special.GammaTest#testLogGammaPositive started...]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. SUCCESS]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. org.apache.commons.math.special.GammaTest#testLogGammaNegative started...]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. SUCCESS]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive started...]
07:23:40.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. SUCCESS]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative started...]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. SUCCESS]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. org.apache.commons.math.special.GammaTest#testLogGammaNan started...]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. SUCCESS]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. org.apache.commons.math.special.GammaTest#testDigammaLargeArgs started...]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. SUCCESS]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive started...]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. SUCCESS]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive started...]
07:23:40.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. SUCCESS]
07:23:40.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. org.apache.commons.math.special.GammaTest#testLogGammaZero started...]
07:23:40.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. SUCCESS]
07:23:40.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. org.apache.commons.math.special.GammaTest#testDigammaSmallArgs started...]
07:23:40.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. SUCCESS]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive started...]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. SUCCESS]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan started...]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. SUCCESS]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero started...]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. SUCCESS]
07:23:40.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics started...]
07:23:40.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. SUCCESS]
07:23:40.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics started...]
07:23:40.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. SUCCESS]
07:23:40.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. org.apache.commons.math.stat.FrequencyTest#testEmptyTable started...]
07:23:40.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. SUCCESS]
07:23:40.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. org.apache.commons.math.stat.FrequencyTest#testAdd started...]
07:23:40.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. SUCCESS]
07:23:40.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. org.apache.commons.math.stat.FrequencyTest#testPcts started...]
07:23:40.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. SUCCESS]
07:23:40.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. org.apache.commons.math.stat.FrequencyTest#testToString started...]
07:23:40.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. SUCCESS]
07:23:40.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount started...]
07:23:40.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. SUCCESS]
07:23:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. org.apache.commons.math.stat.FrequencyTest#testIntegerValues started...]
07:23:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. SUCCESS]
07:23:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. org.apache.commons.math.stat.FrequencyTest#testCounts started...]
07:23:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. SUCCESS]
07:23:40.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. org.apache.commons.math.stat.FrequencyTest#testSerial started...]
07:23:40.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. SUCCESS]
07:23:40.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. org.apache.commons.math.stat.StatUtilsTest#testNormalize1 started...]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. SUCCESS]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. org.apache.commons.math.stat.StatUtilsTest#testNormalize2 started...]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. SUCCESS]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats started...]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. SUCCESS]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. org.apache.commons.math.stat.StatUtilsTest#testPercentile started...]
07:23:40.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. SUCCESS]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions started...]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. SUCCESS]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. org.apache.commons.math.stat.StatUtilsTest#testMax started...]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. SUCCESS]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. org.apache.commons.math.stat.StatUtilsTest#testMin started...]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. SUCCESS]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. org.apache.commons.math.stat.StatUtilsTest#testStats started...]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. SUCCESS]
07:23:40.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. org.apache.commons.math.stat.StatUtilsTest#testSumSq started...]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. SUCCESS]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. org.apache.commons.math.stat.StatUtilsTest#testMean started...]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. SUCCESS]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions started...]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. SUCCESS]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. org.apache.commons.math.stat.StatUtilsTest#testProduct started...]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. SUCCESS]
07:23:40.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. org.apache.commons.math.stat.StatUtilsTest#testGeometricMean started...]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. SUCCESS]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. org.apache.commons.math.stat.StatUtilsTest#testVariance started...]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. SUCCESS]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. org.apache.commons.math.stat.StatUtilsTest#testSumLog started...]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. SUCCESS]
07:23:40.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid started...]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. SUCCESS]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance started...]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. SUCCESS]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference started...]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. SUCCESS]
07:23:40.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial started...]
07:23:40.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. SUCCESS]
07:23:40.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate started...]
07:23:40.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. SUCCESS]
07:23:40.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace started...]
07:23:40.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. SUCCESS]
07:23:40.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters started...]
07:23:40.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. SUCCESS]
07:23:40.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances started...]
07:23:40.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. SUCCESS]
07:23:40.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2 started...]
07:23:40.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. SUCCESS]
07:23:40.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData started...]
07:23:40.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. SUCCESS]
07:23:40.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility started...]
07:23:40.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. SUCCESS]
07:23:40.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. org.apache.commons.math.stat.correlation.CovarianceTest#testConstant started...]
07:23:40.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. SUCCESS]
07:23:40.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency started...]
07:23:40.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. SUCCESS]
07:23:40.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. org.apache.commons.math.stat.correlation.CovarianceTest#testLongly started...]
07:23:40.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. SUCCESS]
07:23:40.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData started...]
07:23:40.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. SUCCESS]
07:23:40.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency started...]
07:23:40.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. SUCCESS]
07:23:40.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility started...]
07:23:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. SUCCESS]
07:23:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero started...]
07:23:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. SUCCESS]
07:23:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant started...]
07:23:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. SUCCESS]
07:23:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency started...]
07:23:40.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. SUCCESS]
07:23:40.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency started...]
07:23:40.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. SUCCESS]
07:23:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly started...]
07:23:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. SUCCESS]
07:23:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData started...]
07:23:40.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. SUCCESS]
07:23:40.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency started...]
07:23:40.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. SUCCESS]
07:23:40.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss started...]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. SUCCESS]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant started...]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. SUCCESS]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency started...]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. SUCCESS]
07:23:40.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency started...]
07:23:40.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. SUCCESS]
07:23:40.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly started...]
07:23:40.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. SUCCESS]
07:23:40.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility started...]
07:23:40.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. SUCCESS]
07:23:40.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero started...]
07:23:40.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. SUCCESS]
07:23:40.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. org.apache.commons.math.stat.data.LewTest#testCertifiedValues started...]
07:23:40.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. SUCCESS]
07:23:40.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues started...]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. SUCCESS]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive started...]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. SUCCESS]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative started...]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. SUCCESS]
07:23:40.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation started...]
07:23:40.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. SUCCESS]
07:23:40.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues started...]
07:23:40.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. SUCCESS]
07:23:40.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency started...]
07:23:40.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. SUCCESS]
07:23:40.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate started...]
07:23:40.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. SUCCESS]
07:23:40.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate started...]
07:23:40.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. SUCCESS]
07:23:40.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter started...]
07:23:40.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. SUCCESS]
07:23:40.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720 started...]
07:23:40.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. SUCCESS]
07:23:40.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy started...]
07:23:40.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. SUCCESS]
07:23:40.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString started...]
07:23:40.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. SUCCESS]
07:23:40.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics started...]
07:23:40.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. SUCCESS]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection started...]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. SUCCESS]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval started...]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. SUCCESS]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize started...]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. SUCCESS]
07:23:40.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues started...]
07:23:40.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. SUCCESS]
07:23:40.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction started...]
07:23:40.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. SUCCESS]
07:23:40.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean started...]
07:23:40.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. SUCCESS]
07:23:40.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization started...]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. SUCCESS]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats started...]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. SUCCESS]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions started...]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. SUCCESS]
07:23:40.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis started...]
07:23:40.621 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. SUCCESS]
07:23:40.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean started...]
07:23:40.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. SUCCESS]
07:23:40.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats started...]
07:23:40.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. SUCCESS]
07:23:40.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions started...]
07:23:40.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. SUCCESS]
07:23:40.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis started...]
07:23:40.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. SUCCESS]
07:23:40.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization started...]
07:23:40.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. SUCCESS]
07:23:40.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats started...]
07:23:40.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. SUCCESS]
07:23:40.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString started...]
07:23:40.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. SUCCESS]
07:23:40.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts started...]
07:23:40.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. SUCCESS]
07:23:40.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
07:23:40.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. SUCCESS]
07:23:40.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics started...]
07:23:40.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. SUCCESS]
07:23:40.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension started...]
07:23:40.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. SUCCESS]
07:23:40.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection started...]
07:23:40.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. SUCCESS]
07:23:40.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState started...]
07:23:40.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. SUCCESS]
07:23:40.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
07:23:40.635 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. SUCCESS]
07:23:40.635 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization started...]
07:23:40.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. SUCCESS]
07:23:40.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString started...]
07:23:40.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. SUCCESS]
07:23:40.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode started...]
07:23:40.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. SUCCESS]
07:23:40.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean started...]
07:23:40.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. SUCCESS]
07:23:40.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary started...]
07:23:40.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. SUCCESS]
07:23:40.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization started...]
07:23:40.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. SUCCESS]
07:23:40.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats started...]
07:23:40.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. SUCCESS]
07:23:40.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy started...]
07:23:40.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. SUCCESS]
07:23:40.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts started...]
07:23:40.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. SUCCESS]
07:23:40.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions started...]
07:23:40.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. SUCCESS]
07:23:40.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection started...]
07:23:40.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. SUCCESS]
07:23:40.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState started...]
07:23:40.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. SUCCESS]
07:23:40.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode started...]
07:23:40.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. SUCCESS]
07:23:40.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter started...]
07:23:40.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. SUCCESS]
07:23:40.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720 started...]
07:23:40.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. SUCCESS]
07:23:40.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy started...]
07:23:40.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. SUCCESS]
07:23:40.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString started...]
07:23:40.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. SUCCESS]
07:23:40.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics started...]
07:23:40.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. SUCCESS]
07:23:40.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection started...]
07:23:40.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. SUCCESS]
07:23:40.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval started...]
07:23:40.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. SUCCESS]
07:23:40.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize started...]
07:23:40.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. SUCCESS]
07:23:40.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues started...]
07:23:40.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. SUCCESS]
07:23:40.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization started...]
07:23:40.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. SUCCESS]
07:23:40.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats started...]
07:23:40.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. SUCCESS]
07:23:40.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString started...]
07:23:40.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. SUCCESS]
07:23:40.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts started...]
07:23:40.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. SUCCESS]
07:23:40.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
07:23:40.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. SUCCESS]
07:23:40.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics started...]
07:23:40.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. SUCCESS]
07:23:40.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension started...]
07:23:40.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. SUCCESS]
07:23:40.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection started...]
07:23:40.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. SUCCESS]
07:23:40.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState started...]
07:23:40.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. SUCCESS]
07:23:40.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
07:23:40.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. SUCCESS]
07:23:40.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean started...]
07:23:40.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. SUCCESS]
07:23:40.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary started...]
07:23:40.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. SUCCESS]
07:23:40.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization started...]
07:23:40.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. SUCCESS]
07:23:40.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats started...]
07:23:40.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. SUCCESS]
07:23:40.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy started...]
07:23:40.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. SUCCESS]
07:23:40.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts started...]
07:23:40.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. SUCCESS]
07:23:40.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions started...]
07:23:40.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. SUCCESS]
07:23:40.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection started...]
07:23:40.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. SUCCESS]
07:23:40.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState started...]
07:23:40.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. SUCCESS]
07:23:40.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode started...]
07:23:40.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. SUCCESS]
07:23:40.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples started...]
07:23:40.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. SUCCESS]
07:23:40.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization started...]
07:23:40.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. SUCCESS]
07:23:40.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation started...]
07:23:40.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. SUCCESS]
07:23:40.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency started...]
07:23:40.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. SUCCESS]
07:23:40.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode started...]
07:23:40.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. SUCCESS]
07:23:40.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency started...]
07:23:40.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. SUCCESS]
07:23:40.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial started...]
07:23:40.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. SUCCESS]
07:23:40.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy started...]
07:23:40.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. SUCCESS]
07:23:40.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation started...]
07:23:40.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. SUCCESS]
07:23:40.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency started...]
07:23:40.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. SUCCESS]
07:23:40.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples started...]
07:23:40.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. SUCCESS]
07:23:40.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization started...]
07:23:40.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. SUCCESS]
07:23:40.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation started...]
07:23:40.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. SUCCESS]
07:23:40.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency started...]
07:23:40.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. SUCCESS]
07:23:40.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode started...]
07:23:40.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. SUCCESS]
07:23:40.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency started...]
07:23:40.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. SUCCESS]
07:23:40.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial started...]
07:23:40.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. SUCCESS]
07:23:40.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy started...]
07:23:40.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. SUCCESS]
07:23:40.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation started...]
07:23:40.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. SUCCESS]
07:23:40.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency started...]
07:23:40.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. SUCCESS]
07:23:40.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues started...]
07:23:40.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. SUCCESS]
07:23:40.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples started...]
07:23:40.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. SUCCESS]
07:23:40.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization started...]
07:23:40.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. SUCCESS]
07:23:40.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation started...]
07:23:40.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. SUCCESS]
07:23:40.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency started...]
07:23:40.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. SUCCESS]
07:23:40.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode started...]
07:23:40.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. SUCCESS]
07:23:40.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency started...]
07:23:40.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. SUCCESS]
07:23:40.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial started...]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. SUCCESS]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy started...]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. SUCCESS]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation started...]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. SUCCESS]
07:23:40.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency started...]
07:23:40.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. SUCCESS]
07:23:40.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN started...]
07:23:40.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. SUCCESS]
07:23:40.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples started...]
07:23:40.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. SUCCESS]
07:23:40.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization started...]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. SUCCESS]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation started...]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. SUCCESS]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency started...]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. SUCCESS]
07:23:40.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode started...]
07:23:40.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. SUCCESS]
07:23:40.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency started...]
07:23:40.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. SUCCESS]
07:23:40.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial started...]
07:23:40.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. SUCCESS]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy started...]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. SUCCESS]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation started...]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. SUCCESS]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency started...]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. SUCCESS]
07:23:40.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples started...]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. SUCCESS]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean started...]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. SUCCESS]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples started...]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. SUCCESS]
07:23:40.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization started...]
07:23:40.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. SUCCESS]
07:23:40.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation started...]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. SUCCESS]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency started...]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. SUCCESS]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode started...]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. SUCCESS]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency started...]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. SUCCESS]
07:23:40.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial started...]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. SUCCESS]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy started...]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. SUCCESS]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation started...]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. SUCCESS]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency started...]
07:23:40.693 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. SUCCESS]
07:23:40.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples started...]
07:23:40.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. SUCCESS]
07:23:40.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization started...]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. SUCCESS]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation started...]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. SUCCESS]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency started...]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. SUCCESS]
07:23:40.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode started...]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. SUCCESS]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency started...]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. SUCCESS]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial started...]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. SUCCESS]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy started...]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. SUCCESS]
07:23:40.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation started...]
07:23:40.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. SUCCESS]
07:23:40.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency started...]
07:23:40.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. SUCCESS]
07:23:40.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData started...]
07:23:40.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. SUCCESS]
07:23:40.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff started...]
07:23:40.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. SUCCESS]
07:23:40.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance started...]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. SUCCESS]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown started...]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. SUCCESS]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs started...]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. SUCCESS]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp started...]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. SUCCESS]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation started...]
07:23:40.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. SUCCESS]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff started...]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. SUCCESS]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample started...]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. SUCCESS]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN started...]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. SUCCESS]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples started...]
07:23:40.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. SUCCESS]
07:23:40.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization started...]
07:23:40.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. SUCCESS]
07:23:40.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation started...]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. SUCCESS]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency started...]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. SUCCESS]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode started...]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. SUCCESS]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency started...]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. SUCCESS]
07:23:40.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial started...]
07:23:40.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. SUCCESS]
07:23:40.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy started...]
07:23:40.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. SUCCESS]
07:23:40.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation started...]
07:23:40.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. SUCCESS]
07:23:40.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency started...]
07:23:40.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. SUCCESS]
07:23:40.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN started...]
07:23:40.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. SUCCESS]
07:23:40.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation started...]
07:23:40.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. SUCCESS]
07:23:40.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples started...]
07:23:40.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. SUCCESS]
07:23:40.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization started...]
07:23:40.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. SUCCESS]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation started...]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. SUCCESS]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency started...]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. SUCCESS]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode started...]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. SUCCESS]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency started...]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. SUCCESS]
07:23:40.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial started...]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. SUCCESS]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy started...]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. SUCCESS]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation started...]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. SUCCESS]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency started...]
07:23:40.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. SUCCESS]
07:23:40.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples started...]
07:23:40.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. SUCCESS]
07:23:40.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization started...]
07:23:40.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. SUCCESS]
07:23:40.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation started...]
07:23:40.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. SUCCESS]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency started...]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. SUCCESS]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode started...]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. SUCCESS]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency started...]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. SUCCESS]
07:23:40.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial started...]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. SUCCESS]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy started...]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. SUCCESS]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation started...]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. SUCCESS]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency started...]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. SUCCESS]
07:23:40.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN started...]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. SUCCESS]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance started...]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. SUCCESS]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation started...]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. SUCCESS]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples started...]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. SUCCESS]
07:23:40.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization started...]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. SUCCESS]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation started...]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. SUCCESS]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency started...]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. SUCCESS]
07:23:40.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode started...]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. SUCCESS]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency started...]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. SUCCESS]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial started...]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. SUCCESS]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy started...]
07:23:40.718 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. SUCCESS]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation started...]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. SUCCESS]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency started...]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. SUCCESS]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic started...]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. SUCCESS]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats started...]
07:23:40.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. SUCCESS]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch started...]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. SUCCESS]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial started...]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. SUCCESS]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic started...]
07:23:40.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. SUCCESS]
07:23:40.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats started...]
07:23:40.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. SUCCESS]
07:23:40.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch started...]
07:23:40.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. SUCCESS]
07:23:40.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial started...]
07:23:40.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. SUCCESS]
07:23:40.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs started...]
07:23:40.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. SUCCESS]
07:23:40.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues started...]
07:23:40.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. SUCCESS]
07:23:40.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples started...]
07:23:40.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. SUCCESS]
07:23:40.723 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization started...]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. SUCCESS]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation started...]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. SUCCESS]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency started...]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. SUCCESS]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode started...]
07:23:40.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. SUCCESS]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency started...]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. SUCCESS]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial started...]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. SUCCESS]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy started...]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. SUCCESS]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation started...]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. SUCCESS]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency started...]
07:23:40.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. SUCCESS]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy started...]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. SUCCESS]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation started...]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. SUCCESS]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency started...]
07:23:40.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. SUCCESS]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs started...]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. SUCCESS]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues started...]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. SUCCESS]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples started...]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. SUCCESS]
07:23:40.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization started...]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. SUCCESS]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation started...]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. SUCCESS]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency started...]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. SUCCESS]
07:23:40.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode started...]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. SUCCESS]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency started...]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. SUCCESS]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial started...]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. SUCCESS]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy started...]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. SUCCESS]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation started...]
07:23:40.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. SUCCESS]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency started...]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. SUCCESS]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile started...]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. SUCCESS]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample started...]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. SUCCESS]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton started...]
07:23:40.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. SUCCESS]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile started...]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. SUCCESS]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5 started...]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. SUCCESS]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile started...]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. SUCCESS]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues started...]
07:23:40.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. SUCCESS]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty started...]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. SUCCESS]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy started...]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. SUCCESS]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation started...]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. SUCCESS]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency started...]
07:23:40.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. SUCCESS]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues started...]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. SUCCESS]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct started...]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. SUCCESS]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples started...]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. SUCCESS]
07:23:40.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization started...]
07:23:40.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. SUCCESS]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation started...]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. SUCCESS]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency started...]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. SUCCESS]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode started...]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. SUCCESS]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency started...]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. SUCCESS]
07:23:40.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial started...]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. SUCCESS]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy started...]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. SUCCESS]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation started...]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. SUCCESS]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency started...]
07:23:40.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. SUCCESS]
07:23:40.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues started...]
07:23:40.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. SUCCESS]
07:23:40.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples started...]
07:23:40.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. SUCCESS]
07:23:40.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization started...]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. SUCCESS]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation started...]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. SUCCESS]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency started...]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. SUCCESS]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode started...]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. SUCCESS]
07:23:40.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency started...]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. SUCCESS]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial started...]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. SUCCESS]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy started...]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. SUCCESS]
07:23:40.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation started...]
07:23:40.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. SUCCESS]
07:23:40.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency started...]
07:23:40.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. SUCCESS]
07:23:40.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues started...]
07:23:40.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. SUCCESS]
07:23:40.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples started...]
07:23:40.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. SUCCESS]
07:23:40.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization started...]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. SUCCESS]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation started...]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. SUCCESS]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency started...]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. SUCCESS]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode started...]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. SUCCESS]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency started...]
07:23:40.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. SUCCESS]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial started...]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. SUCCESS]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy started...]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. SUCCESS]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation started...]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. SUCCESS]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency started...]
07:23:40.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. SUCCESS]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues started...]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. SUCCESS]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum started...]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. SUCCESS]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples started...]
07:23:40.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. SUCCESS]
07:23:40.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization started...]
07:23:40.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. SUCCESS]
07:23:40.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation started...]
07:23:40.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. SUCCESS]
07:23:40.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency started...]
07:23:40.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. SUCCESS]
07:23:40.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode started...]
07:23:40.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. SUCCESS]
07:23:40.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency started...]
07:23:40.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. SUCCESS]
07:23:40.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial started...]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. SUCCESS]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy started...]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. SUCCESS]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation started...]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. SUCCESS]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency started...]
07:23:40.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. SUCCESS]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts started...]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. SUCCESS]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence started...]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. SUCCESS]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts started...]
07:23:40.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. SUCCESS]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount started...]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. SUCCESS]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic started...]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. SUCCESS]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare started...]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. SUCCESS]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts started...]
07:23:40.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. SUCCESS]
07:23:40.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation started...]
07:23:40.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. SUCCESS]
07:23:40.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple started...]
07:23:40.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. SUCCESS]
07:23:40.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest started...]
07:23:40.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. SUCCESS]
07:23:40.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue started...]
07:23:40.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. SUCCESS]
07:23:40.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue started...]
07:23:40.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. SUCCESS]
07:23:40.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest started...]
07:23:40.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. SUCCESS]
07:23:40.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. org.apache.commons.math.stat.inference.TTestTest#testSmallSamples started...]
07:23:40.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. SUCCESS]
07:23:40.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic started...]
07:23:40.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. SUCCESS]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. org.apache.commons.math.stat.inference.TTestTest#testOneSampleT started...]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. SUCCESS]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. org.apache.commons.math.stat.inference.TTestTest#testPaired started...]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. SUCCESS]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic started...]
07:23:40.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. SUCCESS]
07:23:40.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest started...]
07:23:40.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. SUCCESS]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence started...]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. SUCCESS]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount started...]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. SUCCESS]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples started...]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. SUCCESS]
07:23:40.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic started...]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. SUCCESS]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic started...]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. SUCCESS]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare started...]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. SUCCESS]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT started...]
07:23:40.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. SUCCESS]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. org.apache.commons.math.stat.inference.TestUtilsTest#testPaired started...]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. SUCCESS]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic started...]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. SUCCESS]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils started...]
07:23:40.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. SUCCESS]
07:23:40.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation started...]
07:23:40.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. SUCCESS]
07:23:40.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple started...]
07:23:40.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. SUCCESS]
07:23:40.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage started...]
07:23:40.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. SUCCESS]
07:23:40.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom started...]
07:23:40.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. SUCCESS]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential started...]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. SUCCESS]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum started...]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. SUCCESS]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault started...]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. SUCCESS]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs started...]
07:23:40.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. SUCCESS]
07:23:40.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum started...]
07:23:40.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. SUCCESS]
07:23:40.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency started...]
07:23:41.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. SUCCESS]
07:23:41.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData started...]
07:23:41.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. SUCCESS]
07:23:41.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare started...]
07:23:41.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. SUCCESS]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData started...]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. SUCCESS]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency started...]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. SUCCESS]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData started...]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. SUCCESS]
07:23:41.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch started...]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. SUCCESS]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance started...]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. SUCCESS]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. SUCCESS]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData started...]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. SUCCESS]
07:23:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2 started...]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. SUCCESS]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals started...]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. SUCCESS]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. SUCCESS]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. SUCCESS]
07:23:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample started...]
07:23:41.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. SUCCESS]
07:23:41.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
07:23:41.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. SUCCESS]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. SUCCESS]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData started...]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. SUCCESS]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull started...]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. SUCCESS]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. SUCCESS]
07:23:41.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull started...]
07:23:41.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. SUCCESS]
07:23:41.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat started...]
07:23:41.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. SUCCESS]
07:23:41.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility started...]
07:23:41.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. SUCCESS]
07:23:41.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull started...]
07:23:41.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. SUCCESS]
07:23:41.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull started...]
07:23:41.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. SUCCESS]
07:23:41.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance started...]
07:23:41.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. SUCCESS]
07:23:41.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
07:23:41.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. SUCCESS]
07:23:41.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit started...]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. SUCCESS]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly started...]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. SUCCESS]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2 started...]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. SUCCESS]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals started...]
07:23:41.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. SUCCESS]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. SUCCESS]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. SUCCESS]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample started...]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. SUCCESS]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. SUCCESS]
07:23:41.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
07:23:41.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. SUCCESS]
07:23:41.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData started...]
07:23:41.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. SUCCESS]
07:23:41.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull started...]
07:23:41.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. SUCCESS]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. SUCCESS]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull started...]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. SUCCESS]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty started...]
07:23:41.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. SUCCESS]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear started...]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. SUCCESS]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr started...]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. SUCCESS]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs started...]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. SUCCESS]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect started...]
07:23:41.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. SUCCESS]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty started...]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. SUCCESS]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative started...]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. SUCCESS]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle started...]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. SUCCESS]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty started...]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. SUCCESS]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle started...]
07:23:41.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. SUCCESS]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY started...]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. SUCCESS]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative started...]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. SUCCESS]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris started...]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. SUCCESS]
07:23:41.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference started...]
07:23:41.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. SUCCESS]
07:23:41.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom started...]
07:23:41.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. SUCCESS]
07:23:41.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple started...]
07:23:41.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. SUCCESS]
07:23:41.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData started...]
07:23:41.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. SUCCESS]
07:23:41.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. org.apache.commons.math.transform.FastCosineTransformerTest#testParameters started...]
07:23:41.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. SUCCESS]
07:23:41.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction started...]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. SUCCESS]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData started...]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. SUCCESS]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. org.apache.commons.math.transform.FastFourierTransformerTest#testParameters started...]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. SUCCESS]
07:23:41.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction started...]
07:23:41.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. SUCCESS]
07:23:41.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. org.apache.commons.math.transform.FastFourierTransformerTest#test2DData started...]
07:23:41.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. SUCCESS]
07:23:41.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points started...]
07:23:41.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. SUCCESS]
07:23:41.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points started...]
07:23:41.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. SUCCESS]
07:23:41.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points started...]
07:23:41.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. SUCCESS]
07:23:41.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse started...]
07:23:41.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. SUCCESS]
07:23:41.292 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData started...]
07:23:41.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. SUCCESS]
07:23:41.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. org.apache.commons.math.transform.FastSineTransformerTest#testParameters started...]
07:23:41.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. SUCCESS]
07:23:41.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction started...]
07:23:41.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. SUCCESS]
07:23:41.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. org.apache.commons.math.util.BigRealFieldTest#testOne started...]
07:23:41.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. SUCCESS]
07:23:41.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. org.apache.commons.math.util.BigRealFieldTest#testZero started...]
07:23:41.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. SUCCESS]
07:23:41.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. org.apache.commons.math.util.BigRealFieldTest#testSerial started...]
07:23:41.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. SUCCESS]
07:23:41.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. org.apache.commons.math.util.BigRealTest#testAdd started...]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. SUCCESS]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. org.apache.commons.math.util.BigRealTest#testSubtract started...]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. SUCCESS]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. org.apache.commons.math.util.BigRealTest#testCompareTo started...]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. SUCCESS]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. org.apache.commons.math.util.BigRealTest#testBigDecimalValue started...]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. SUCCESS]
07:23:41.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. org.apache.commons.math.util.BigRealTest#testDivide started...]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. SUCCESS]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. org.apache.commons.math.util.BigRealTest#testMultiply started...]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. SUCCESS]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode started...]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. SUCCESS]
07:23:41.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. org.apache.commons.math.util.BigRealTest#testSerial started...]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. SUCCESS]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. org.apache.commons.math.util.BigRealTest#testDoubleValue started...]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. SUCCESS]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. org.apache.commons.math.util.BigRealTest#testConstructor started...]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. SUCCESS]
07:23:41.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio started...]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. SUCCESS]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble started...]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. SUCCESS]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal started...]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. SUCCESS]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. org.apache.commons.math.util.DefaultTransformerTest#testTransformObject started...]
07:23:41.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. SUCCESS]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. org.apache.commons.math.util.DefaultTransformerTest#testTransformString started...]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. SUCCESS]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger started...]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. SUCCESS]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. org.apache.commons.math.util.DefaultTransformerTest#testTransformNull started...]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. SUCCESS]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. org.apache.commons.math.util.DefaultTransformerTest#testSerial started...]
07:23:41.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. SUCCESS]
07:23:41.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[0] started...]
07:23:41.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. SUCCESS]
07:23:41.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[1] started...]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. SUCCESS]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[2] started...]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. SUCCESS]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[3] started...]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. SUCCESS]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[4] started...]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. SUCCESS]
07:23:41.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[5] started...]
07:23:41.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. SUCCESS]
07:23:41.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[6] started...]
07:23:41.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. SUCCESS]
07:23:41.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[7] started...]
07:23:41.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. SUCCESS]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[8] started...]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. SUCCESS]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[9] started...]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. SUCCESS]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[10] started...]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. SUCCESS]
07:23:41.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[11] started...]
07:23:41.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. SUCCESS]
07:23:41.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[12] started...]
07:23:41.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. SUCCESS]
07:23:41.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[13] started...]
07:23:41.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. SUCCESS]
07:23:41.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[14] started...]
07:23:41.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. SUCCESS]
07:23:41.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[15] started...]
07:23:41.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. SUCCESS]
07:23:41.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[16] started...]
07:23:41.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. SUCCESS]
07:23:41.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[17] started...]
07:23:41.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. SUCCESS]
07:23:41.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[18] started...]
07:23:41.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. SUCCESS]
07:23:41.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[19] started...]
07:23:41.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. SUCCESS]
07:23:41.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[20] started...]
07:23:41.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. SUCCESS]
07:23:41.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[21] started...]
07:23:41.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. SUCCESS]
07:23:41.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[22] started...]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. SUCCESS]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[23] started...]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. SUCCESS]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[24] started...]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. SUCCESS]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[25] started...]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. SUCCESS]
07:23:41.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[26] started...]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. SUCCESS]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[27] started...]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. SUCCESS]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[28] started...]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. SUCCESS]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[29] started...]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. SUCCESS]
07:23:41.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[30] started...]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. SUCCESS]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[31] started...]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. SUCCESS]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[32] started...]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. SUCCESS]
07:23:41.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[33] started...]
07:23:41.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. SUCCESS]
07:23:41.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[34] started...]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. SUCCESS]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[35] started...]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. SUCCESS]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[36] started...]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. SUCCESS]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[37] started...]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. SUCCESS]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[38] started...]
07:23:41.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. SUCCESS]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[39] started...]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. SUCCESS]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[40] started...]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. SUCCESS]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[41] started...]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. SUCCESS]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[42] started...]
07:23:41.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. SUCCESS]
07:23:41.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[43] started...]
07:23:41.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. SUCCESS]
07:23:41.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[44] started...]
07:23:41.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. SUCCESS]
07:23:41.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[45] started...]
07:23:41.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. SUCCESS]
07:23:41.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[46] started...]
07:23:41.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. SUCCESS]
07:23:41.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[47] started...]
07:23:41.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. SUCCESS]
07:23:41.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[48] started...]
07:23:41.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. SUCCESS]
07:23:41.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[49] started...]
07:23:41.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. SUCCESS]
07:23:41.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[50] started...]
07:23:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. SUCCESS]
07:23:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[51] started...]
07:23:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. SUCCESS]
07:23:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[52] started...]
07:23:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. SUCCESS]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. org.apache.commons.math.util.FastMathTest#testLogSpecialCases started...]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. SUCCESS]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases started...]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. SUCCESS]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases started...]
07:23:41.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. SUCCESS]
07:23:41.344 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. org.apache.commons.math.util.FastMathTest#testCbrtAccuracy started...]
07:23:42.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. SUCCESS]
07:23:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. org.apache.commons.math.util.FastMathTest#testAtan2 started...]
07:23:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. SUCCESS]
07:23:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses started...]
07:23:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. SUCCESS]
07:23:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. org.apache.commons.math.util.FastMathTest#testLogAccuracy started...]
07:23:43.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. SUCCESS]
07:23:43.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. org.apache.commons.math.util.FastMathTest#testAcosAccuracy started...]
07:23:44.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. SUCCESS]
07:23:44.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. org.apache.commons.math.util.FastMathTest#testMinMaxDouble started...]
07:23:44.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. SUCCESS]
07:23:44.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. org.apache.commons.math.util.FastMathTest#testPowSpecialCases started...]
07:23:44.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. SUCCESS]
07:23:44.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases started...]
07:23:44.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. SUCCESS]
07:23:44.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. org.apache.commons.math.util.FastMathTest#testTanhAccuracy started...]
07:23:46.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. SUCCESS]
07:23:46.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. org.apache.commons.math.util.FastMathTest#testToRadians started...]
07:23:46.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. SUCCESS]
07:23:46.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. org.apache.commons.math.util.FastMathTest#testConstants started...]
07:23:46.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. SUCCESS]
07:23:46.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. org.apache.commons.math.util.FastMathTest#testTanAccuracy started...]
07:23:46.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. SUCCESS]
07:23:46.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases started...]
07:23:46.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. SUCCESS]
07:23:46.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. org.apache.commons.math.util.FastMathTest#testToDegrees started...]
07:23:46.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. SUCCESS]
07:23:46.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. org.apache.commons.math.util.FastMathTest#testSinAccuracy started...]
07:23:46.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. SUCCESS]
07:23:46.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. org.apache.commons.math.util.FastMathTest#testAtan2Accuracy started...]
07:23:47.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. SUCCESS]
07:23:47.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases started...]
07:23:47.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. SUCCESS]
07:23:47.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. org.apache.commons.math.util.FastMathTest#testExpm1Accuracy started...]
07:23:47.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. SUCCESS]
07:23:47.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. org.apache.commons.math.util.FastMathTest#testMinMaxFloat started...]
07:23:47.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. SUCCESS]
07:23:47.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. org.apache.commons.math.util.FastMathTest#testHyperbolic started...]
07:23:47.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. SUCCESS]
07:23:47.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. org.apache.commons.math.util.FastMathTest#testCoshAccuracy started...]
07:23:48.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. SUCCESS]
07:23:48.226 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. org.apache.commons.math.util.FastMathTest#testPowAccuracy started...]
07:23:48.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. SUCCESS]
07:23:48.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. org.apache.commons.math.util.FastMathTest#testExpSpecialCases started...]
07:23:48.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. SUCCESS]
07:23:48.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. org.apache.commons.math.util.FastMathTest#testLog10Accuracy started...]
07:23:48.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. SUCCESS]
07:23:48.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. org.apache.commons.math.util.FastMathTest#testAtanAccuracy started...]
07:23:48.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. SUCCESS]
07:23:48.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. org.apache.commons.math.util.FastMathTest#testNextAfter started...]
07:23:48.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. SUCCESS]
07:23:48.686 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. org.apache.commons.math.util.FastMathTest#testLog1pAccuracy started...]
07:23:48.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. SUCCESS]
07:23:48.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. org.apache.commons.math.util.FastMathTest#testHyperbolicInverses started...]
07:23:48.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. SUCCESS]
07:23:48.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. org.apache.commons.math.util.FastMathTest#testAsinAccuracy started...]
07:23:50.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. SUCCESS]
07:23:50.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. org.apache.commons.math.util.FastMathTest#testCosAccuracy started...]
07:23:50.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. SUCCESS]
07:23:50.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. org.apache.commons.math.util.FastMathTest#testExpAccuracy started...]
07:23:50.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. SUCCESS]
07:23:50.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. org.apache.commons.math.util.FastMathTest#testSinhAccuracy started...]
07:23:51.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. SUCCESS]
Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)
07:23:51.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. org.apache.commons.math.util.FastMathTestPerformance#testAbs started...]
abs        0    1.0      4 6.4948      0 0.0000
07:23:51.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. SUCCESS]
07:23:51.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. org.apache.commons.math.util.FastMathTestPerformance#testCos started...]
cos       62    1.0     51 0.8147     17 0.2857
07:23:52.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. SUCCESS]
07:23:52.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. org.apache.commons.math.util.FastMathTestPerformance#testExp started...]
exp       78    1.0     38 0.4850     71 0.9118
07:23:54.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. SUCCESS]
07:23:54.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. org.apache.commons.math.util.FastMathTestPerformance#testLog started...]
log       94    1.0     52 0.5556      0 0.0000
07:23:56.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. SUCCESS]
07:23:56.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. org.apache.commons.math.util.FastMathTestPerformance#testPow started...]
pow      297    1.0    175 0.5897    101 0.3420
07:24:01.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. SUCCESS]
07:24:01.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. org.apache.commons.math.util.FastMathTestPerformance#testSin started...]
sin       57    1.0     47 0.8177     19 0.3300
07:24:03.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. SUCCESS]
07:24:03.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. org.apache.commons.math.util.FastMathTestPerformance#testTan started...]
tan       89    1.0     97 1.0908     29 0.3320
07:24:05.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. SUCCESS]
07:24:05.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. org.apache.commons.math.util.FastMathTestPerformance#testAtan2 started...]
atan2    140    1.0    136 0.9713    140 0.9981
07:24:09.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. SUCCESS]
07:24:09.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. org.apache.commons.math.util.FastMathTestPerformance#testExpm1 started...]
expm1     87    1.0     94 1.0727     89 1.0254
07:24:12.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. SUCCESS]
07:24:12.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. org.apache.commons.math.util.FastMathTestPerformance#testHypot started...]
hypot    815    1.0     48 0.0590    814 0.9987
07:24:28.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. SUCCESS]
07:24:28.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. org.apache.commons.math.util.FastMathTestPerformance#testLog10 started...]
log10    130    1.0    139 1.0703      0 0.0000
07:24:31.625 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. SUCCESS]
07:24:31.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. org.apache.commons.math.util.FastMathTestPerformance#testLog1p started...]
log1p     95    1.0    139 1.4577     99 1.0411
07:24:34.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. SUCCESS]
07:24:34.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. org.apache.commons.math.util.FastMathTestPerformance#testAcos started...]
acos     452    1.0    199 0.4415    455 1.0058
07:24:46.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. SUCCESS]
07:24:46.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. org.apache.commons.math.util.FastMathTestPerformance#testAsin started...]
asin     461    1.0    191 0.4147    462 1.0034
07:24:57.206 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. SUCCESS]
07:24:57.206 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. org.apache.commons.math.util.FastMathTestPerformance#testAtan started...]
atan      73    1.0     92 1.2590     75 1.0334
07:24:59.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. SUCCESS]
07:24:59.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. org.apache.commons.math.util.FastMathTestPerformance#testCbrt started...]
cbrt     126    1.0     97 0.7647    128 1.0151
07:25:03.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. SUCCESS]
07:25:03.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. org.apache.commons.math.util.FastMathTestPerformance#testCosh started...]
cosh     129    1.0     85 0.6625    131 1.0175
07:25:06.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. SUCCESS]
07:25:06.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. org.apache.commons.math.util.FastMathTestPerformance#testSinh started...]
sinh     142    1.0     94 0.6677    145 1.0208
07:25:10.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. SUCCESS]
07:25:10.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. org.apache.commons.math.util.FastMathTestPerformance#testSqrt started...]
sqrt       1    1.0      0 0.0000      0 0.0000
07:25:10.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. SUCCESS]
07:25:10.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. org.apache.commons.math.util.FastMathTestPerformance#testTanh started...]
tanh     149    1.0    115 0.7686    151 1.0116
07:25:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. SUCCESS]
07:25:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. org.apache.commons.math.util.IncrementorTest#testAboveMaxCount started...]
07:25:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. SUCCESS]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. org.apache.commons.math.util.IncrementorTest#testBelowMaxCount started...]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. SUCCESS]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. org.apache.commons.math.util.IncrementorTest#testAccessor started...]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. SUCCESS]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. org.apache.commons.math.util.IncrementorTest#testReset started...]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. SUCCESS]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. org.apache.commons.math.util.IncrementorTest#testBulkIncrement started...]
07:25:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. SUCCESS]
07:25:14.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt started...]
07:25:14.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. SUCCESS]
07:25:14.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient started...]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. SUCCESS]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. org.apache.commons.math.util.MathUtilsTest#testFactorialFail started...]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. SUCCESS]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. org.apache.commons.math.util.MathUtilsTest#testGcdConsistency started...]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. SUCCESS]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble2 started...]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. SUCCESS]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble3 started...]
07:25:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. SUCCESS]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. org.apache.commons.math.util.MathUtilsTest#testSortInPlace started...]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. SUCCESS]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt2 started...]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. SUCCESS]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt3 started...]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. SUCCESS]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble started...]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. SUCCESS]
07:25:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. org.apache.commons.math.util.MathUtilsTest#testRoundDouble started...]
07:25:14.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. SUCCESS]
07:25:14.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle started...]
07:25:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. SUCCESS]
07:25:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. org.apache.commons.math.util.MathUtilsTest#testNormalizeArray started...]
07:25:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. SUCCESS]
07:25:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. org.apache.commons.math.util.MathUtilsTest#testIndicatorInt started...]
07:25:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. SUCCESS]
07:25:14.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle started...]
07:25:14.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. SUCCESS]
07:25:14.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble started...]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. SUCCESS]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. org.apache.commons.math.util.MathUtilsTest#testGcd started...]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. SUCCESS]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. org.apache.commons.math.util.MathUtilsTest#testLcm started...]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. SUCCESS]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. org.apache.commons.math.util.MathUtilsTest#testLog started...]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. SUCCESS]
07:25:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. org.apache.commons.math.util.MathUtilsTest#testPow started...]
07:25:14.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. SUCCESS]
07:25:14.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge started...]
07:25:15.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. SUCCESS]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. org.apache.commons.math.util.MathUtilsTest#testCheckOrder started...]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. SUCCESS]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. org.apache.commons.math.util.MathUtilsTest#testCosh started...]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. SUCCESS]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. org.apache.commons.math.util.MathUtilsTest#testHash started...]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. SUCCESS]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. org.apache.commons.math.util.MathUtilsTest#testSinh started...]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. SUCCESS]
07:25:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. org.apache.commons.math.util.MathUtilsTest#testCompareToEpsilon started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble started...]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. SUCCESS]
07:25:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. org.apache.commons.math.util.MathUtilsTest#testRoundFloat started...]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. SUCCESS]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. org.apache.commons.math.util.MathUtilsTest#testArrayEqualsIncludingNaN started...]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. SUCCESS]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. org.apache.commons.math.util.MathUtilsTest#testArrayHash started...]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. SUCCESS]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. org.apache.commons.math.util.MathUtilsTest#testFactorial started...]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. SUCCESS]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedDelta started...]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. SUCCESS]
07:25:15.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. org.apache.commons.math.util.MathUtilsTest#testGcdLong started...]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. SUCCESS]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedUlps started...]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. SUCCESS]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. org.apache.commons.math.util.MathUtilsTest#testLcmLong started...]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. SUCCESS]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. org.apache.commons.math.util.MathUtilsTest#testArrayEquals started...]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. SUCCESS]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. org.apache.commons.math.util.MathUtilsTest#testSubAndCheck started...]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. SUCCESS]
07:25:15.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. org.apache.commons.math.util.MathUtilsTest#testCheckFinite started...]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. SUCCESS]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. org.apache.commons.math.util.MathUtilsTest#testFloatEqualsWithAllowedUlps started...]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. SUCCESS]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong started...]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. SUCCESS]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble started...]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. SUCCESS]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt started...]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. SUCCESS]
07:25:15.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail started...]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. SUCCESS]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. org.apache.commons.math.util.MathUtilsTest#testMath475 started...]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. SUCCESS]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. org.apache.commons.math.util.MathUtilsTest#testCoshNaN started...]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. SUCCESS]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage started...]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. SUCCESS]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. org.apache.commons.math.util.MathUtilsTest#test0Choose0 started...]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. SUCCESS]
07:25:15.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. org.apache.commons.math.util.MathUtilsTest#testMulAndCheck started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. org.apache.commons.math.util.MathUtilsTest#testSignByte started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. org.apache.commons.math.util.MathUtilsTest#testSignLong started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong started...]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. SUCCESS]
07:25:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. org.apache.commons.math.util.MathUtilsTest#testCompareToMaxUlps started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. org.apache.commons.math.util.MathUtilsTest#testIndicatorShort started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. org.apache.commons.math.util.MathUtilsTest#testIndicatorByte started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. org.apache.commons.math.util.MathUtilsTest#testIndicatorLong started...]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. SUCCESS]
07:25:15.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1 started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2 started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaN started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. org.apache.commons.math.util.MathUtilsTest#testSignDouble started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. org.apache.commons.math.util.MathUtilsTest#testAddAndCheck started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. org.apache.commons.math.util.MathUtilsTest#testReduce started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. SUCCESS]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. org.apache.commons.math.util.MathUtilsTest#testSignInt started...]
07:25:15.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. SUCCESS]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. org.apache.commons.math.util.MathUtilsTest#testSinhNaN started...]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. SUCCESS]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. org.apache.commons.math.util.MathUtilsTest#testSignFloat started...]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. SUCCESS]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. org.apache.commons.math.util.MathUtilsTest#testSignShort started...]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. SUCCESS]
07:25:15.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency started...]
07:25:15.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. SUCCESS]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions started...]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. SUCCESS]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors started...]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. SUCCESS]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion started...]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. SUCCESS]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions started...]
07:25:15.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. SUCCESS]
07:25:15.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting started...]
07:25:15.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. SUCCESS]
07:25:15.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2 started...]
07:25:15.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. SUCCESS]
07:25:15.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions started...]
07:25:15.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. SUCCESS]
07:25:15.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy started...]
07:25:15.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. SUCCESS]
07:25:15.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey started...]
07:25:15.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. SUCCESS]
07:25:15.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent started...]
07:25:15.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. SUCCESS]
07:25:15.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet started...]
07:25:15.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. SUCCESS]
07:25:15.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize started...]
07:25:15.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. SUCCESS]
07:25:15.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2 started...]
07:25:15.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. SUCCESS]
07:25:15.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification started...]
07:25:15.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. SUCCESS]
07:25:15.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent started...]
07:25:15.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. SUCCESS]
07:25:15.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty started...]
07:25:15.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. SUCCESS]
07:25:15.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting started...]
07:25:15.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. SUCCESS]
07:25:15.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove started...]
07:25:15.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. SUCCESS]
07:25:15.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator started...]
07:25:15.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. SUCCESS]
07:25:15.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize started...]
07:25:15.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. SUCCESS]
07:25:15.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty started...]
07:25:15.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. SUCCESS]
07:25:15.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting started...]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. SUCCESS]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2 started...]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. SUCCESS]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions started...]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. SUCCESS]
07:25:15.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. org.apache.commons.math.util.OpenIntToFieldTest#testCopy started...]
07:25:15.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. SUCCESS]
07:25:15.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey started...]
07:25:15.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. SUCCESS]
07:25:15.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent started...]
07:25:15.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. SUCCESS]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet started...]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. SUCCESS]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize started...]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. SUCCESS]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. org.apache.commons.math.util.OpenIntToFieldTest#testRemove2 started...]
07:25:15.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. SUCCESS]
07:25:15.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification started...]
07:25:15.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. SUCCESS]
07:25:15.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent started...]
07:25:15.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. SUCCESS]
07:25:15.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty started...]
07:25:15.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. SUCCESS]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting started...]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. SUCCESS]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. org.apache.commons.math.util.OpenIntToFieldTest#testRemove started...]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. SUCCESS]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. org.apache.commons.math.util.OpenIntToFieldTest#testIterator started...]
07:25:15.184 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. SUCCESS]
07:25:15.185 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize started...]
07:25:15.185 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. SUCCESS]
07:25:15.185 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty started...]
07:25:15.185 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. SUCCESS]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. org.apache.commons.math.util.PairTest#testAccessor started...]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. SUCCESS]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. org.apache.commons.math.util.PairTest#testEquals started...]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. SUCCESS]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements started...]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. SUCCESS]
07:25:15.186 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000 started...]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. SUCCESS]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute started...]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. SUCCESS]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors started...]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. SUCCESS]
07:25:15.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling started...]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. SUCCESS]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor started...]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. SUCCESS]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements started...]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. SUCCESS]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity started...]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. SUCCESS]
07:25:15.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard started...]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. SUCCESS]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode started...]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. SUCCESS]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators started...]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. SUCCESS]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion started...]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. SUCCESS]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues started...]
07:25:15.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax started...]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. org.apache.commons.math.util.TransformerMapTest#testClear started...]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. org.apache.commons.math.util.TransformerMapTest#testContainsTransformer started...]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. org.apache.commons.math.util.TransformerMapTest#testTransformers started...]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. org.apache.commons.math.util.TransformerMapTest#testPutTransformer started...]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. SUCCESS]
07:25:15.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. org.apache.commons.math.util.TransformerMapTest#testContainsClass started...]
07:25:15.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. SUCCESS]
07:25:15.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. org.apache.commons.math.util.TransformerMapTest#testClasses started...]
07:25:15.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. SUCCESS]
07:25:15.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. org.apache.commons.math.util.TransformerMapTest#testSerial started...]
07:25:15.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. SUCCESS]
07:25:15.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer started...]
07:25:15.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. SUCCESS]
07:25:15.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (116147 ms)
<> Total tests run: 2420
<> Ignored tests: 1
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:15.194 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=226, Suspiciousness=0.7071067811865475]
07:25:15.199 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:15,199 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:15.215 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:15.246 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:15.966 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:15.969 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:15,999 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:15,999 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:16,116 DEBUG spoon.support.StandardEnvironment - built in 117 ms
2015-02-28 07:25:16,116 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:16,117 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:16.118 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:16,118 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:16.132 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2 = null ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:16.134 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2 = null ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sqr2 = null;
    
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:16.139 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:16.166 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:16.338 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable sqr2 might not have been initialized
    }
    ^
07:25:16.340 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=227, Suspiciousness=0.7071067811865475]
07:25:16.340 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:16,340 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:16.350 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:16.374 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:16.546 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:16.546 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:16,574 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:16,575 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:16,681 DEBUG spoon.support.StandardEnvironment - built in 107 ms
2015-02-28 07:25:16,681 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:16,681 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:16.682 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:16,683 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:16.685 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2Split = null ##### Before:
{
    sqr2 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:16.685 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2Split = null ##### After:
{
    sqr2 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sqr2Split = null;
    
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:16.690 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:16.712 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:16.846 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable sqr2Split might not have been initialized
    }
    ^
07:25:16.847 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=228, Suspiciousness=0.7071067811865475]
07:25:16.847 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:16,847 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:16.857 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:16.875 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.039 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:17.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,068 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,068 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,166 DEBUG spoon.support.StandardEnvironment - built in 98 ms
2015-02-28 07:25:17,166 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:17,166 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:17.167 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,167 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:17.169 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2Reciprocal = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.170 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr2Reciprocal = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sqr2Reciprocal = null;
    
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.174 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.188 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.296 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable sqr2Reciprocal might not have been initialized
    }
    ^
07:25:17.297 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=229, Suspiciousness=0.7071067811865475]
07:25:17.297 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,297 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:17.305 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.314 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.399 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:17.400 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,418 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,419 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,483 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 07:25:17,484 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:17,484 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:17.485 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,485 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:17.486 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr3 = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.486 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr3 = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sqr3 = null;
    
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.488 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.498 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.561 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable sqr3 might not have been initialized
    }
    ^
07:25:17.562 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=230, Suspiciousness=0.7071067811865475]
07:25:17.562 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,562 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:17.565 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.654 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:17.654 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,672 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,672 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,763 DEBUG spoon.support.StandardEnvironment - built in 91 ms
2015-02-28 07:25:17,763 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:17,763 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:17.764 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,764 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:17.765 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr3Reciprocal = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.765 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sqr3Reciprocal = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sqr3Reciprocal = null;
    
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.767 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.776 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable sqr3Reciprocal might not have been initialized
    }
    ^
07:25:17.839 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=231, Suspiciousness=0.7071067811865475]
07:25:17.839 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,839 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:17.842 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:17.851 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:17.916 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:17.916 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,933 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,934 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:17,996 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 07:25:17,996 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:17,997 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:17.997 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:17,997 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:17.998 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### pi = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:17.999 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### pi = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        pi = null;
    
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.000 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.009 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.059 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable pi might not have been initialized
    }
    ^
07:25:18.059 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=232, Suspiciousness=0.7071067811865475]
07:25:18.059 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,059 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.061 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.070 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.132 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:18.132 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,148 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,149 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,209 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 07:25:18,209 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:18,209 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:18.210 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,210 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:18.211 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### piSplit = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.211 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### piSplit = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        piSplit = null;
    
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.212 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.220 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.267 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable piSplit might not have been initialized
    }
    ^
07:25:18.268 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=233, Suspiciousness=0.7071067811865475]
07:25:18.268 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,268 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.270 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.277 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.331 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:18.331 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,346 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,346 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,404 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 07:25:18,404 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:18,404 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:18.405 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,405 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:18.406 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### e = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.406 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### e = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        e = null;
    
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.407 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.414 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.454 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable e might not have been initialized
    }
    ^
07:25:18.455 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=234, Suspiciousness=0.7071067811865475]
07:25:18.455 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,455 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.457 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.464 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.513 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:18.513 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,528 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,528 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,583 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-02-28 07:25:18,584 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:18,584 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:18.584 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,585 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:18.585 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### eSplit = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.586 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### eSplit = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        eSplit = null;
    
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.586 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.629 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable eSplit might not have been initialized
    }
    ^
07:25:18.630 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=235, Suspiciousness=0.7071067811865475]
07:25:18.630 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,630 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.631 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.638 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.683 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:18.683 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,698 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,699 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,754 DEBUG spoon.support.StandardEnvironment - built in 56 ms
2015-02-28 07:25:18,754 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:18,754 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:18.755 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,755 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:18.756 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln2 = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.756 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln2 = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ln2 = null;
    
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.757 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.764 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.796 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable ln2 might not have been initialized
    }
    ^
07:25:18.797 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=236, Suspiciousness=0.7071067811865475]
07:25:18.797 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,797 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.798 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:18.847 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,863 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,863 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:18,916 DEBUG spoon.support.StandardEnvironment - built in 53 ms
2015-02-28 07:25:18,917 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:18,917 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:18.917 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,917 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:18.918 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln2Split = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.919 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln2Split = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ln2Split = null;
    
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:18.919 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.926 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:18.958 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable ln2Split might not have been initialized
    }
    ^
07:25:18.959 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=237, Suspiciousness=0.7071067811865475]
07:25:18.959 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:18,959 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:18.961 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:18.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.007 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.007 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,022 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,023 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,077 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-02-28 07:25:19,077 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:19,077 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:19.077 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,078 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:19.078 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln5 = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ln5 = null;
    ln5Split = null;
    ln10 = null;
}
07:25:19.079 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln5 = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ln5 = null;
    
    ln5Split = null;
    ln10 = null;
}
07:25:19.079 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.086 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.117 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable ln5 might not have been initialized
    }
    ^
07:25:19.117 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=238, Suspiciousness=0.7071067811865475]
07:25:19.118 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,118 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.119 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.165 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,180 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,180 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,232 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-02-28 07:25:19,232 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:19,232 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:19.233 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,233 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:19.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln5Split = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ln5Split = null;
    ln10 = null;
}
07:25:19.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln5Split = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ln5Split = null;
    
    ln10 = null;
}
07:25:19.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.242 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.272 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable ln5Split might not have been initialized
    }
    ^
07:25:19.272 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=239, Suspiciousness=0.7071067811865475]
07:25:19.273 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,273 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.274 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.318 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.318 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,333 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,333 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,385 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-02-28 07:25:19,385 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:19,385 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:19.386 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,386 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:19.387 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln10 = null ##### Before:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ln10 = null;
}
07:25:19.387 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ln10 = null ##### After:
{
    sqr2 = null;
    sqr2Split = null;
    sqr2Reciprocal = null;
    sqr3 = null;
    sqr3Reciprocal = null;
    pi = null;
    piSplit = null;
    e = null;
    eSplit = null;
    ln2 = null;
    ln2Split = null;
    ln5 = null;
    ln5Split = null;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ln10 = null;
    
}
07:25:19.388 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.395 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.422 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpField.java:261: error: variable ln10 might not have been initialized
    }
    ^
07:25:19.423 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=573, Suspiciousness=0.7071067811865475]
07:25:19.423 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,423 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.425 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.431 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.466 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.466 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:573.
07:25:19.467 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=573, Suspiciousness=0.7071067811865475]
07:25:19.467 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=574, Suspiciousness=0.7071067811865475]
07:25:19.467 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,467 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.469 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.475 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.510 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:574.
07:25:19.510 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=574, Suspiciousness=0.7071067811865475]
07:25:19.510 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=575, Suspiciousness=0.7071067811865475]
07:25:19.510 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,510 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.511 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.517 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.552 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.552 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:575.
07:25:19.552 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=575, Suspiciousness=0.7071067811865475]
07:25:19.552 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=576, Suspiciousness=0.7071067811865475]
07:25:19.552 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,552 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.553 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.559 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.593 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:576.
07:25:19.593 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=576, Suspiciousness=0.7071067811865475]
07:25:19.593 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=578, Suspiciousness=0.7071067811865475]
07:25:19.593 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,593 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.595 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.634 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.635 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:578.
07:25:19.635 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=578, Suspiciousness=0.7071067811865475]
07:25:19.635 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=579, Suspiciousness=0.7071067811865475]
07:25:19.635 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,635 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:19.636 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.642 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.675 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.675 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,691 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,691 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:19,743 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-02-28 07:25:19,743 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:19,743 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:19.744 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:19,744 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:19.748 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:19.749 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:19.749 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:19.755 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:19.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:19.814 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:20.343 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:20.344 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (531 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:20.347 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:20.350 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:20.350 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:20.351 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:579
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:20.351 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:20.351 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:20.351 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:579 otherwise the patch would be "true" or "false"
07:25:20.352 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=579, Suspiciousness=0.7071067811865475]
07:25:20.352 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=580, Suspiciousness=0.7071067811865475]
07:25:20.352 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:20,352 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:20.354 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:20.362 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:20.412 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:20.412 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:20,434 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:20,435 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:20,510 DEBUG spoon.support.StandardEnvironment - built in 76 ms
2015-02-28 07:25:20,510 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:20,510 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:20.511 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:20,511 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:20.516 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:20.516 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:20.517 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:20.525 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:20.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:20.592 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:20.805 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:20.805 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (213 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:224)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:20.808 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:20.809 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:20.809 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:224)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:20.810 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:580
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:20.810 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:20.810 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:20.810 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:580 otherwise the patch would be "true" or "false"
07:25:20.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=580, Suspiciousness=0.7071067811865475]
07:25:20.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=582, Suspiciousness=0.7071067811865475]
07:25:20.810 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:20,810 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:20.812 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:20.820 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:20.866 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:20.867 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:582.
07:25:20.867 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=582, Suspiciousness=0.7071067811865475]
07:25:20.867 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=583, Suspiciousness=0.7071067811865475]
07:25:20.867 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:20,867 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:20.869 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:20.877 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:20.920 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:20.920 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:20,943 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:20,943 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:21,019 DEBUG spoon.support.StandardEnvironment - built in 76 ms
2015-02-28 07:25:21,019 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:21,019 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:21.020 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:21,020 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:21.024 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:21.025 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:21.026 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:21.034 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:21.087 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:21.098 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:21.740 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:21.740 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (642 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:21.743 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:21.745 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:21.745 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:21.746 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:583
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:21.746 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:21.746 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:21.746 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:583 otherwise the patch would be "true" or "false"
07:25:21.746 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=583, Suspiciousness=0.7071067811865475]
07:25:21.746 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=584, Suspiciousness=0.7071067811865475]
07:25:21.747 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:21,747 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:21.748 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:21.757 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:21.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:21.799 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:21,822 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:21,822 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:21,898 DEBUG spoon.support.StandardEnvironment - built in 76 ms
2015-02-28 07:25:21,899 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:21,899 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:21.900 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:21,900 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:21.904 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:21.905 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:21.905 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:21.914 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:21.965 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:21.976 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:22.250 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:22.250 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (274 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:226)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:22.254 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:22.254 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:22.254 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:226)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:22.255 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:584
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:22.255 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:22.255 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:22.255 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:584 otherwise the patch would be "true" or "false"
07:25:22.255 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=584, Suspiciousness=0.7071067811865475]
07:25:22.255 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=586, Suspiciousness=0.7071067811865475]
07:25:22.255 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:22,255 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:22.257 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:22.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:22.307 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:22.307 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:22,330 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:22,330 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:22,405 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:22,405 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:22,406 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:22.406 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:22,407 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:22.411 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:22.412 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:22.412 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:22.420 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:22.469 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:22.480 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:23.075 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:23.075 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (596 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:23.078 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:23.081 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:23.081 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:23.082 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:586
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:23.082 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:23.082 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:23.082 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:586 otherwise the patch would be "true" or "false"
07:25:23.082 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=586, Suspiciousness=0.7071067811865475]
07:25:23.082 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=587, Suspiciousness=0.7071067811865475]
07:25:23.082 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:23,082 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:23.084 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:23.092 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:23.130 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:23.131 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,153 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,153 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,228 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:23,229 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:23,229 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:23.229 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:23,230 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:23.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:23.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:23.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:23.243 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:23.290 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:23.300 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:23.622 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:23.623 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (322 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:229)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:23.626 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:23.626 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:23.626 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:229)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:23.627 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:587
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:23.627 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:23.627 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:23.627 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:587 otherwise the patch would be "true" or "false"
07:25:23.627 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=587, Suspiciousness=0.7071067811865475]
07:25:23.627 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=588, Suspiciousness=0.7071067811865475]
07:25:23.628 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:23,628 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:23.629 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:23.637 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:23.673 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:23.673 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,695 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,696 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:23,769 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-02-28 07:25:23,769 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:23,769 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:23.770 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:23,770 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:23.774 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:23.775 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:23.775 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:23.782 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:23.827 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:23.838 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:24.426 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:24.426 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (588 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:24.429 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:24.431 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:24.432 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:24.432 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:588
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:24.432 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:24.432 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:24.432 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:588 otherwise the patch would be "true" or "false"
07:25:24.433 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=588, Suspiciousness=0.7071067811865475]
07:25:24.433 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=589, Suspiciousness=0.7071067811865475]
07:25:24.433 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:24,433 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:24.435 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:24.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:24.477 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:24.477 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:24,499 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:24,500 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:24,572 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-02-28 07:25:24,573 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:24,573 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:24.573 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:24,574 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:24.577 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:24.578 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:24.578 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:24.586 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:24.630 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:24.639 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:24.890 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:24.890 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (251 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:233)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:24.893 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:24.894 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:24.894 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:345)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:233)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:25:24.895 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:589
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:24.895 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:24.895 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): null]
07:25:24.895 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:589 otherwise the patch would be "true" or "false"
07:25:24.895 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=589, Suspiciousness=0.7071067811865475]
07:25:24.895 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=590, Suspiciousness=0.7071067811865475]
07:25:24.895 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:24,895 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:24.897 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:24.904 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:24.939 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:24.939 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:24,961 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:24,962 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:25,036 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-02-28 07:25:25,036 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:25,036 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:25.037 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,037 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:25.041 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString() ##### Before:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
}
07:25:25.042 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString() ##### After:
{
    final org.apache.commons.math.dfp.DfpField highPrecisionField = new org.apache.commons.math.dfp.DfpField(highPrecisionDecimalDigits , false);
    final org.apache.commons.math.dfp.Dfp highPrecisionOne = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 1);
    final org.apache.commons.math.dfp.Dfp highPrecisionTwo = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 2);
    final org.apache.commons.math.dfp.Dfp highPrecisionThree = new org.apache.commons.math.dfp.Dfp(highPrecisionField , 3);
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr2String = highPrecisionSqr2.toString();
    org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();
    final org.apache.commons.math.dfp.Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();
    org.apache.commons.math.dfp.DfpField.sqr3String = highPrecisionSqr3.toString();
    org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();
    org.apache.commons.math.dfp.DfpField.piString = org.apache.commons.math.dfp.DfpField.computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();
    org.apache.commons.math.dfp.DfpField.eString = org.apache.commons.math.dfp.DfpField.computeExp(highPrecisionOne, highPrecisionOne).toString();
    org.apache.commons.math.dfp.DfpField.ln2String = org.apache.commons.math.dfp.DfpField.computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();
    org.apache.commons.math.dfp.DfpField.ln5String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 5), highPrecisionOne, highPrecisionTwo).toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionOne",highPrecisionOne);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionTwo",highPrecisionTwo);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionThree",highPrecisionThree);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionField",highPrecisionField);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr3",highPrecisionSqr3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionSqr2",highPrecisionSqr2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("highPrecisionDecimalDigits",highPrecisionDecimalDigits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.dfp.DfpField.ln10String = org.apache.commons.math.dfp.DfpField.computeLn(new org.apache.commons.math.dfp.Dfp(highPrecisionField , 10), highPrecisionOne, highPrecisionTwo).toString();
    
}
07:25:25.042 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.049 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.093 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.103 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:25.704 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:25.705 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (602 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:25.708 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:25.710 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:25.710 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:25.711 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:590
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:25.711 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:25.711 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:25.711 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:590 otherwise the patch would be "true" or "false"
07:25:25.711 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=590, Suspiciousness=0.7071067811865475]
07:25:25.711 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=603, Suspiciousness=0.7071067811865475]
07:25:25.711 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,712 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.713 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.720 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.754 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.754 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:603.
07:25:25.754 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=603, Suspiciousness=0.7071067811865475]
07:25:25.755 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=604, Suspiciousness=0.7071067811865475]
07:25:25.755 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,755 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.756 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.763 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.797 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.797 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:604.
07:25:25.797 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=604, Suspiciousness=0.7071067811865475]
07:25:25.797 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=605, Suspiciousness=0.7071067811865475]
07:25:25.797 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,797 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.798 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.839 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:605.
07:25:25.839 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=605, Suspiciousness=0.7071067811865475]
07:25:25.839 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=606, Suspiciousness=0.7071067811865475]
07:25:25.839 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,839 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.840 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.880 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.880 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:606.
07:25:25.880 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=606, Suspiciousness=0.7071067811865475]
07:25:25.880 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=607, Suspiciousness=0.7071067811865475]
07:25:25.880 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,880 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.882 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.889 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.921 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.921 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:607.
07:25:25.921 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=607, Suspiciousness=0.7071067811865475]
07:25:25.922 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
07:25:25.922 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:25,922 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:25.924 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:25.931 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:25.964 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:25.964 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:25,986 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:25,986 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:26,061 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:26,061 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:26,061 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:26.062 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,062 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:26.075 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < 20 ; i++) {
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
} ##### Before:
{
    org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
    org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
    org.apache.commons.math.dfp.Dfp four = two.add(two);
    org.apache.commons.math.dfp.Dfp two2kp3 = two;
    org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < 20 ; i++) {
        final org.apache.commons.math.dfp.Dfp ykM1 = yk;
        final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
        final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
        final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
        yk = one.subtract(s).divide(one.add(s));
        two2kp3 = two2kp3.multiply(four);
        final org.apache.commons.math.dfp.Dfp p = one.add(yk);
        final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
        ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
        if (yk.equals(ykM1)) {
            break;
        } 
    }
    return one.divide(ak);
}
07:25:26.076 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < 20 ; i++) {
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
} ##### After:
{
    org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
    org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
    org.apache.commons.math.dfp.Dfp four = two.add(two);
    org.apache.commons.math.dfp.Dfp two2kp3 = two;
    org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < 20 ; i++) {
            final org.apache.commons.math.dfp.Dfp ykM1 = yk;
            final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
            final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
            final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
            yk = one.subtract(s).divide(one.add(s));
            two2kp3 = two2kp3.multiply(four);
            final org.apache.commons.math.dfp.Dfp p = one.add(yk);
            final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
            ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
            if (yk.equals(ykM1)) {
                break;
            } 
        }
    
    return one.divide(ak);
}
07:25:26.077 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.084 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.136 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:26.679 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:26.680 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (543 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:26.683 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:26.685 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:26.685 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:26.686 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:615
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:26.686 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:26.686 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:26.686 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:615 otherwise the patch would be "true" or "false"
07:25:26.686 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
07:25:26.686 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=616, Suspiciousness=0.7071067811865475]
07:25:26.686 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,686 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:26.688 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.727 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.728 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:616.
07:25:26.728 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=616, Suspiciousness=0.7071067811865475]
07:25:26.728 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=618, Suspiciousness=0.7071067811865475]
07:25:26.728 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,728 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:26.729 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.737 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.769 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:618.
07:25:26.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=618, Suspiciousness=0.7071067811865475]
07:25:26.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=619, Suspiciousness=0.7071067811865475]
07:25:26.769 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,769 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:26.770 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.810 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.810 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:619.
07:25:26.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=619, Suspiciousness=0.7071067811865475]
07:25:26.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=620, Suspiciousness=0.7071067811865475]
07:25:26.810 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,810 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:26.812 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.819 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.851 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.851 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:620.
07:25:26.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=620, Suspiciousness=0.7071067811865475]
07:25:26.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=621, Suspiciousness=0.7071067811865475]
07:25:26.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,851 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:26.853 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:26.860 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:26.892 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:26.892 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:26,914 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:26,915 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:26,990 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:26,990 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:26,990 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:26.991 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:26,991 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:27.003 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### yk = one.subtract(s).divide(one.add(s)) ##### Before:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:27.003 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### yk = one.subtract(s).divide(one.add(s)) ##### After:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        yk = one.subtract(s).divide(one.add(s));
    
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:27.004 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:27.011 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:27.052 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:27.063 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:27.666 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:27.666 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (603 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:27.669 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:27.671 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:27.671 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:27.672 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:621
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:27.672 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:27.672 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:27.672 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:621 otherwise the patch would be "true" or "false"
07:25:27.672 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=621, Suspiciousness=0.7071067811865475]
07:25:27.673 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=623, Suspiciousness=0.7071067811865475]
07:25:27.673 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:27,673 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:27.674 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:27.681 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:27.713 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:27.713 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:27,735 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:27,736 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:27,811 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:27,811 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:27,811 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:27.812 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:27,812 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:27.823 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### two2kp3 = two2kp3.multiply(four) ##### Before:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:27.824 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### two2kp3 = two2kp3.multiply(four) ##### After:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        two2kp3 = two2kp3.multiply(four);
    
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:27.825 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:27.832 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:27.873 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:27.883 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:28.494 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:28.495 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (612 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:28.498 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:28.500 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:28.500 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:28.501 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:623
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:28.501 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:28.501 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:28.501 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:623 otherwise the patch would be "true" or "false"
07:25:28.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=623, Suspiciousness=0.7071067811865475]
07:25:28.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=625, Suspiciousness=0.7071067811865475]
07:25:28.501 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:28,501 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:28.503 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:28.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:28.541 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:28.541 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:625.
07:25:28.541 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=625, Suspiciousness=0.7071067811865475]
07:25:28.541 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=626, Suspiciousness=0.7071067811865475]
07:25:28.542 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:28,542 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:28.543 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:28.550 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:28.581 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:28.581 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:626.
07:25:28.581 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=626, Suspiciousness=0.7071067811865475]
07:25:28.581 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=627, Suspiciousness=0.7071067811865475]
07:25:28.581 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:28,581 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:28.583 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:28.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:28.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:28.620 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:28,642 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:28,642 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:28,717 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:28,717 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:28,717 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:28.718 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:28,718 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:28.730 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk)))) ##### Before:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p2",p2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:28.730 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk)))) ##### After:
{
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p2",p2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    
    if (yk.equals(ykM1)) {
        break;
    } 
}
07:25:28.731 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:28.738 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:28.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:28.788 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:29.358 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:29.358 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (570 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:29.361 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:29.362 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:29.362 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:29.363 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:627
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:29.363 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:29.363 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:29.363 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:627 otherwise the patch would be "true" or "false"
07:25:29.363 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=627, Suspiciousness=0.7071067811865475]
07:25:29.363 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=629, Suspiciousness=0.7071067811865475]
07:25:29.363 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:29,364 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:29.365 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:29.372 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:29.402 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:29.403 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:29,425 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:29,425 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:29,500 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 07:25:29,500 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:29,500 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:29.501 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:29,501 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:29.513 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (yk.equals(ykM1)) {
    break;
} 
07:25:29.514 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:29.521 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:29.560 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:29.567 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:30.122 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:30.122 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (555 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:30.125 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:30.128 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:30.128 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:30.128 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:629
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:30.129 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:30.129 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:30.129 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:629 otherwise the patch would be "true" or "false"
07:25:30.129 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=629, Suspiciousness=0.7071067811865475]
07:25:30.129 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=630, Suspiciousness=0.7071067811865475]
07:25:30.129 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:30,129 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:30.130 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:30.137 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:30.167 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:30.168 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:30,190 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:30,190 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:30,264 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-02-28 07:25:30,264 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:30,264 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:30.265 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:30,265 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:30.276 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p2",p2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    break;
}
07:25:30.277 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p2",p2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ykM1",ykM1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y2",y2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("oneMinusY4",oneMinusY4);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        break;
    
}
07:25:30.277 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:30.285 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:30.324 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:30.334 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:30.923 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:30.924 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (589 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:30.927 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:30.929 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:30.929 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:30.930 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:630
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:30.930 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:30.930 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:30.930 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:630 otherwise the patch would be "true" or "false"
07:25:30.930 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=630, Suspiciousness=0.7071067811865475]
07:25:30.930 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
07:25:30.930 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:30,930 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:30.932 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:30.939 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:30.969 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:30.969 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:30,991 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:30,991 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:31,064 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-02-28 07:25:31,064 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:31,065 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:31.066 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,066 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:31.076 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < 20 ; i++) {
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
} ##### Before:
{
    org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
    org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
    org.apache.commons.math.dfp.Dfp four = two.add(two);
    org.apache.commons.math.dfp.Dfp two2kp3 = two;
    org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < 20 ; i++) {
        final org.apache.commons.math.dfp.Dfp ykM1 = yk;
        final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
        final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
        final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
        yk = one.subtract(s).divide(one.add(s));
        two2kp3 = two2kp3.multiply(four);
        final org.apache.commons.math.dfp.Dfp p = one.add(yk);
        final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
        ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
        if (yk.equals(ykM1)) {
            break;
        } 
    }
    return one.divide(ak);
}
07:25:31.077 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < 20 ; i++) {
    final org.apache.commons.math.dfp.Dfp ykM1 = yk;
    final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
    final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
    final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
    yk = one.subtract(s).divide(one.add(s));
    two2kp3 = two2kp3.multiply(four);
    final org.apache.commons.math.dfp.Dfp p = one.add(yk);
    final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
    ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
    if (yk.equals(ykM1)) {
        break;
    } 
} ##### After:
{
    org.apache.commons.math.dfp.Dfp sqrt2 = two.sqrt();
    org.apache.commons.math.dfp.Dfp yk = sqrt2.subtract(one);
    org.apache.commons.math.dfp.Dfp four = two.add(two);
    org.apache.commons.math.dfp.Dfp two2kp3 = two;
    org.apache.commons.math.dfp.Dfp ak = two.multiply(three.subtract(two.multiply(sqrt2)));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sqrt2",sqrt2);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two2kp3",two2kp3);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ak",ak);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("three",three);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("four",four);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("yk",yk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < 20 ; i++) {
            final org.apache.commons.math.dfp.Dfp ykM1 = yk;
            final org.apache.commons.math.dfp.Dfp y2 = yk.multiply(yk);
            final org.apache.commons.math.dfp.Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
            final org.apache.commons.math.dfp.Dfp s = oneMinusY4.sqrt().sqrt();
            yk = one.subtract(s).divide(one.add(s));
            two2kp3 = two2kp3.multiply(four);
            final org.apache.commons.math.dfp.Dfp p = one.add(yk);
            final org.apache.commons.math.dfp.Dfp p2 = p.multiply(p);
            ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
            if (yk.equals(ykM1)) {
                break;
            } 
        }
    
    return one.divide(ak);
}
07:25:31.078 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.123 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.133 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:31.685 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:31.685 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (552 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:31.688 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:31.690 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:31.691 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:31.691 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:615
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:31.691 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:31.691 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:31.691 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:615 otherwise the patch would be "true" or "false"
07:25:31.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=615, Suspiciousness=0.7071067811865475]
07:25:31.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=634, Suspiciousness=0.7071067811865475]
07:25:31.692 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,692 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.693 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.700 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.730 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.730 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:634.
07:25:31.730 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=634, Suspiciousness=0.7071067811865475]
07:25:31.730 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=645, Suspiciousness=0.7071067811865475]
07:25:31.730 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,730 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.732 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.739 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.768 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:645.
07:25:31.768 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=645, Suspiciousness=0.7071067811865475]
07:25:31.768 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=646, Suspiciousness=0.7071067811865475]
07:25:31.768 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,768 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.770 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.776 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.806 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:646.
07:25:31.806 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=646, Suspiciousness=0.7071067811865475]
07:25:31.806 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=647, Suspiciousness=0.7071067811865475]
07:25:31.806 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,806 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.807 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.815 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.843 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.843 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:647.
07:25:31.843 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=647, Suspiciousness=0.7071067811865475]
07:25:31.843 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=648, Suspiciousness=0.7071067811865475]
07:25:31.844 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,844 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.845 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.852 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.880 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.880 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:648.
07:25:31.880 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=648, Suspiciousness=0.7071067811865475]
07:25:31.880 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=649, Suspiciousness=0.7071067811865475]
07:25:31.880 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,880 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.882 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.888 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.917 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.917 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:649.
07:25:31.917 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=649, Suspiciousness=0.7071067811865475]
07:25:31.917 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
07:25:31.917 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:31,917 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:31.919 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:31.926 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:31.954 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:31.954 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:31,976 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:31,977 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:32,050 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-02-28 07:25:32,050 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:32,050 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:32.051 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:32,051 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:32.061 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### Before:
{
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < 10000 ; i++) {
        x = x.multiply(a);
        y = y.add(x.divide(f));
        fi = fi.add(one);
        f = f.multiply(fi);
        if (y.equals(py)) {
            break;
        } 
        py = new org.apache.commons.math.dfp.Dfp(y);
    }
    return y;
}
07:25:32.061 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### After:
{
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < 10000 ; i++) {
            x = x.multiply(a);
            y = y.add(x.divide(f));
            fi = fi.add(one);
            f = f.multiply(fi);
            if (y.equals(py)) {
                break;
            } 
            py = new org.apache.commons.math.dfp.Dfp(y);
        }
    
    return y;
}
07:25:32.062 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:32.069 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:32.106 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:32.117 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:32.814 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:32.815 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (697 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:32.817 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:32.819 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:32.819 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:32.820 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:651
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:32.820 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:32.820 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:32.820 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:651 otherwise the patch would be "true" or "false"
07:25:32.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
07:25:32.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=652, Suspiciousness=0.7071067811865475]
07:25:32.820 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:32,820 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:32.822 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:32.828 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:32.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:32.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:32,880 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:32,881 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:32,953 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:32,953 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:32,953 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:32.954 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:32,954 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:32.964 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = x.multiply(a) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:32.964 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = x.multiply(a) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x = x.multiply(a);
    
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:32.965 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:32.972 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:33.008 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:33.019 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:33.701 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:33.701 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (682 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:33.703 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:33.705 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:33.705 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:33.706 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:652
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:33.706 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:33.706 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:33.706 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:652 otherwise the patch would be "true" or "false"
07:25:33.707 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=652, Suspiciousness=0.7071067811865475]
07:25:33.707 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=653, Suspiciousness=0.7071067811865475]
07:25:33.707 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:33,707 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:33.708 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:33.715 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:33.743 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:33.743 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:33,766 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:33,766 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:33,838 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:33,838 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:33,838 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:33.839 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:33,839 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:33.849 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.add(x.divide(f)) ##### Before:
{
    x = x.multiply(a);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:33.849 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.add(x.divide(f)) ##### After:
{
    x = x.multiply(a);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        y = y.add(x.divide(f));
    
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:33.850 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:33.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:33.893 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:33.903 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:34.537 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:34.537 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (634 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:34.540 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:34.543 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:34.543 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:34.544 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:653
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:34.544 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:34.544 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:34.544 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:653 otherwise the patch would be "true" or "false"
07:25:34.544 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=653, Suspiciousness=0.7071067811865475]
07:25:34.544 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=654, Suspiciousness=0.7071067811865475]
07:25:34.544 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:34,544 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:34.546 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:34.553 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:34.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:34.581 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:34,603 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:34,603 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:34,698 DEBUG spoon.support.StandardEnvironment - built in 95 ms
2015-02-28 07:25:34,698 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:34,698 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:34.700 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:34,701 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:34.715 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### fi = fi.add(one) ##### Before:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:34.715 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### fi = fi.add(one) ##### After:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        fi = fi.add(one);
    
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:34.716 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:34.723 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:34.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:34.769 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:37.632 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:37.632 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2863 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:407)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:230)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1511)
07:25:37.635 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:37.637 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:37.637 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:407)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:230)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1511)
07:25:37.638 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:654
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:37.638 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:25:37.638 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:25:37.638 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:654 otherwise the patch would be "true" or "false"
07:25:37.638 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=654, Suspiciousness=0.7071067811865475]
07:25:37.638 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=655, Suspiciousness=0.7071067811865475]
07:25:37.638 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:37,638 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:37.640 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:37.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:37.663 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:37.663 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:37,678 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:37,678 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:37,728 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-02-28 07:25:37,728 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:37,729 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:37.729 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:37,729 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:37.736 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### f = f.multiply(fi) ##### Before:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:37.736 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### f = f.multiply(fi) ##### After:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        f = f.multiply(fi);
    
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:37.737 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:37.742 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:37.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:37.773 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:38.354 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:38.354 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (581 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:38.356 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:38.358 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:38.358 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:38.358 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:655
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:38.358 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:38.358 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:38.358 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:655 otherwise the patch would be "true" or "false"
07:25:38.358 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=655, Suspiciousness=0.7071067811865475]
07:25:38.358 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=656, Suspiciousness=0.7071067811865475]
07:25:38.359 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:38,359 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:38.360 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:38.364 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:38.383 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:38.383 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:38,398 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:38,398 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:38,448 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-02-28 07:25:38,449 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:38,449 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:38.449 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:38,449 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:38.456 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (y.equals(py)) {
    break;
} 
07:25:38.457 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:38.461 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:38.486 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:38.496 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:43.481 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:43.482 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4986 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:43.485 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:43.487 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:43.487 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:43.487 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:656
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:43.487 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:43.487 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:43.487 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:656 otherwise the patch would be "true" or "false"
07:25:43.487 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=656, Suspiciousness=0.7071067811865475]
07:25:43.488 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=657, Suspiciousness=0.7071067811865475]
07:25:43.488 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:43,488 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:43.489 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:43.493 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:43.512 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:43.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:43,527 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:43,527 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:43,580 DEBUG spoon.support.StandardEnvironment - built in 53 ms
2015-02-28 07:25:43,580 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:43,580 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:43.581 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:43,581 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:43.588 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    break;
}
07:25:43.588 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        break;
    
}
07:25:43.588 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:43.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:43.618 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:43.628 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:44.203 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:44.203 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (575 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:44.206 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:44.208 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:44.209 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:44.209 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:657
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:44.209 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:44.209 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:44.209 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:657 otherwise the patch would be "true" or "false"
07:25:44.209 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=657, Suspiciousness=0.7071067811865475]
07:25:44.209 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=659, Suspiciousness=0.7071067811865475]
07:25:44.209 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:44,209 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:44.211 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:44.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:44.244 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:44.244 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:44,266 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:44,267 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:44,339 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-02-28 07:25:44,339 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:44,339 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:44.340 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:44,340 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:44.350 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### py = new org.apache.commons.math.dfp.Dfp(y) ##### Before:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:44.350 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### py = new org.apache.commons.math.dfp.Dfp(y) ##### After:
{
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        py = new org.apache.commons.math.dfp.Dfp(y);
    
}
07:25:44.351 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:44.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:44.405 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:44.416 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:49.477 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:49.477 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5061 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:49.479 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:49.481 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:49.481 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:49.481 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:659
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:49.481 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:49.481 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:49.481 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:659 otherwise the patch would be "true" or "false"
07:25:49.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=659, Suspiciousness=0.7071067811865475]
07:25:49.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
07:25:49.482 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:49,482 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:49.483 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:49.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:49.517 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:49.517 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:49,539 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:49,540 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:49,612 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:49,612 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:49,612 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:49.613 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:49,613 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:49.623 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### Before:
{
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < 10000 ; i++) {
        x = x.multiply(a);
        y = y.add(x.divide(f));
        fi = fi.add(one);
        f = f.multiply(fi);
        if (y.equals(py)) {
            break;
        } 
        py = new org.apache.commons.math.dfp.Dfp(y);
    }
    return y;
}
07:25:49.623 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    x = x.multiply(a);
    y = y.add(x.divide(f));
    fi = fi.add(one);
    f = f.multiply(fi);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### After:
{
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp f = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp fi = new org.apache.commons.math.dfp.Dfp(one);
    org.apache.commons.math.dfp.Dfp x = new org.apache.commons.math.dfp.Dfp(one);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("fi",fi);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < 10000 ; i++) {
            x = x.multiply(a);
            y = y.add(x.divide(f));
            fi = fi.add(one);
            f = f.multiply(fi);
            if (y.equals(py)) {
                break;
            } 
            py = new org.apache.commons.math.dfp.Dfp(y);
        }
    
    return y;
}
07:25:49.624 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:49.631 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:49.665 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:49.672 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:50.271 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:50.271 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (599 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:50.274 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:50.276 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:50.276 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:50.276 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:651
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:50.276 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:50.276 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:50.277 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:651 otherwise the patch would be "true" or "false"
07:25:50.277 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=651, Suspiciousness=0.7071067811865475]
07:25:50.277 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=662, Suspiciousness=0.7071067811865475]
07:25:50.277 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,277 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.278 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.285 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.312 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:662.
07:25:50.312 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=662, Suspiciousness=0.7071067811865475]
07:25:50.312 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=728, Suspiciousness=0.7071067811865475]
07:25:50.312 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,312 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.313 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.320 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.346 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.346 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:728.
07:25:50.346 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=728, Suspiciousness=0.7071067811865475]
07:25:50.346 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=729, Suspiciousness=0.7071067811865475]
07:25:50.346 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,346 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.348 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.354 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.380 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.380 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:729.
07:25:50.380 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=729, Suspiciousness=0.7071067811865475]
07:25:50.380 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=731, Suspiciousness=0.7071067811865475]
07:25:50.380 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,380 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.382 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.388 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.414 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.414 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:731.
07:25:50.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=731, Suspiciousness=0.7071067811865475]
07:25:50.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=732, Suspiciousness=0.7071067811865475]
07:25:50.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,414 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.416 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.422 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.448 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.448 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:732.
07:25:50.448 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=732, Suspiciousness=0.7071067811865475]
07:25:50.448 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=733, Suspiciousness=0.7071067811865475]
07:25:50.448 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,448 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.450 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.456 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.482 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.482 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:733.
07:25:50.482 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=733, Suspiciousness=0.7071067811865475]
07:25:50.482 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
07:25:50.482 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,482 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.484 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.516 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.516 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:50,538 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:50,538 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:50,610 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:50,610 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:50,610 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:50.611 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,611 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:50.621 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### Before:
{
    int den = 1;
    org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField() , -1)).divide(a.add(one));
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < 10000 ; i++) {
        num = num.multiply(x);
        num = num.multiply(x);
        den = den + 2;
        org.apache.commons.math.dfp.Dfp t = num.divide(den);
        y = y.add(t);
        if (y.equals(py)) {
            break;
        } 
        py = new org.apache.commons.math.dfp.Dfp(y);
    }
    return y.multiply(two);
}
07:25:50.622 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### After:
{
    int den = 1;
    org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField() , -1)).divide(a.add(one));
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < 10000 ; i++) {
            num = num.multiply(x);
            num = num.multiply(x);
            den = den + 2;
            org.apache.commons.math.dfp.Dfp t = num.divide(den);
            y = y.add(t);
            if (y.equals(py)) {
                break;
            } 
            py = new org.apache.commons.math.dfp.Dfp(y);
        }
    
    return y.multiply(two);
}
07:25:50.622 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.629 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:50.663 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:50.673 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:50.978 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:50.979 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (305 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:50.981 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:50.983 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:50.983 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:50.984 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:734
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:50.984 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:50.984 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:50.984 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:734 otherwise the patch would be "true" or "false"
07:25:50.984 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
07:25:50.984 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=735, Suspiciousness=0.7071067811865475]
07:25:50.984 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:50,984 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:50.986 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:50.992 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:51.018 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:51.018 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:51,040 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:51,041 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:51,112 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:51,112 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:51,113 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:51.113 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:51,113 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:51.124 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### num = num.multiply(x) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:51.124 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### num = num.multiply(x) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        num = num.multiply(x);
    
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:51.125 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:51.131 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:51.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:51.175 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:51.915 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:51.915 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (740 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:51.917 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:51.919 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:51.919 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:51.919 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:735
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:51.919 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:51.919 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:51.919 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:735 otherwise the patch would be "true" or "false"
07:25:51.919 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=735, Suspiciousness=0.7071067811865475]
07:25:51.919 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=736, Suspiciousness=0.7071067811865475]
07:25:51.920 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:51,920 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:51.921 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:51.928 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:51.953 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:51.954 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:51,976 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:51,976 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:52,048 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:52,048 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:52,048 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:52.049 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:52,049 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:52.059 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### num = num.multiply(x) ##### Before:
{
    num = num.multiply(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:52.059 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### num = num.multiply(x) ##### After:
{
    num = num.multiply(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        num = num.multiply(x);
    
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:52.060 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:52.067 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:52.100 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:52.108 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:53.012 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:53.013 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (904 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:53.015 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:53.016 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:53.016 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:53.016 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:736
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:53.017 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:53.017 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:53.017 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:736 otherwise the patch would be "true" or "false"
07:25:53.017 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=736, Suspiciousness=0.7071067811865475]
07:25:53.017 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=737, Suspiciousness=0.7071067811865475]
07:25:53.017 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:53,017 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:53.019 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:53.358 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:53.383 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:53.383 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:53,405 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:53,406 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:53,478 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:53,478 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:53,478 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:53.479 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:53,479 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:53.489 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### den = den + 2 ##### Before:
{
    num = num.multiply(x);
    num = num.multiply(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:53.489 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### den = den + 2 ##### After:
{
    num = num.multiply(x);
    num = num.multiply(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        den = den + 2;
    
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:53.490 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:53.497 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:53.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:53.542 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:54.373 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:54.373 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (831 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:54.375 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:54.377 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:54.377 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:54.377 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:737
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:54.377 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:54.377 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:54.378 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:737 otherwise the patch would be "true" or "false"
07:25:54.378 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=737, Suspiciousness=0.7071067811865475]
07:25:54.378 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=738, Suspiciousness=0.7071067811865475]
07:25:54.378 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:54,378 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:54.379 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:54.386 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:54.412 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:54.412 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:738.
07:25:54.412 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=738, Suspiciousness=0.7071067811865475]
07:25:54.412 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=739, Suspiciousness=0.7071067811865475]
07:25:54.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:54,412 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:54.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:54.420 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:54.445 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:54.446 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:54,468 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:54,468 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:54,541 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-02-28 07:25:54,541 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:54,541 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:54.542 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:54,542 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:54.552 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.add(t) ##### Before:
{
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:54.552 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.add(t) ##### After:
{
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        y = y.add(t);
    
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:54.553 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:54.560 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:54.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:54.601 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:55.011 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:55.011 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (410 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:55.014 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:55.016 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:55.016 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:55.016 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:739
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:55.016 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:55.016 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:55.016 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:739 otherwise the patch would be "true" or "false"
07:25:55.016 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=739, Suspiciousness=0.7071067811865475]
07:25:55.016 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=740, Suspiciousness=0.7071067811865475]
07:25:55.017 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:55,017 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:55.018 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:55.025 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:55.050 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:55.050 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,073 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,073 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,145 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:55,145 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:55,145 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:55.146 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:55,146 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:55.156 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (y.equals(py)) {
    break;
} 
07:25:55.157 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:55.163 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:55.197 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:55.207 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:55.519 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:55.519 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (312 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:55.522 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:55.524 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:55.524 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:55.525 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:740
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:55.525 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:55.525 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:55.525 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:740 otherwise the patch would be "true" or "false"
07:25:55.525 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=740, Suspiciousness=0.7071067811865475]
07:25:55.525 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=741, Suspiciousness=0.7071067811865475]
07:25:55.525 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:55,525 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:55.527 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:55.533 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:55.558 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:55.559 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,581 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,581 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:55,653 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:55,653 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:55,653 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:55.654 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:55,654 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:55.664 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    break;
}
07:25:55.664 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        break;
    
}
07:25:55.665 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:55.672 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:55.705 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:55.715 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:56.991 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:56.992 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1277 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:407)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:232)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:25:56.994 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:56.994 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:56.994 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:407)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:232)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:25:56.995 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:741
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:56.995 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:25:56.995 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:25:56.995 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:741 otherwise the patch would be "true" or "false"
07:25:56.995 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=741, Suspiciousness=0.7071067811865475]
07:25:56.995 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=743, Suspiciousness=0.7071067811865475]
07:25:56.995 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:56,995 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:56.997 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:57.003 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:57.028 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:57.029 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:57,051 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:57,051 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:57,123 DEBUG spoon.support.StandardEnvironment - built in 72 ms
2015-02-28 07:25:57,123 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:57,123 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:57.124 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:57,124 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:57.134 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### py = new org.apache.commons.math.dfp.Dfp(y) ##### Before:
{
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
}
07:25:57.134 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### py = new org.apache.commons.math.dfp.Dfp(y) ##### After:
{
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("t",t);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        py = new org.apache.commons.math.dfp.Dfp(y);
    
}
07:25:57.135 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:57.142 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:57.174 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:57.182 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:57.919 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:57.919 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (738 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:57.922 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:57.924 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:57.924 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:57.924 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:743
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:57.925 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:57.925 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:57.925 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:743 otherwise the patch would be "true" or "false"
07:25:57.925 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=743, Suspiciousness=0.7071067811865475]
07:25:57.925 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
07:25:57.925 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:57,925 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:57.927 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:57.933 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:57.958 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:57.958 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:57,980 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:57,981 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpField.java]
2015-02-28 07:25:58,052 DEBUG spoon.support.StandardEnvironment - built in 71 ms
2015-02-28 07:25:58,052 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:58,052 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:58.053 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:58,053 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:58.063 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### Before:
{
    int den = 1;
    org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField() , -1)).divide(a.add(one));
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < 10000 ; i++) {
        num = num.multiply(x);
        num = num.multiply(x);
        den = den + 2;
        org.apache.commons.math.dfp.Dfp t = num.divide(den);
        y = y.add(t);
        if (y.equals(py)) {
            break;
        } 
        py = new org.apache.commons.math.dfp.Dfp(y);
    }
    return y.multiply(two);
}
07:25:58.064 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < 10000 ; i++) {
    num = num.multiply(x);
    num = num.multiply(x);
    den = den + 2;
    org.apache.commons.math.dfp.Dfp t = num.divide(den);
    y = y.add(t);
    if (y.equals(py)) {
        break;
    } 
    py = new org.apache.commons.math.dfp.Dfp(y);
} ##### After:
{
    int den = 1;
    org.apache.commons.math.dfp.Dfp x = a.add(new org.apache.commons.math.dfp.Dfp(a.getField() , -1)).divide(a.add(one));
    org.apache.commons.math.dfp.Dfp y = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp num = new org.apache.commons.math.dfp.Dfp(x);
    org.apache.commons.math.dfp.Dfp py = new org.apache.commons.math.dfp.Dfp(y);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.piString",org.apache.commons.math.dfp.DfpField.piString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("one",one);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln2String",org.apache.commons.math.dfp.DfpField.ln2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2String",org.apache.commons.math.dfp.DfpField.sqr2String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_OVERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln5String",org.apache.commons.math.dfp.DfpField.ln5String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("two",two);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INVALID",org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr3ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("num",num);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW",org.apache.commons.math.dfp.DfpField.FLAG_UNDERFLOW);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr3String",org.apache.commons.math.dfp.DfpField.sqr3String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_INEXACT",org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("py",py);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO",org.apache.commons.math.dfp.DfpField.FLAG_DIV_ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString",org.apache.commons.math.dfp.DfpField.sqr2ReciprocalString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("den",den);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.eString",org.apache.commons.math.dfp.DfpField.eString);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpField.ln10String",org.apache.commons.math.dfp.DfpField.ln10String);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < 10000 ; i++) {
            num = num.multiply(x);
            num = num.multiply(x);
            den = den + 2;
            org.apache.commons.math.dfp.Dfp t = num.divide(den);
            y = y.add(t);
            if (y.equals(py)) {
                break;
            } 
            py = new org.apache.commons.math.dfp.Dfp(y);
        }
    
    return y.multiply(two);
}
07:25:58.064 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:58.071 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:58.104 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:58.112 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:58.400 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:58.400 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (288 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:58.402 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:58.404 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:58.405 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:58.405 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpField:734
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:58.405 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:58.405 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:58.405 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpField:734 otherwise the patch would be "true" or "false"
07:25:58.405 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=734, Suspiciousness=0.7071067811865475]
07:25:58.405 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=746, Suspiciousness=0.7071067811865475]
07:25:58.405 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 07:25:58,405 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:58.407 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
07:25:58.414 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:58.439 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:58.439 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:746.
07:25:58.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=746, Suspiciousness=0.7071067811865475]
07:25:58.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1914, Suspiciousness=0.5]
07:25:58.439 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:25:58,439 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:58.445 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:25:58.468 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:58.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:58.600 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:25:58,623 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:25:58,623 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:25:58,840 DEBUG spoon.support.StandardEnvironment - built in 217 ms
2015-02-28 07:25:58,840 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:25:58,840 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:25:58.841 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:25:58,841 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:25:58.847 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x.mant[((mant.length) - 1)] = 3000 ##### Before:
default :
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x.mant[((mant.length) - 1)] = 3000;
07:25:58.848 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x.mant[((mant.length) - 1)] = 3000 ##### After:
default :
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x.mant[((mant.length) - 1)] = 3000;
    
07:25:58.848 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:25:58.872 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:59.010 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:59.020 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:59.739 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:25:59.739 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (719 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:59.742 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:25:59.744 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:25:59.744 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:25:59.744 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1914
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:25:59.745 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:59.745 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:25:59.745 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1914 otherwise the patch would be "true" or "false"
07:25:59.745 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1914, Suspiciousness=0.5]
07:25:59.745 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=710, Suspiciousness=0.4472135954999579]
07:25:59.745 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:25:59,745 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:25:59.751 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:25:59.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:25:59.893 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:25:59.893 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:25:59,915 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:25:59,915 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:00,124 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2015-02-28 07:26:00,124 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:00,124 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:00.125 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:00,125 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:00.129 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.util.Arrays.fill(mant, 0) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    java.util.Arrays.fill(mant, 0);
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:00.130 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.util.Arrays.fill(mant, 0) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        java.util.Arrays.fill(mant, 0);
    
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:00.133 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:00.152 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:00.261 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:00.271 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:00.974 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:00.974 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (703 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:00.977 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:00.979 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:00.979 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:00.979 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:710
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:00.979 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:00.979 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:00.979 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:710 otherwise the patch would be "true" or "false"
07:26:00.980 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=710, Suspiciousness=0.4472135954999579]
07:26:00.980 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=711, Suspiciousness=0.4472135954999579]
07:26:00.980 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:00,980 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:00.984 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:00.996 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:01.060 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:01.060 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:01,075 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:01,076 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:01,208 DEBUG spoon.support.StandardEnvironment - built in 132 ms
2015-02-28 07:26:01,208 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:01,208 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:01.209 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:01,209 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:01.212 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exp = e ##### Before:
{
    java.util.Arrays.fill(mant, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:01.212 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exp = e ##### After:
{
    java.util.Arrays.fill(mant, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        exp = e;
    
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:01.215 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:01.227 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:01.294 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:01.306 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:01.889 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:01.890 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (583 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:01.892 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:01.893 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:01.893 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:01.894 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:711
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:01.894 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:01.894 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:01.894 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:711 otherwise the patch would be "true" or "false"
07:26:01.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=711, Suspiciousness=0.4472135954999579]
07:26:01.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=713, Suspiciousness=0.4472135954999579]
07:26:01.894 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:01,894 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:01.900 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:01.917 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:02.000 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:02.000 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:02,022 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:02,022 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:02,211 DEBUG spoon.support.StandardEnvironment - built in 189 ms
2015-02-28 07:26:02,211 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:02,211 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:02.212 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:02,212 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:02.216 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT) ##### Before:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:02.216 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT) ##### After:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:02.219 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:02.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:02.329 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:02.339 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:03.018 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:03.018 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (679 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:03.020 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:03.022 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:03.022 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:03.022 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:713
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:03.022 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:03.022 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:03.022 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:713 otherwise the patch would be "true" or "false"
07:26:03.022 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=713, Suspiciousness=0.4472135954999579]
07:26:03.022 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=714, Suspiciousness=0.4472135954999579]
07:26:03.022 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:03,023 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:03.028 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:03.044 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:03.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:03.114 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:03,134 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:03,135 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:03,309 DEBUG spoon.support.StandardEnvironment - built in 174 ms
2015-02-28 07:26:03,309 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:03,310 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:03.310 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:03,310 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:03.314 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this) ##### Before:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    return 0;
}
07:26:03.315 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this) ##### After:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    
    return 0;
}
07:26:03.318 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:03.338 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:03.415 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:03.425 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:04.022 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:04.023 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (598 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:04.025 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:04.028 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:04.028 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:04.028 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:714
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:04.028 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:04.028 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:04.028 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:714 otherwise the patch would be "true" or "false"
07:26:04.028 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=714, Suspiciousness=0.4472135954999579]
07:26:04.028 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=716, Suspiciousness=0.4472135954999579]
07:26:04.028 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:04,028 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:04.034 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:04.050 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:04.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:04.115 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:04,137 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:04,137 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:04,323 DEBUG spoon.support.StandardEnvironment - built in 186 ms
2015-02-28 07:26:04,323 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:04,324 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:04.324 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:04,324 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:04.328 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return 0 ##### Before:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return 0;
}
07:26:04.329 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return 0 ##### After:
{
    java.util.Arrays.fill(mant, 0);
    exp = e;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return 0;
    
}
07:26:04.332 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:04.348 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:04.419 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:04.428 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:05.034 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:05.034 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (606 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:05.037 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:05.039 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:05.039 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:05.040 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:716
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:05.040 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:05.040 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:05.040 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:716 otherwise the patch would be "true" or "false"
07:26:05.040 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=716, Suspiciousness=0.4472135954999579]
07:26:05.040 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1905, Suspiciousness=0.4472135954999579]
07:26:05.040 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:05,040 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:05.046 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:05.061 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:05.123 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:05.123 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:05,145 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:05,146 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:05,348 DEBUG spoon.support.StandardEnvironment - built in 203 ms
2015-02-28 07:26:05,348 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:05,348 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:05.349 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:05,349 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:05.355 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1 ##### Before:
case 0 :
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
    break;
07:26:05.355 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1 ##### After:
case 0 :
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
    
    break;
07:26:05.356 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:05.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:05.439 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:05.449 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:06.061 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:06.061 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (612 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:06.063 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:06.066 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:06.066 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:06.066 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1905
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:06.066 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:06.066 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:06.066 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1905 otherwise the patch would be "true" or "false"
07:26:06.066 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1905, Suspiciousness=0.4472135954999579]
07:26:06.066 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1906, Suspiciousness=0.4472135954999579]
07:26:06.067 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:06,067 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:06.072 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:06.086 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:06.146 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:06.146 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:06,168 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:06,168 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:06,352 DEBUG spoon.support.StandardEnvironment - built in 184 ms
2015-02-28 07:26:06,352 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:06,353 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:06.353 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:06,353 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:06.360 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### Before:
case 0 :
    x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    break;
07:26:06.360 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### After:
case 0 :
    x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        break;
    
07:26:06.361 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:06.376 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:06.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:06.452 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:07.082 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:07.082 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (630 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:07.085 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:07.087 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:07.087 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:07.087 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1906
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:07.087 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:07.088 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:07.088 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1906 otherwise the patch would be "true" or "false"
07:26:07.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1906, Suspiciousness=0.4472135954999579]
07:26:07.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1859, Suspiciousness=0.4082482904638631]
07:26:07.088 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:07,088 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:07.094 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:07.108 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:07.166 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:07.166 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:07,188 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:07,188 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:07,372 DEBUG spoon.support.StandardEnvironment - built in 184 ms
2015-02-28 07:26:07,372 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:07,372 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:07.373 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:07,373 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:07.380 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((nans) == (org.apache.commons.math.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
    return newInstance(this);
} 
07:26:07.380 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:07.395 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:07.461 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:07.471 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:07.681 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:07.682 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (211 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:26:07.685 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:08.133 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:08.133 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (448 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:08.134 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1859
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:08.134 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:26:08.134 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:08.134 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1859 otherwise the patch would be "true" or "false"
07:26:08.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1859, Suspiciousness=0.4082482904638631]
07:26:08.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1864, Suspiciousness=0.4082482904638631]
07:26:08.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:08,134 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:08.140 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:08.154 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:08.212 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:08.212 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:08,235 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:08,235 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:08,418 DEBUG spoon.support.StandardEnvironment - built in 183 ms
2015-02-28 07:26:08,418 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:08,418 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:08.419 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:08,419 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:08.426 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((nans) != (org.apache.commons.math.dfp.Dfp.FINITE)) {
    if (((nans) == (org.apache.commons.math.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
        return newInstance(this);
    } 
    if ((nans) == (org.apache.commons.math.dfp.Dfp.QNAN)) {
        return newInstance(this);
    } 
    if ((nans) == (org.apache.commons.math.dfp.Dfp.SNAN)) {
        org.apache.commons.math.dfp.Dfp result;
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        result = newInstance(this);
        result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
        return result;
    } 
} 
07:26:08.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:08.441 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:08.504 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:08.514 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:09.127 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:09.128 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (613 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:09.130 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:09.133 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:09.133 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:09.133 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1864
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:09.133 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:09.133 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:09.133 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1864 otherwise the patch would be "true" or "false"
07:26:09.133 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1864, Suspiciousness=0.4082482904638631]
07:26:09.133 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1884, Suspiciousness=0.4082482904638631]
07:26:09.133 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:09,134 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:09.139 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:09.153 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:09.209 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:09.209 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:09,231 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:09,232 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:09,412 DEBUG spoon.support.StandardEnvironment - built in 181 ms
2015-02-28 07:26:09,413 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:09,413 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:09.414 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:09,414 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:09.420 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((sign) == (-1)) {
    org.apache.commons.math.dfp.Dfp result;
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
    result = newInstance(this);
    result.nans = org.apache.commons.math.dfp.Dfp.QNAN;
    result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
    return result;
} 
07:26:09.421 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:09.436 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:09.500 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:09.510 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:09.728 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:09.728 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (218 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:26:09.731 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:10.189 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:10.190 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (459 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:10.190 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1884
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:10.190 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:26:10.190 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:10.190 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1884 otherwise the patch would be "true" or "false"
07:26:10.190 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1884, Suspiciousness=0.4082482904638631]
07:26:10.190 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1895, Suspiciousness=0.4082482904638631]
07:26:10.190 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:10,191 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:10.196 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:10.210 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:10.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:10.266 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1895.
07:26:10.266 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1895, Suspiciousness=0.4082482904638631]
07:26:10.266 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1898, Suspiciousness=0.4082482904638631]
07:26:10.266 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:10,266 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:10.272 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:10.285 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:10.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:10.340 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:10,363 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:10,363 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:10,539 DEBUG spoon.support.StandardEnvironment - built in 176 ms
2015-02-28 07:26:10,539 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:10,539 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:10.540 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:10,540 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:10.547 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((x.exp) < (-1)) || ((x.exp) > 1)) {
    x.exp = (this.exp) / 2;
} 
07:26:10.547 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:10.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:10.624 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:10.634 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:11.228 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:11.228 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (594 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:11.231 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:11.233 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:11.233 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:11.233 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1898
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:11.233 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:11.233 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:11.233 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1898 otherwise the patch would be "true" or "false"
07:26:11.233 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1898, Suspiciousness=0.4082482904638631]
07:26:11.233 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1903, Suspiciousness=0.4082482904638631]
07:26:11.234 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:11,234 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:11.240 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:11.253 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:11.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:11.321 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:11,343 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:11,344 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:11,518 DEBUG spoon.support.StandardEnvironment - built in 175 ms
2015-02-28 07:26:11,518 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:11,518 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:11.519 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:11,519 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:11.526 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### switch ((x.mant[((mant.length) - 1)]) / 2000) {
    case 0 :
        x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
        break;
    case 2 :
        x.mant[((mant.length) - 1)] = 1500;
        break;
    case 3 :
        x.mant[((mant.length) - 1)] = 2200;
        break;
    default :
        x.mant[((mant.length) - 1)] = 3000;
} ##### Before:
{
    if (((nans) == (org.apache.commons.math.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
        return newInstance(this);
    } 
    if ((nans) != (org.apache.commons.math.dfp.Dfp.FINITE)) {
        if (((nans) == (org.apache.commons.math.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.QNAN)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.SNAN)) {
            org.apache.commons.math.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        } 
    } 
    if ((sign) == (-1)) {
        org.apache.commons.math.dfp.Dfp result;
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        result = newInstance(this);
        result.nans = org.apache.commons.math.dfp.Dfp.QNAN;
        result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
        return result;
    } 
    org.apache.commons.math.dfp.Dfp x = newInstance(this);
    if (((x.exp) < (-1)) || ((x.exp) > 1)) {
        x.exp = (this.exp) / 2;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    switch ((x.mant[((mant.length) - 1)]) / 2000) {
        case 0 :
            x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
            break;
        case 2 :
            x.mant[((mant.length) - 1)] = 1500;
            break;
        case 3 :
            x.mant[((mant.length) - 1)] = 2200;
            break;
        default :
            x.mant[((mant.length) - 1)] = 3000;
    }
    org.apache.commons.math.dfp.Dfp dx = newInstance(x);
    org.apache.commons.math.dfp.Dfp px = getZero();
    org.apache.commons.math.dfp.Dfp ppx = getZero();
    while (x.unequal(px)) {
        dx = newInstance(x);
        dx.sign = -1;
        dx = dx.add(divide(x));
        dx = dx.divide(2);
        ppx = px;
        px = x;
        x = x.add(dx);
        if (x.equals(ppx)) {
            break;
        } 
        if ((dx.mant[((mant.length) - 1)]) == 0) {
            break;
        } 
    }
    return x;
}
07:26:11.526 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### switch ((x.mant[((mant.length) - 1)]) / 2000) {
    case 0 :
        x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
        break;
    case 2 :
        x.mant[((mant.length) - 1)] = 1500;
        break;
    case 3 :
        x.mant[((mant.length) - 1)] = 2200;
        break;
    default :
        x.mant[((mant.length) - 1)] = 3000;
} ##### After:
{
    if (((nans) == (org.apache.commons.math.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
        return newInstance(this);
    } 
    if ((nans) != (org.apache.commons.math.dfp.Dfp.FINITE)) {
        if (((nans) == (org.apache.commons.math.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.QNAN)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.SNAN)) {
            org.apache.commons.math.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        } 
    } 
    if ((sign) == (-1)) {
        org.apache.commons.math.dfp.Dfp result;
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        result = newInstance(this);
        result.nans = org.apache.commons.math.dfp.Dfp.QNAN;
        result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
        return result;
    } 
    org.apache.commons.math.dfp.Dfp x = newInstance(this);
    if (((x.exp) < (-1)) || ((x.exp) > 1)) {
        x.exp = (this.exp) / 2;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        switch ((x.mant[((mant.length) - 1)]) / 2000) {
            case 0 :
                x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
                break;
            case 2 :
                x.mant[((mant.length) - 1)] = 1500;
                break;
            case 3 :
                x.mant[((mant.length) - 1)] = 2200;
                break;
            default :
                x.mant[((mant.length) - 1)] = 3000;
        }
    
    org.apache.commons.math.dfp.Dfp dx = newInstance(x);
    org.apache.commons.math.dfp.Dfp px = getZero();
    org.apache.commons.math.dfp.Dfp ppx = getZero();
    while (x.unequal(px)) {
        dx = newInstance(x);
        dx.sign = -1;
        dx = dx.add(divide(x));
        dx = dx.divide(2);
        ppx = px;
        px = x;
        x = x.add(dx);
        if (x.equals(ppx)) {
            break;
        } 
        if ((dx.mant[((mant.length) - 1)]) == 0) {
            break;
        } 
    }
    return x;
}
07:26:11.527 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:11.541 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:11.604 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:11.614 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:12.245 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:12.246 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (631 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:12.248 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:12.251 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:12.251 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:12.251 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1903
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:12.251 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:12.251 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:12.251 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1903 otherwise the patch would be "true" or "false"
07:26:12.251 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1903, Suspiciousness=0.4082482904638631]
07:26:12.251 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1917, Suspiciousness=0.4082482904638631]
07:26:12.251 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:12,252 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:12.257 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:12.271 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:12.325 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:12.325 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1917.
07:26:12.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1917, Suspiciousness=0.4082482904638631]
07:26:12.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1922, Suspiciousness=0.4082482904638631]
07:26:12.325 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:12,325 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:12.331 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:12.344 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:12.397 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:12.397 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1922.
07:26:12.397 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1922, Suspiciousness=0.4082482904638631]
07:26:12.397 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1923, Suspiciousness=0.4082482904638631]
07:26:12.397 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:12,397 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:12.403 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:12.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:12.470 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:12.470 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1923.
07:26:12.470 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1923, Suspiciousness=0.4082482904638631]
07:26:12.470 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1924, Suspiciousness=0.4082482904638631]
07:26:12.470 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:12,470 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:12.476 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:12.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:12.542 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:12.542 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:12,564 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:12,564 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:12,740 DEBUG spoon.support.StandardEnvironment - built in 176 ms
2015-02-28 07:26:12,740 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:12,740 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:12.741 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:12,741 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:12.748 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while (x.unequal(px)) {
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
} ##### Before:
{
    if (((nans) == (org.apache.commons.math.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
        return newInstance(this);
    } 
    if ((nans) != (org.apache.commons.math.dfp.Dfp.FINITE)) {
        if (((nans) == (org.apache.commons.math.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.QNAN)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.SNAN)) {
            org.apache.commons.math.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        } 
    } 
    if ((sign) == (-1)) {
        org.apache.commons.math.dfp.Dfp result;
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        result = newInstance(this);
        result.nans = org.apache.commons.math.dfp.Dfp.QNAN;
        result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
        return result;
    } 
    org.apache.commons.math.dfp.Dfp x = newInstance(this);
    if (((x.exp) < (-1)) || ((x.exp) > 1)) {
        x.exp = (this.exp) / 2;
    } 
    switch ((x.mant[((mant.length) - 1)]) / 2000) {
        case 0 :
            x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
            break;
        case 2 :
            x.mant[((mant.length) - 1)] = 1500;
            break;
        case 3 :
            x.mant[((mant.length) - 1)] = 2200;
            break;
        default :
            x.mant[((mant.length) - 1)] = 3000;
    }
    org.apache.commons.math.dfp.Dfp dx = newInstance(x);
    org.apache.commons.math.dfp.Dfp px = getZero();
    org.apache.commons.math.dfp.Dfp ppx = getZero();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    while (x.unequal(px)) {
        dx = newInstance(x);
        dx.sign = -1;
        dx = dx.add(divide(x));
        dx = dx.divide(2);
        ppx = px;
        px = x;
        x = x.add(dx);
        if (x.equals(ppx)) {
            break;
        } 
        if ((dx.mant[((mant.length) - 1)]) == 0) {
            break;
        } 
    }
    return x;
}
07:26:12.749 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while (x.unequal(px)) {
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
} ##### After:
{
    if (((nans) == (org.apache.commons.math.dfp.Dfp.FINITE)) && ((mant[((mant.length) - 1)]) == 0)) {
        return newInstance(this);
    } 
    if ((nans) != (org.apache.commons.math.dfp.Dfp.FINITE)) {
        if (((nans) == (org.apache.commons.math.dfp.Dfp.INFINITE)) && ((sign) == 1)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.QNAN)) {
            return newInstance(this);
        } 
        if ((nans) == (org.apache.commons.math.dfp.Dfp.SNAN)) {
            org.apache.commons.math.dfp.Dfp result;
            field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
            result = newInstance(this);
            result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
            return result;
        } 
    } 
    if ((sign) == (-1)) {
        org.apache.commons.math.dfp.Dfp result;
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INVALID);
        result = newInstance(this);
        result.nans = org.apache.commons.math.dfp.Dfp.QNAN;
        result = dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INVALID, org.apache.commons.math.dfp.Dfp.SQRT_TRAP, null, result);
        return result;
    } 
    org.apache.commons.math.dfp.Dfp x = newInstance(this);
    if (((x.exp) < (-1)) || ((x.exp) > 1)) {
        x.exp = (this.exp) / 2;
    } 
    switch ((x.mant[((mant.length) - 1)]) / 2000) {
        case 0 :
            x.mant[((mant.length) - 1)] = ((x.mant[((mant.length) - 1)]) / 2) + 1;
            break;
        case 2 :
            x.mant[((mant.length) - 1)] = 1500;
            break;
        case 3 :
            x.mant[((mant.length) - 1)] = 2200;
            break;
        default :
            x.mant[((mant.length) - 1)] = 3000;
    }
    org.apache.commons.math.dfp.Dfp dx = newInstance(x);
    org.apache.commons.math.dfp.Dfp px = getZero();
    org.apache.commons.math.dfp.Dfp ppx = getZero();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        while (x.unequal(px)) {
            dx = newInstance(x);
            dx.sign = -1;
            dx = dx.add(divide(x));
            dx = dx.divide(2);
            ppx = px;
            px = x;
            x = x.add(dx);
            if (x.equals(ppx)) {
                break;
            } 
            if ((dx.mant[((mant.length) - 1)]) == 0) {
                break;
            } 
        }
    
    return x;
}
07:26:12.749 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:12.763 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:12.816 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:12.826 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:13.008 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:13.008 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (182 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:26:13.010 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:13.458 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:13.459 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (448 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:13.459 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1924
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:13.459 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:26:13.459 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:13.459 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1924 otherwise the patch would be "true" or "false"
07:26:13.459 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1924, Suspiciousness=0.4082482904638631]
07:26:13.459 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1925, Suspiciousness=0.4082482904638631]
07:26:13.459 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:13,459 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:13.465 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:13.478 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:13.530 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:13.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:13,552 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:13,552 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:13,725 DEBUG spoon.support.StandardEnvironment - built in 173 ms
2015-02-28 07:26:13,801 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:13,801 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:13.802 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:13,802 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:13.809 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = newInstance(x) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:26:13.809 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = newInstance(x) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dx = newInstance(x);
    
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:26:13.809 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:13.824 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:13.884 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:13.894 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:14.544 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:26:14.545 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (652 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:14.547 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:26:14.549 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:26:14.550 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:26:14.550 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1925
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:26:14.550 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:14.550 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:26:14.550 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1925 otherwise the patch would be "true" or "false"
07:26:14.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1925, Suspiciousness=0.4082482904638631]
07:26:14.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1926, Suspiciousness=0.4082482904638631]
07:26:14.550 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:14,550 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:26:14.556 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:14.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:14.622 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:14.622 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:14,644 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:14,645 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:26:14,815 DEBUG spoon.support.StandardEnvironment - built in 170 ms
2015-02-28 07:26:14,815 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:26:14,815 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:26:14.816 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:26:14,816 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:26:14.823 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx.sign = -1 ##### Before:
{
    dx = newInstance(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:26:14.823 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx.sign = -1 ##### After:
{
    dx = newInstance(x);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dx.sign = -1;
    
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:26:14.824 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:26:14.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:26:14.896 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:26:14.906 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:55.406 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:31:55.407 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (340502 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:31:55.410 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:55.884 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:31:55.885 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (474 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:55.885 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1926
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:31:55.885 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:31:55.885 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:55.885 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1926 otherwise the patch would be "true" or "false"
07:31:55.885 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1926, Suspiciousness=0.4082482904638631]
07:31:55.885 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1927, Suspiciousness=0.4082482904638631]
07:31:55.885 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:55,885 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:31:55.891 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:55.904 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:55.961 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:55.961 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:55,983 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:55,983 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:56,164 DEBUG spoon.support.StandardEnvironment - built in 181 ms
2015-02-28 07:31:56,165 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:31:56,165 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:31:56.165 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:56,165 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:31:56.172 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = dx.add(divide(x)) ##### Before:
{
    dx = newInstance(x);
    dx.sign = -1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:56.172 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = dx.add(divide(x)) ##### After:
{
    dx = newInstance(x);
    dx.sign = -1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dx = dx.add(divide(x));
    
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:56.172 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:56.186 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:56.244 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:56.254 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:56.841 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:31:56.841 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (587 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:56.843 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:56.845 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:31:56.845 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:56.845 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1927
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:31:56.845 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:56.845 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:56.845 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1927 otherwise the patch would be "true" or "false"
07:31:56.845 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1927, Suspiciousness=0.4082482904638631]
07:31:56.846 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1928, Suspiciousness=0.4082482904638631]
07:31:56.846 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:56,846 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:31:56.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:56.865 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:56.921 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:56.922 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:56,944 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:56,944 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:57,123 DEBUG spoon.support.StandardEnvironment - built in 179 ms
2015-02-28 07:31:57,123 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:31:57,124 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:31:57.124 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:57,124 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:31:57.131 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = dx.divide(2) ##### Before:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dx = dx.divide(2);
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:57.131 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dx = dx.divide(2) ##### After:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dx = dx.divide(2);
    
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:57.132 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:57.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:57.203 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:57.210 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:57.409 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:31:57.410 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (199 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
07:31:57.412 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:57.878 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:31:57.879 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (467 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:57.879 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1928
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:31:57.879 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
07:31:57.879 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:57.879 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1928 otherwise the patch would be "true" or "false"
07:31:57.879 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1928, Suspiciousness=0.4082482904638631]
07:31:57.879 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1929, Suspiciousness=0.4082482904638631]
07:31:57.880 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:57,880 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:31:57.885 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:57.906 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:57.957 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:57.957 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:57,979 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:57,980 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:58,149 DEBUG spoon.support.StandardEnvironment - built in 170 ms
2015-02-28 07:31:58,149 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:31:58,149 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:31:58.150 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:58,150 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:31:58.157 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ppx = px ##### Before:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ppx = px;
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:58.163 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ppx = px ##### After:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ppx = px;
    
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:58.163 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:58.177 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:58.235 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:58.245 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:58.833 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:31:58.833 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (588 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:58.835 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:31:58.837 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:31:58.837 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:31:58.837 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1929
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
07:31:58.837 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:58.837 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
07:31:58.837 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1929 otherwise the patch would be "true" or "false"
07:31:58.837 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1929, Suspiciousness=0.4082482904638631]
07:31:58.837 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1930, Suspiciousness=0.4082482904638631]
07:31:58.838 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:58,838 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:31:58.843 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:58.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:58.907 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:58.907 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:58,929 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:58,930 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 07:31:59,106 DEBUG spoon.support.StandardEnvironment - built in 176 ms
2015-02-28 07:31:59,106 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 07:31:59,106 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:31:59.107 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 07:31:59,107 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:31:59.113 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### px = x ##### Before:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    px = x;
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:59.114 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### px = x ##### After:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        px = x;
    
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
07:31:59.114 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
07:31:59.128 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:31:59.185 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
07:31:59.193 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:31:59.187 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
08:31:59.188 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1931, Suspiciousness=0.4082482904638631]
08:31:59.188 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:31:59,188 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:31:59.192 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:31:59.204 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:31:59.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:31:59.240 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:31:59,262 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:31:59,262 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:31:59,449 DEBUG spoon.support.StandardEnvironment - built in 187 ms
2015-02-28 08:31:59,449 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:31:59,449 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:31:59.450 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:31:59,450 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:31:59.456 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = x.add(dx) ##### Before:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x = x.add(dx);
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
08:31:59.457 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = x.add(dx) ##### After:
{
    dx = newInstance(x);
    dx.sign = -1;
    dx = dx.add(divide(x));
    dx = dx.divide(2);
    ppx = px;
    px = x;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x = x.add(dx);
    
    if (x.equals(ppx)) {
        break;
    } 
    if ((dx.mant[((mant.length) - 1)]) == 0) {
        break;
    } 
}
08:31:59.457 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:31:59.471 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:31:59.536 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:31:59.546 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:31:59.754 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:31:59.754 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (208 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
08:31:59.757 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:00.210 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:00.211 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3601017 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:00.232 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:00.232 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (476 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:00.232 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1931
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:00.232 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
08:32:00.232 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:00.232 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1931 otherwise the patch would be "true" or "false"
08:32:00.232 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1931, Suspiciousness=0.4082482904638631]
08:32:00.232 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1933, Suspiciousness=0.4082482904638631]
08:32:00.233 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:00,233 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:00.238 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:00.252 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:00.299 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:00.299 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:00,320 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:00,320 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:00,485 DEBUG spoon.support.StandardEnvironment - built in 165 ms
2015-02-28 08:32:00,485 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:00,485 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:00.486 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:00,486 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:00.492 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (x.equals(ppx)) {
    break;
} 
08:32:00.492 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:00.505 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:00.559 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:00.569 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:00.783 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:00.783 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (214 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
08:32:00.785 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:01.290 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:01.291 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (505 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:01.291 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1933
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:01.291 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
08:32:01.291 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:01.291 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1933 otherwise the patch would be "true" or "false"
08:32:01.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1933, Suspiciousness=0.4082482904638631]
08:32:01.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1940, Suspiciousness=0.4082482904638631]
08:32:01.291 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:01,291 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:01.297 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:01.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:01.361 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:01.361 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:01,383 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:01,384 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:01,562 DEBUG spoon.support.StandardEnvironment - built in 178 ms
2015-02-28 08:32:01,563 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:01,563 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:01.563 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:01,564 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:01.570 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((dx.mant[((mant.length) - 1)]) == 0) {
    break;
} 
08:32:01.570 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:01.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:01.642 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:01.652 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:02.238 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:02.239 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (587 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:02.242 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:02.244 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:02.244 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:02.244 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1940
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:02.244 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:02.244 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:02.244 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1940 otherwise the patch would be "true" or "false"
08:32:02.244 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1940, Suspiciousness=0.4082482904638631]
08:32:02.244 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1941, Suspiciousness=0.4082482904638631]
08:32:02.245 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:02,245 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:02.249 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:02.258 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:02.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:02.293 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:02,308 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:02,308 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:02,433 DEBUG spoon.support.StandardEnvironment - built in 125 ms
2015-02-28 08:32:02,433 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:02,433 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:02.434 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:02,434 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:02.439 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    break;
}
08:32:02.439 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### break ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dx",dx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ppx",ppx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("px",px);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        break;
    
}
08:32:02.439 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:02.449 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:02.489 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:02.496 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:03.128 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:03.128 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (632 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:03.131 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:03.133 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:03.134 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:03.134 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1941
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:03.134 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:03.134 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:03.134 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1941 otherwise the patch would be "true" or "false"
08:32:03.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1941, Suspiciousness=0.4082482904638631]
08:32:03.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1945, Suspiciousness=0.4082482904638631]
08:32:03.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:03,134 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:03.140 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:03.153 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:03.204 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:03.204 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1945.
08:32:03.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1945, Suspiciousness=0.4082482904638631]
08:32:03.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=848, Suspiciousness=0.31622776601683794]
08:32:03.205 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:03,205 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:03.210 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:03.224 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:03.274 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:03.274 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:848.
08:32:03.274 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=848, Suspiciousness=0.31622776601683794]
08:32:03.274 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1292, Suspiciousness=0.31622776601683794]
08:32:03.274 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:03,274 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:03.280 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:03.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:03.343 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:03.343 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:03,365 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:03,366 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:03,542 DEBUG spoon.support.StandardEnvironment - built in 177 ms
2015-02-28 08:32:03,542 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:03,542 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:03.543 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:03,543 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:03.550 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.exp = 0;
    if (asign != bsign) {
        result.sign = 1;
    } 
}
08:32:03.550 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.exp = 0;
    
    if (asign != bsign) {
        result.sign = 1;
    } 
}
08:32:03.552 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:03.566 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:03.624 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:03.634 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:04.243 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:04.243 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (609 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:04.245 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:04.247 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:04.247 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:04.247 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1292
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:04.247 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:04.247 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:04.247 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1292 otherwise the patch would be "true" or "false"
08:32:04.247 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1292, Suspiciousness=0.31622776601683794]
08:32:04.247 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1294, Suspiciousness=0.31622776601683794]
08:32:04.247 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:04,247 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:04.253 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:04.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:04.317 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:04.317 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:04,339 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:04,339 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:04,515 DEBUG spoon.support.StandardEnvironment - built in 176 ms
2015-02-28 08:32:04,515 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:04,515 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:04.516 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:04,516 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:04.522 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (asign != bsign) {
    result.sign = 1;
} 
08:32:04.524 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:04.538 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:04.596 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:04.603 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:05.198 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:05.199 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (596 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:05.201 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:05.203 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:05.204 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:05.204 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1294
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:05.204 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:05.204 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:05.204 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1294 otherwise the patch would be "true" or "false"
08:32:05.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1294, Suspiciousness=0.31622776601683794]
08:32:05.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1296, Suspiciousness=0.31622776601683794]
08:32:05.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:05,205 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:05.210 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:05.222 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:05.271 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:05.271 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:05,293 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:05,294 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:05,463 DEBUG spoon.support.StandardEnvironment - built in 169 ms
2015-02-28 08:32:05,463 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:05,463 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:05.464 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:05,464 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:05.470 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.sign = 1 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.sign = 1;
}
08:32:05.471 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.sign = 1 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.sign = 1;
    
}
08:32:05.473 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:05.487 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:05.545 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:05.555 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:06.160 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:06.161 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (605 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:06.163 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:06.165 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:06.166 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:06.166 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1296
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:06.166 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:06.166 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:06.166 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1296 otherwise the patch would be "true" or "false"
08:32:06.166 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1296, Suspiciousness=0.31622776601683794]
08:32:06.166 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1273, Suspiciousness=0.2886751345948129]
08:32:06.166 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:06,166 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:06.172 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:06.185 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:06.243 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:06.244 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:06,266 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:06,266 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:06,435 DEBUG spoon.support.StandardEnvironment - built in 169 ms
2015-02-28 08:32:06,435 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:06,435 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:06.436 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:06,436 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:06.443 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("excp",excp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
}
08:32:06.443 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("excp",excp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
    
}
08:32:06.445 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:06.459 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:06.517 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:06.527 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:07.158 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:07.158 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (631 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:07.161 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:07.163 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:07.163 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:07.163 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1273
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:07.164 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:07.164 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:07.164 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1273 otherwise the patch would be "true" or "false"
08:32:07.164 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1273, Suspiciousness=0.2886751345948129]
08:32:07.164 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1772, Suspiciousness=0.2886751345948129]
08:32:07.164 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:07,164 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:07.170 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:07.183 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:07.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:07.234 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:07,256 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:07,256 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:07,425 DEBUG spoon.support.StandardEnvironment - built in 169 ms
2015-02-28 08:32:07,426 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:07,426 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:07.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:07,426 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:07.468 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.exp = 0;
}
08:32:07.468 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.exp = 0;
    
}
08:32:07.470 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:07.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:07.542 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:07.559 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:08.203 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:08.203 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (644 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:08.205 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:08.208 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:08.208 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:08.208 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1772
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:08.208 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:08.208 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:08.208 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1772 otherwise the patch would be "true" or "false"
08:32:08.208 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1772, Suspiciousness=0.2886751345948129]
08:32:08.208 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=844, Suspiciousness=0.2773500981126146]
08:32:08.209 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:08,209 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:08.215 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:08.228 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:08.278 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:08.279 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:08,301 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:08,301 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:08,489 DEBUG spoon.support.StandardEnvironment - built in 188 ms
2015-02-28 08:32:08,489 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:08,489 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:08.490 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:08,490 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:08.495 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((isNaN()) || (x.isNaN())) || ((field.getRadixDigits()) != (x.field.getRadixDigits()))) {
    return false;
} 
08:32:08.498 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:08.512 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:08.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:08.579 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:08.772 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:08.772 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (193 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math.dfp.Dfp.<init>(Dfp.java:397)
    at org.apache.commons.math.dfp.DfpField.split(DfpField.java:588)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:223)
    at org.apache.commons.math.dfp.DfpField.<init>(DfpField.java:197)
    at org.apache.commons.math.dfp.DfpTest.setUp(DfpTest.java:39)
08:32:08.774 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:09.240 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:09.240 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (466 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:09.241 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:844
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:09.241 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): String index out of range: 0]
08:32:09.241 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:09.241 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:844 otherwise the patch would be "true" or "false"
08:32:09.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=844, Suspiciousness=0.2773500981126146]
08:32:09.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2118, Suspiciousness=0.2773500981126146]
08:32:09.241 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:09,241 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:09.247 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:09.260 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:09.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:09.311 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:09,333 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:09,334 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:09,512 DEBUG spoon.support.StandardEnvironment - built in 179 ms
2015-02-28 08:32:09,512 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:09,512 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:09.513 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:09,513 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:09.519 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[--q] = '-' ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    buffer[--q] = '-';
}
08:32:09.519 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[--q] = '-' ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        buffer[--q] = '-';
    
}
08:32:09.522 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:09.536 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:09.602 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:09.609 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:10.198 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:10.198 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (589 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<6.103515625E-5>]
java.lang.AssertionError: expected:<0.0> but was:<6.103515625E-5>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:10.201 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:10.203 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:10.203 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:10.204 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2118
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:10.204 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<6.103515625E-5>]
08:32:10.204 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:10.204 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2118 otherwise the patch would be "true" or "false"
08:32:10.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2118, Suspiciousness=0.2773500981126146]
08:32:10.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1268, Suspiciousness=0.2672612419124244]
08:32:10.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:10,204 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:10.210 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:10.223 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:10.274 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:10.274 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1268.
08:32:10.274 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1268, Suspiciousness=0.2672612419124244]
08:32:10.274 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1269, Suspiciousness=0.2672612419124244]
08:32:10.274 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:10,275 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:10.280 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:10.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:10.343 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:10.344 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:10,366 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:10,366 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:10,537 DEBUG spoon.support.StandardEnvironment - built in 171 ms
2015-02-28 08:32:10,537 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:10,537 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:10.538 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:10,538 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:10.544 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.shiftRight() ##### Before:
{
    final int lostdigit = result.mant[0];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.shiftRight();
    result.mant[((mant.length) - 1)] = rh;
    final int excp = result.round(lostdigit);
    if (excp != 0) {
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
    } 
}
08:32:10.545 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.shiftRight() ##### After:
{
    final int lostdigit = result.mant[0];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.shiftRight();
    
    result.mant[((mant.length) - 1)] = rh;
    final int excp = result.round(lostdigit);
    if (excp != 0) {
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
    } 
}
08:32:10.547 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:10.561 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:10.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:10.629 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:11.247 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:11.247 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (618 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:11.249 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:11.252 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:11.252 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:11.252 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1269
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:11.252 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:11.252 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:11.252 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1269 otherwise the patch would be "true" or "false"
08:32:11.252 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1269, Suspiciousness=0.2672612419124244]
08:32:11.252 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1270, Suspiciousness=0.2672612419124244]
08:32:11.253 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:11,253 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:11.258 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:11.272 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:11.322 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:11.322 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:11,344 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:11,345 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:11,515 DEBUG spoon.support.StandardEnvironment - built in 171 ms
2015-02-28 08:32:11,515 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:11,516 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:11.516 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:11,516 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:11.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.mant[((mant.length) - 1)] = rh ##### Before:
{
    final int lostdigit = result.mant[0];
    result.shiftRight();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.mant[((mant.length) - 1)] = rh;
    final int excp = result.round(lostdigit);
    if (excp != 0) {
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
    } 
}
08:32:11.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.mant[((mant.length) - 1)] = rh ##### After:
{
    final int lostdigit = result.mant[0];
    result.shiftRight();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.mant[((mant.length) - 1)] = rh;
    
    final int excp = result.round(lostdigit);
    if (excp != 0) {
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
    } 
}
08:32:11.533 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:11.547 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:11.605 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:11.613 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:12.191 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:12.192 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (579 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:12.194 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:12.197 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:12.197 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:12.197 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1270
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:12.197 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:12.197 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:12.197 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1270 otherwise the patch would be "true" or "false"
08:32:12.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1270, Suspiciousness=0.2672612419124244]
08:32:12.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1271, Suspiciousness=0.2672612419124244]
08:32:12.198 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:12,198 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:12.203 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:12.217 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:12.267 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:12.267 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1271.
08:32:12.267 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1271, Suspiciousness=0.2672612419124244]
08:32:12.267 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1272, Suspiciousness=0.2672612419124244]
08:32:12.267 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:12,267 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:12.273 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:12.286 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:12.336 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:12.336 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:12,358 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:12,359 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:12,530 DEBUG spoon.support.StandardEnvironment - built in 172 ms
2015-02-28 08:32:12,530 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:12,530 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:12.531 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:12,531 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:12.537 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (excp != 0) {
    result = dotrap(excp, org.apache.commons.math.dfp.Dfp.ADD_TRAP, x, result);
} 
08:32:12.539 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:12.553 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:12.612 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:12.622 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:13.234 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:32:13.234 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (613 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:13.237 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
08:32:13.239 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:32:13.239 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:32:13.239 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1272
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
08:32:13.239 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:13.240 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
08:32:13.240 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1272 otherwise the patch would be "true" or "false"
08:32:13.240 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1272, Suspiciousness=0.2672612419124244]
08:32:13.240 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1722, Suspiciousness=0.2672612419124244]
08:32:13.240 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:13,240 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:32:13.246 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:13.259 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:13.310 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:13.310 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:13,332 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:13,333 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 08:32:13,512 DEBUG spoon.support.StandardEnvironment - built in 180 ms
2015-02-28 08:32:13,512 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 08:32:13,512 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:32:13.513 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 08:32:13,513 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:32:13.548 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trialgood = false ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    trialgood = false;
}
08:32:13.548 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trialgood = false ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        trialgood = false;
    
}
08:32:13.550 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
08:32:13.564 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:32:13.622 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
08:32:13.632 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:13.623 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
09:32:13.625 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2065, Suspiciousness=0.2581988897471611]
09:32:13.625 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:13,625 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:13.630 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:13.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:13.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:13.692 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:13,707 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:13,707 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:13,832 DEBUG spoon.support.StandardEnvironment - built in 125 ms
2015-02-28 09:32:13,833 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:13,833 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:13.833 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:13,833 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:13.837 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[p++] = '0' ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    buffer[p++] = '0';
    buffer[p++] = '.';
    pointInserted = true;
}
09:32:13.837 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[p++] = '0' ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        buffer[p++] = '0';
    
    buffer[p++] = '.';
    pointInserted = true;
}
09:32:13.839 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:13.849 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:13.890 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:13.901 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:14.495 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:14.495 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (595 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:14.498 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:14.500 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:14.500 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:14.500 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2065
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:14.500 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:14.501 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:14.501 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2065 otherwise the patch would be "true" or "false"
09:32:14.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2065, Suspiciousness=0.2581988897471611]
09:32:14.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2066, Suspiciousness=0.2581988897471611]
09:32:14.501 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:14,501 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:14.507 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:14.520 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:14.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:14.571 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:14,593 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:14,593 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:14,777 DEBUG spoon.support.StandardEnvironment - built in 184 ms
2015-02-28 09:32:14,777 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:14,777 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:14.778 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:14,778 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:14.783 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[p++] = '.' ##### Before:
{
    buffer[p++] = '0';
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    buffer[p++] = '.';
    pointInserted = true;
}
09:32:14.783 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### buffer[p++] = '.' ##### After:
{
    buffer[p++] = '0';
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        buffer[p++] = '.';
    
    pointInserted = true;
}
09:32:14.785 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:14.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:14.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:14.867 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:14.965 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:14.965 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3601333 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:15.465 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:15.465 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (598 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:15.468 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:15.470 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:15.470 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:15.471 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2066
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:15.471 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:15.471 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:15.471 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2066 otherwise the patch would be "true" or "false"
09:32:15.471 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2066, Suspiciousness=0.2581988897471611]
09:32:15.471 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2067, Suspiciousness=0.2581988897471611]
09:32:15.471 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:15,471 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:15.477 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:15.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:15.540 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:15.541 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:15,563 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:15,563 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:15,734 DEBUG spoon.support.StandardEnvironment - built in 171 ms
2015-02-28 09:32:15,735 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:15,735 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:15.735 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:15,736 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:15.740 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### pointInserted = true ##### Before:
{
    buffer[p++] = '0';
    buffer[p++] = '.';
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    pointInserted = true;
}
09:32:15.741 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### pointInserted = true ##### After:
{
    buffer[p++] = '0';
    buffer[p++] = '.';
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        pointInserted = true;
    
}
09:32:15.743 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:15.757 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:15.814 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:15.824 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:16.423 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:16.423 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (599 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:16.426 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:16.428 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:16.428 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:16.428 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2067
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:16.428 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:16.428 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:16.428 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2067 otherwise the patch would be "true" or "false"
09:32:16.429 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2067, Suspiciousness=0.2581988897471611]
09:32:16.429 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2108, Suspiciousness=0.2581988897471611]
09:32:16.429 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:16,429 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:16.434 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:16.448 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:16.498 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:16.498 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:16,520 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:16,520 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:16,701 DEBUG spoon.support.StandardEnvironment - built in 181 ms
2015-02-28 09:32:16,701 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:16,701 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:16.702 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:16,702 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:16.708 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### q-- ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    q--;
}
09:32:16.708 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### q-- ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("buffer",buffer);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("pointInserted",pointInserted);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        q--;
    
}
09:32:16.711 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:16.724 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:16.782 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:16.792 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:17.400 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:17.400 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (608 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:17.403 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:17.405 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:17.405 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:17.405 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2108
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:17.405 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:17.405 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:17.405 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2108 otherwise the patch would be "true" or "false"
09:32:17.405 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2108, Suspiciousness=0.2581988897471611]
09:32:17.405 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1040, Suspiciousness=0.2581988897471611]
09:32:17.406 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:17,406 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:17.411 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:17.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:17.475 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:17.475 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1040.
09:32:17.475 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1040, Suspiciousness=0.2581988897471611]
09:32:17.475 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1493, Suspiciousness=0.25]
09:32:17.475 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:17,475 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:17.481 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:17.494 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:17.544 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:17.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:17,566 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:17,566 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:17,737 DEBUG spoon.support.StandardEnvironment - built in 171 ms
2015-02-28 09:32:17,737 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:17,737 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:17.738 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:17,738 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:17.745 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("product",product);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result.exp = 0;
}
09:32:17.746 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result.exp = 0 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("product",product);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result.exp = 0;
    
}
09:32:17.747 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:17.760 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:17.818 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:17.828 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:18.501 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:18.501 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (673 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:18.504 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:18.506 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:18.506 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:18.506 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1493
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:18.507 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:18.507 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:18.507 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1493 otherwise the patch would be "true" or "false"
09:32:18.507 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1493, Suspiciousness=0.25]
09:32:18.507 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=861, Suspiciousness=0.24253562503633297]
09:32:18.507 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:18,507 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:18.513 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:18.526 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:18.576 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:18.576 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:18,598 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:18,599 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:18,783 DEBUG spoon.support.StandardEnvironment - built in 184 ms
2015-02-28 09:32:18,783 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:18,783 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:18.784 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:18,784 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:18.790 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return 0 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.sign",b.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.nans",b.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.field",a.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.exp",a.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.nans",a.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.exp",b.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.field",b.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.mant",b.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.mant",a.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.sign",a.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return 0;
}
09:32:18.790 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return 0 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.sign",b.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.nans",b.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.field",a.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.exp",a.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.nans",a.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.exp",b.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.field",b.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b.mant",b.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.mant",a.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a.sign",a.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return 0;
    
}
09:32:18.793 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:18.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:18.864 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:18.874 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:19.471 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:19.471 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (597 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:19.474 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:19.476 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:19.476 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:19.476 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:861
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:19.476 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:19.476 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:19.476 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:861 otherwise the patch would be "true" or "false"
09:32:19.476 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=861, Suspiciousness=0.24253562503633297]
09:32:19.476 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1233, Suspiciousness=0.22941573387056174]
09:32:19.477 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:19,477 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:19.482 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:19.496 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:19.546 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:19.546 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:19,568 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:19,569 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:19,739 DEBUG spoon.support.StandardEnvironment - built in 170 ms
2015-02-28 09:32:19,740 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:19,740 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:19.740 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:19,741 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:19.746 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a.exp = b.exp ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a.exp = b.exp;
}
09:32:19.747 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a.exp = b.exp ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a.exp = b.exp;
    
}
09:32:19.749 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:19.763 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:19.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:19.830 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:20.428 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:20.428 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (598 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:20.431 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:20.433 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:20.433 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:20.433 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1233
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:20.433 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:20.434 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:20.434 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1233 otherwise the patch would be "true" or "false"
09:32:20.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1233, Suspiciousness=0.22941573387056174]
09:32:20.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2327, Suspiciousness=0.22941573387056174]
09:32:20.434 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:20,434 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:20.439 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:20.453 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:20.503 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:20.503 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:20,525 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:20,525 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:20,696 DEBUG spoon.support.StandardEnvironment - built in 171 ms
2015-02-28 09:32:20,696 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:20,696 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:20.697 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:20,697 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:20.701 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exponent-- ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    exponent--;
}
09:32:20.701 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exponent-- ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        exponent--;
    
}
09:32:20.716 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:20.730 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:20.787 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:20.797 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:21.404 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:21.404 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (607 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:21.407 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:21.409 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:21.409 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:21.409 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2327
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:21.409 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:21.410 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:21.410 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2327 otherwise the patch would be "true" or "false"
09:32:21.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2327, Suspiciousness=0.22941573387056174]
09:32:21.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=226, Suspiciousness=0.22360679774997896]
09:32:21.410 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:21,410 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:21.416 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:21.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:21.479 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:21.479 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:21,502 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:21,502 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:21,675 DEBUG spoon.support.StandardEnvironment - built in 173 ms
2015-02-28 09:32:21,675 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:21,675 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:21.676 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:21,676 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:21.677 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sign = -1 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("isLongMin",isLongMin);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sign = -1;
    x = -x;
}
09:32:21.677 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sign = -1 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("isLongMin",isLongMin);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sign = -1;
    
    x = -x;
}
09:32:21.681 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:21.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:21.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:21.760 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:22.357 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:22.357 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (597 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:22.360 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:22.362 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:22.362 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:22.363 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:226
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:22.363 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:22.363 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:22.363 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:226 otherwise the patch would be "true" or "false"
09:32:22.363 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=226, Suspiciousness=0.22360679774997896]
09:32:22.363 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=227, Suspiciousness=0.22360679774997896]
09:32:22.363 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:22,363 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:22.369 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:22.382 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:22.432 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:22.432 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:22,454 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:22,454 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 09:32:22,626 DEBUG spoon.support.StandardEnvironment - built in 172 ms
2015-02-28 09:32:22,626 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:22,626 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:22.627 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:22,627 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:22.628 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = -x ##### Before:
{
    sign = -1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("isLongMin",isLongMin);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x = -x;
}
09:32:22.629 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = -x ##### After:
{
    sign = -1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("isLongMin",isLongMin);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x = -x;
    
}
09:32:22.632 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:22.646 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:22.940 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:22.950 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:23.545 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:23.545 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (595 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:23.548 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:23.550 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:23.550 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:23.551 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:227
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:23.551 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:23.551 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:23.551 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:227 otherwise the patch would be "true" or "false"
09:32:23.551 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=227, Suspiciousness=0.22360679774997896]
09:32:23.551 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1104, Suspiciousness=0.22360679774997896]
09:32:23.551 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 09:32:23,551 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:23.557 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
09:32:23.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:23.620 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
09:32:23.621 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:1104.
09:32:23.621 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1104, Suspiciousness=0.22360679774997896]
09:32:23.621 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=222, Suspiciousness=0.22360679774997896]
09:32:23.621 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:23,621 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:23.623 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:23.627 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:23.651 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:23.651 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:23,673 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:23,673 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:23,756 DEBUG spoon.support.StandardEnvironment - built in 83 ms
2015-02-28 09:32:23,756 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:23,756 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:23.757 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:23,757 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:23.765 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (a < 0) {
    invert = true;
    a = -a;
} 
09:32:23.766 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:23.770 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:23.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:23.808 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:24.407 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:24.407 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (599 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:24.410 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:24.412 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:24.412 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:24.413 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:222
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:24.413 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:24.413 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:24.413 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:222 otherwise the patch would be "true" or "false"
09:32:24.413 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=222, Suspiciousness=0.22360679774997896]
09:32:24.413 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=223, Suspiciousness=0.22360679774997896]
09:32:24.413 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:24,413 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:24.416 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:24.420 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:24.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:24.442 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:24,464 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:24,465 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:24,546 DEBUG spoon.support.StandardEnvironment - built in 82 ms
2015-02-28 09:32:24,547 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:24,547 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:24.547 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:24,547 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:24.555 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### invert = true ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    invert = true;
    a = -a;
}
09:32:24.555 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### invert = true ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        invert = true;
    
    a = -a;
}
09:32:24.556 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:24.560 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:24.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:24.599 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:25.193 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:25.193 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (595 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:25.195 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:25.196 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:25.196 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:25.197 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:223
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:25.197 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:25.197 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:25.197 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:223 otherwise the patch would be "true" or "false"
09:32:25.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=223, Suspiciousness=0.22360679774997896]
09:32:25.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=224, Suspiciousness=0.22360679774997896]
09:32:25.197 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:25,197 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:25.200 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:25.204 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:25.226 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:25.226 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:25,248 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:25,248 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:25,330 DEBUG spoon.support.StandardEnvironment - built in 82 ms
2015-02-28 09:32:25,330 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:25,330 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:25.331 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:25,331 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:25.339 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = -a ##### Before:
{
    invert = true;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = -a;
}
09:32:25.339 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = -a ##### After:
{
    invert = true;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = -a;
    
}
09:32:25.340 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:25.344 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:25.373 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:25.379 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:25.835 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:25.836 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (457 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:25.838 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:25.841 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:25.841 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:25.841 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:224
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:25.841 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:25.841 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:25.841 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:224 otherwise the patch would be "true" or "false"
09:32:25.841 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=224, Suspiciousness=0.22360679774997896]
09:32:25.841 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=229, Suspiciousness=0.22360679774997896]
09:32:25.842 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:25,842 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:25.844 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:25.848 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:25.871 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:25.871 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:229.
09:32:25.871 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=229, Suspiciousness=0.22360679774997896]
09:32:25.871 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=231, Suspiciousness=0.22360679774997896]
09:32:25.871 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:25,871 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:25.873 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:25.877 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:25.899 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:25.899 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:231.
09:32:25.899 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=231, Suspiciousness=0.22360679774997896]
09:32:25.899 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=235, Suspiciousness=0.22360679774997896]
09:32:25.899 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:25,899 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:25.902 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:25.906 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:25.927 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:25.928 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:25,950 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:25,950 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,039 DEBUG spoon.support.StandardEnvironment - built in 89 ms
2015-02-28 09:32:26,039 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:26,039 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:26.040 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:26,040 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:26.048 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### prevr = new org.apache.commons.math.dfp.Dfp(r) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    prevtrial = trial;
    r = r.multiply(r);
    trial = trial * 2;
}
09:32:26.048 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### prevr = new org.apache.commons.math.dfp.Dfp(r) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        prevr = new org.apache.commons.math.dfp.Dfp(r);
    
    prevtrial = trial;
    r = r.multiply(r);
    trial = trial * 2;
}
09:32:26.049 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:26.053 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:26.075 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpMath.java:200: error: variable prevr might not have been initialized
            r = prevr;
                ^
09:32:26.076 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=236, Suspiciousness=0.22360679774997896]
09:32:26.076 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:26,076 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:26.078 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:26.082 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:26.105 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:26.105 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,127 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,127 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,209 DEBUG spoon.support.StandardEnvironment - built in 82 ms
2015-02-28 09:32:26,209 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:26,209 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:26.210 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:26,210 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:26.218 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### prevtrial = trial ##### Before:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    prevtrial = trial;
    r = r.multiply(r);
    trial = trial * 2;
}
09:32:26.219 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### prevtrial = trial ##### After:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        prevtrial = trial;
    
    r = r.multiply(r);
    trial = trial * 2;
}
09:32:26.220 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:26.224 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:26.246 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpMath.java:202: error: variable prevtrial might not have been initialized
            trial = prevtrial;
                    ^
09:32:26.247 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=237, Suspiciousness=0.22360679774997896]
09:32:26.247 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:26,247 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:26.250 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:26.253 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:26.275 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:26.275 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,297 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,298 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:26,379 DEBUG spoon.support.StandardEnvironment - built in 81 ms
2015-02-28 09:32:26,380 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:26,380 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:26.380 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:26,381 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:26.389 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### r = r.multiply(r) ##### Before:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    prevtrial = trial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevtrial",prevtrial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    r = r.multiply(r);
    trial = trial * 2;
}
09:32:26.389 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### r = r.multiply(r) ##### After:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    prevtrial = trial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevtrial",prevtrial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        r = r.multiply(r);
    
    trial = trial * 2;
}
09:32:26.390 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:26.394 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:26.423 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:26.433 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:27.066 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
09:32:27.066 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (633 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:27.068 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
09:32:27.070 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
09:32:27.070 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:32:27.070 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:237
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
09:32:27.070 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:27.070 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
09:32:27.070 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:237 otherwise the patch would be "true" or "false"
09:32:27.071 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=237, Suspiciousness=0.22360679774997896]
09:32:27.071 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=238, Suspiciousness=0.22360679774997896]
09:32:27.071 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:27,071 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
09:32:27.073 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:27.077 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:27.100 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:27.100 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:27,122 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:27,122 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 09:32:27,205 DEBUG spoon.support.StandardEnvironment - built in 83 ms
2015-02-28 09:32:27,205 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 09:32:27,205 DEBUG spoon.support.StandardEnvironment - built in 0 ms
09:32:27.206 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 09:32:27,206 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
09:32:27.214 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trial = trial * 2 ##### Before:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    prevtrial = trial;
    r = r.multiply(r);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevtrial",prevtrial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    trial = trial * 2;
}
09:32:27.214 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trial = trial * 2 ##### After:
{
    prevr = new org.apache.commons.math.dfp.Dfp(r);
    prevtrial = trial;
    r = r.multiply(r);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevr",prevr);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("prevtrial",prevtrial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        trial = trial * 2;
    
}
09:32:27.215 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
09:32:27.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
09:32:27.248 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
09:32:27.258 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
10:32:27.249 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
10:32:27.250 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=239, Suspiciousness=0.22360679774997896]
10:32:27.250 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:27,250 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
10:32:27.252 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:27.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:27.271 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:27.271 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:239.
10:32:27.271 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=239, Suspiciousness=0.22360679774997896]
10:32:27.271 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=241, Suspiciousness=0.22360679774997896]
10:32:27.271 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:27,271 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
10:32:27.273 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:27.276 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:27.292 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:27.292 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:27,307 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:27,307 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:27,363 DEBUG spoon.support.StandardEnvironment - built in 56 ms
2015-02-28 10:32:27,363 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 10:32:27,364 DEBUG spoon.support.StandardEnvironment - built in 0 ms
10:32:27.364 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:27,364 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
10:32:27.370 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### r = prevr ##### Before:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    r = prevr;
    trial = prevtrial;
    a = a - trial;
    result = result.multiply(r);
}
10:32:27.370 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### r = prevr ##### After:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        r = prevr;
    
    trial = prevtrial;
    a = a - trial;
    result = result.multiply(r);
}
10:32:27.371 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:27.374 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:27.400 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:27.407 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
10:32:27.948 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
10:32:27.949 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (543 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:27.951 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
10:32:27.954 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
10:32:27.954 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:27.954 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:241
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
10:32:27.954 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
10:32:27.954 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
10:32:27.954 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:241 otherwise the patch would be "true" or "false"
10:32:27.954 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=241, Suspiciousness=0.22360679774997896]
10:32:27.954 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=242, Suspiciousness=0.22360679774997896]
10:32:27.955 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:27,955 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
10:32:27.957 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:27.961 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:27.984 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:27.984 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,006 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,006 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,088 DEBUG spoon.support.StandardEnvironment - built in 82 ms
2015-02-28 10:32:28,088 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 10:32:28,088 DEBUG spoon.support.StandardEnvironment - built in 0 ms
10:32:28.089 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:28,089 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
10:32:28.097 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trial = prevtrial ##### Before:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    trial = prevtrial;
    a = a - trial;
    result = result.multiply(r);
}
10:32:28.098 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### trial = prevtrial ##### After:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        trial = prevtrial;
    
    a = a - trial;
    result = result.multiply(r);
}
10:32:28.099 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:28.103 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:28.131 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:28.141 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
10:32:28.736 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
10:32:28.736 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (595 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:28.739 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
10:32:28.741 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
10:32:28.741 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:32:28.741 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:242
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
10:32:28.741 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
10:32:28.741 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
10:32:28.741 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:242 otherwise the patch would be "true" or "false"
10:32:28.741 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=242, Suspiciousness=0.22360679774997896]
10:32:28.741 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=244, Suspiciousness=0.22360679774997896]
10:32:28.741 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:28,742 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
10:32:28.744 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:28.748 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:28.769 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:28.769 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,790 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,790 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 10:32:28,867 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-02-28 10:32:28,867 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 10:32:28,867 DEBUG spoon.support.StandardEnvironment - built in 0 ms
10:32:28.867 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 10:32:28,868 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
10:32:28.875 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = a - trial ##### Before:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    trial = prevtrial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = a - trial;
    result = result.multiply(r);
}
10:32:28.876 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = a - trial ##### After:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    trial = prevtrial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = a - trial;
    
    result = result.multiply(r);
}
10:32:28.877 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
10:32:28.881 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
10:32:28.908 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
10:32:28.917 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:28.908 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
11:32:28.910 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=245, Suspiciousness=0.22360679774997896]
11:32:28.910 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:28,910 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:28.912 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:28.914 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:28.931 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:28.931 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:28,946 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:28,946 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:29,007 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 11:32:29,007 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:29,007 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:29.007 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:29,008 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:29.014 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = result.multiply(r) ##### Before:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    trial = prevtrial;
    a = a - trial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result = result.multiply(r);
}
11:32:29.014 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = result.multiply(r) ##### After:
{
    org.apache.commons.math.dfp.Dfp r = new org.apache.commons.math.dfp.Dfp(base);
    org.apache.commons.math.dfp.Dfp prevr;
    int trial = 1;
    int prevtrial;
    do {
        prevr = new org.apache.commons.math.dfp.Dfp(r);
        prevtrial = trial;
        r = r.multiply(r);
        trial = trial * 2;
    } while (a > trial );
    r = prevr;
    trial = prevtrial;
    a = a - trial;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("r",r);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result = result.multiply(r);
    
}
11:32:29.015 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:29.018 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:29.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:29.046 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:29.456 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:29.456 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (410 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:29.458 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:29.459 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:29.460 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:29.460 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:245
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:29.460 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:29.460 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:29.460 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:245 otherwise the patch would be "true" or "false"
11:32:29.460 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=245, Suspiciousness=0.22360679774997896]
11:32:29.460 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=247, Suspiciousness=0.22360679774997896]
11:32:29.460 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:29,460 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:29.462 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:29.465 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:29.481 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:29.481 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:247.
11:32:29.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=247, Suspiciousness=0.22360679774997896]
11:32:29.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=249, Suspiciousness=0.22360679774997896]
11:32:29.482 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:29,482 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:29.483 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:29.486 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:29.503 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:29.503 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:29,522 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:29,522 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:29,579 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 11:32:29,579 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:29,579 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:29.580 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:29,580 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:29.586 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (invert) {
    result = base.getOne().divide(result);
} 
11:32:29.587 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:29.590 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:29.611 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:29.618 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:30.030 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:30.030 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (412 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:30.032 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:30.034 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:30.034 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:30.034 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:249
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:30.034 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:30.034 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:30.034 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:249 otherwise the patch would be "true" or "false"
11:32:30.034 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=249, Suspiciousness=0.22360679774997896]
11:32:30.034 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=250, Suspiciousness=0.22360679774997896]
11:32:30.034 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:30,034 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:30.036 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:30.039 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.055 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:30.055 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:30,074 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:30,074 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:30,131 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 11:32:30,131 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:30,131 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:30.132 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:30,132 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:30.138 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = base.getOne().divide(result) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result = base.getOne().divide(result);
}
11:32:30.138 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = base.getOne().divide(result) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invert",invert);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("base",base);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.DfpMath.POW_TRAP",org.apache.commons.math.dfp.DfpMath.POW_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result = base.getOne().divide(result);
    
}
11:32:30.139 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:30.142 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.163 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:30.170 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:30.579 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:30.580 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (409 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:30.582 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:30.583 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:30.583 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:30.584 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:250
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:30.584 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:30.584 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:30.584 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:250 otherwise the patch would be "true" or "false"
11:32:30.584 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=250, Suspiciousness=0.22360679774997896]
11:32:30.584 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=253, Suspiciousness=0.22360679774997896]
11:32:30.584 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:30,584 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:30.586 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:30.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.605 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:30.605 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:253.
11:32:30.605 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=253, Suspiciousness=0.22360679774997896]
11:32:30.605 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=575, Suspiciousness=0.22360679774997896]
11:32:30.605 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:30,605 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:30.609 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:30.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.656 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:30.656 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:575.
11:32:30.656 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=575, Suspiciousness=0.22360679774997896]
11:32:30.656 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=800, Suspiciousness=0.22360679774997896]
11:32:30.656 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:30,656 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:30.660 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:30.670 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.707 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:30.707 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:800.
11:32:30.708 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=800, Suspiciousness=0.22360679774997896]
11:32:30.708 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2304, Suspiciousness=0.22360679774997896]
11:32:30.708 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:30,708 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:30.712 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:30.721 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:30.758 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:30,773 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:30,773 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:30,900 DEBUG spoon.support.StandardEnvironment - built in 127 ms
2015-02-28 11:32:30,900 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:30,900 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:30.900 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:30,900 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:30.903 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isInfinite()) {
    if (lessThan(getZero())) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } else {
        return java.lang.Double.POSITIVE_INFINITY;
    }
} 
11:32:30.906 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:30.917 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:30.959 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:30.967 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:31.411 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:31.412 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (444 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:31.414 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:31.417 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:31.418 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:31.418 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2304
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:31.418 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<Infinity>]
11:32:31.418 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:31.418 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2304 otherwise the patch would be "true" or "false"
11:32:31.418 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2304, Suspiciousness=0.22360679774997896]
11:32:31.418 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2312, Suspiciousness=0.22360679774997896]
11:32:31.418 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:31,418 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:31.422 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:31.432 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:31.469 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:31.469 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:31,485 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:31,485 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:31,622 DEBUG spoon.support.StandardEnvironment - built in 137 ms
2015-02-28 11:32:31,622 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:31,622 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:31.623 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:31,623 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:31.626 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN()) {
    return java.lang.Double.NaN;
} 
11:32:31.630 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:31.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:31.703 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:31.711 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:32.145 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:32.146 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (435 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:32.148 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:32.149 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:32.149 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:32.150 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2312
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:32.150 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:32.150 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<NaN>]
11:32:32.150 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2312 otherwise the patch would be "true" or "false"
11:32:32.150 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2312, Suspiciousness=0.22360679774997896]
11:32:32.150 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2316, Suspiciousness=0.22360679774997896]
11:32:32.150 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,150 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:32.154 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.167 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:32.204 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:32.204 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2316.
11:32:32.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2316, Suspiciousness=0.22360679774997896]
11:32:32.204 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2317, Suspiciousness=0.22360679774997896]
11:32:32.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,204 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:32.208 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:32.254 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:32.254 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2317.
11:32:32.254 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2317, Suspiciousness=0.22360679774997896]
11:32:32.254 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2318, Suspiciousness=0.22360679774997896]
11:32:32.255 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,255 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:32.259 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.268 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:32.305 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:32.305 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:32,320 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:32,321 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:32,450 DEBUG spoon.support.StandardEnvironment - built in 130 ms
2015-02-28 11:32:32,451 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:32,451 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:32.451 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,451 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:32.454 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (lessThan(getZero())) {
    y = negate();
    negate = true;
} 
11:32:32.457 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.467 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:32.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:32.518 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:32.903 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:32.903 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (386 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:32.905 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:32.907 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:32.907 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:32.907 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2318
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:32.908 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<Infinity>]
11:32:32.908 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:32.908 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2318 otherwise the patch would be "true" or "false"
11:32:32.908 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2318, Suspiciousness=0.22360679774997896]
11:32:32.908 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2325, Suspiciousness=0.22360679774997896]
11:32:32.908 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,908 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:32.913 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.926 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:32.969 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:32.969 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2325.
11:32:32.969 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2325, Suspiciousness=0.22360679774997896]
11:32:32.969 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2326, Suspiciousness=0.22360679774997896]
11:32:32.969 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:32,969 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:32.974 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:32.987 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:33.037 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:33.037 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,053 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,053 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,176 DEBUG spoon.support.StandardEnvironment - built in 123 ms
2015-02-28 11:32:33,176 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:33,177 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:33.177 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:33,177 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:33.180 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (exponent < 0) {
    exponent--;
} 
11:32:33.183 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:33.194 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:33.236 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:33.244 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:33.684 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:33.684 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (441 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:33.687 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:33.689 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:33.689 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:33.690 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2326
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:33.690 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:33.690 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:33.690 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2326 otherwise the patch would be "true" or "false"
11:32:33.690 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2326, Suspiciousness=0.22360679774997896]
11:32:33.690 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2330, Suspiciousness=0.22360679774997896]
11:32:33.690 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:33,690 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:33.694 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:33.704 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:33.743 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:33.743 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2330.
11:32:33.743 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2330, Suspiciousness=0.22360679774997896]
11:32:33.744 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2331, Suspiciousness=0.22360679774997896]
11:32:33.744 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:33,744 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:33.748 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:33.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:33.795 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:33.795 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,810 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,811 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:33,931 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:33,931 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:33,932 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:33.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:33,932 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:33.935 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
    tempDfp = tempDfp.multiply(2);
    exponent++;
} ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:33.936 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
    tempDfp = tempDfp.multiply(2);
    exponent++;
} ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
            tempDfp = tempDfp.multiply(2);
            exponent++;
        }
    
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:33.938 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:33.949 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:33.991 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:34.001 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:34.563 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:34.563 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (562 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:34.566 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:34.568 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:34.568 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:34.569 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2331
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:34.569 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:34.569 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:34.569 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2331 otherwise the patch would be "true" or "false"
11:32:34.569 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2331, Suspiciousness=0.22360679774997896]
11:32:34.569 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2335, Suspiciousness=0.22360679774997896]
11:32:34.569 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:34,569 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:34.573 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:34.583 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:34.620 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:34.620 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:34,636 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:34,636 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:34,756 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:34,756 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:34,756 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:34.757 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:34,757 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:34.760 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exponent-- ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:34.760 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### exponent-- ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        exponent--;
    
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:34.763 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:34.773 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:34.815 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:34.823 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:35.233 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:35.233 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (410 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:35.235 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:35.237 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:35.237 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:35.237 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2335
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:35.237 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:35.237 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:35.237 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2335 otherwise the patch would be "true" or "false"
11:32:35.237 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2335, Suspiciousness=0.22360679774997896]
11:32:35.237 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2339, Suspiciousness=0.22360679774997896]
11:32:35.237 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:35,238 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:35.242 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:35.251 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:35.289 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:35.289 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:35,304 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:35,304 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:35,425 DEBUG spoon.support.StandardEnvironment - built in 121 ms
2015-02-28 11:32:35,425 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:35,425 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:35.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:35,426 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:35.429 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent)) ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:35.429 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent)) ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:35.432 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:35.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:35.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:35.491 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:35.896 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:35.897 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (405 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:35.904 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:35.906 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:35.906 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:35.906 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2339
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:35.906 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:35.906 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:35.906 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2339 otherwise the patch would be "true" or "false"
11:32:35.906 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2339, Suspiciousness=0.22360679774997896]
11:32:35.906 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2340, Suspiciousness=0.22360679774997896]
11:32:35.906 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:35,906 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:35.911 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:35.920 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:35.957 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:35.957 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:35,972 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:35,973 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:36,095 DEBUG spoon.support.StandardEnvironment - built in 122 ms
2015-02-28 11:32:36,095 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:36,095 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:36.096 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:36,096 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:36.099 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (exponent > (-1023)) {
    y = y.subtract(getOne());
} 
11:32:36.102 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:36.112 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:36.154 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:36.162 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:36.550 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:36.551 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (389 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<3.0517578125E-5>]
java.lang.AssertionError: expected:<0.0> but was:<3.0517578125E-5>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:36.553 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:36.554 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:36.554 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:36.555 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2340
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:36.555 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<3.0517578125E-5>]
11:32:36.555 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:36.555 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2340 otherwise the patch would be "true" or "false"
11:32:36.555 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2340, Suspiciousness=0.22360679774997896]
11:32:36.555 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2341, Suspiciousness=0.22360679774997896]
11:32:36.555 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:36,555 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:36.559 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:36.569 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:36.611 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:36.612 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:36,627 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:36,627 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:36,749 DEBUG spoon.support.StandardEnvironment - built in 122 ms
2015-02-28 11:32:36,749 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:36,749 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:36.749 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:36,749 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:36.752 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.subtract(getOne()) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    y = y.subtract(getOne());
}
11:32:36.753 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.subtract(getOne()) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        y = y.subtract(getOne());
    
}
11:32:36.755 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:36.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:36.808 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:36.815 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:37.298 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:37.298 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (483 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:37.301 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:37.303 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:37.303 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<3.0517578125E-5>]
java.lang.AssertionError: expected:<0.0> but was:<3.0517578125E-5>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:37.303 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2341
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:37.303 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:37.304 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<3.0517578125E-5>]
11:32:37.304 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2341 otherwise the patch would be "true" or "false"
11:32:37.304 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2341, Suspiciousness=0.22360679774997896]
11:32:37.304 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2344, Suspiciousness=0.22360679774997896]
11:32:37.304 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:37,304 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:37.308 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:37.318 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:37.356 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:37.356 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:37,372 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:37,372 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:37,493 DEBUG spoon.support.StandardEnvironment - built in 121 ms
2015-02-28 11:32:37,493 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:37,493 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:37.494 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:37,494 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:37.497 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (exponent < (-1074)) {
    return 0;
} 
11:32:37.500 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:37.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:37.553 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:37.563 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:38.111 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:38.111 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (548 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:38.113 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:38.204 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:38.204 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (91 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<-1.0> but was:<1.0>]
java.lang.AssertionError: expected:<-1.0> but was:<1.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1514)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:38.204 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2344
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:38.204 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:38.204 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<-1.0> but was:<1.0>]
11:32:38.205 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2344 otherwise the patch would be "true" or "false"
11:32:38.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2344, Suspiciousness=0.22360679774997896]
11:32:38.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2348, Suspiciousness=0.22360679774997896]
11:32:38.205 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:38,205 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:38.209 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:38.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:38.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:38.255 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:38,270 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:38,271 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:38,391 DEBUG spoon.support.StandardEnvironment - built in 121 ms
2015-02-28 11:32:38,391 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:38,391 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:38.391 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:38,391 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:38.394 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (exponent > 1023) {
    return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
} 
11:32:38.397 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:38.407 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:38.449 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:38.457 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:38.869 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:38.869 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (412 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:38.871 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:38.873 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:38.873 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:38.873 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2348
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:38.873 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<Infinity>]
11:32:38.873 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:38.873 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2348 otherwise the patch would be "true" or "false"
11:32:38.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2348, Suspiciousness=0.22360679774997896]
11:32:38.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2353, Suspiciousness=0.22360679774997896]
11:32:38.874 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:38,874 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:38.878 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:38.887 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:38.923 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:38.924 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:38,939 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:38,939 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:39,059 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:39,059 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:39,059 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:39.060 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:39,060 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:39.063 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.multiply(newInstance(4503599627370496L)).rint() ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:39.063 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### y = y.multiply(newInstance(4503599627370496L)).rint() ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        y = y.multiply(newInstance(4503599627370496L)).rint();
    
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:39.066 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:39.076 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:39.118 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:39.126 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:39.537 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:39.538 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (411 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:39.540 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:39.541 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:39.541 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:39.541 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2353
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:39.542 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<NaN>]
11:32:39.542 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:39.542 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2353 otherwise the patch would be "true" or "false"
11:32:39.542 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2353, Suspiciousness=0.22360679774997896]
11:32:39.542 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2354, Suspiciousness=0.22360679774997896]
11:32:39.542 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:39,542 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:39.546 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:39.556 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:39.592 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:39.592 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2354.
11:32:39.593 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2354, Suspiciousness=0.22360679774997896]
11:32:39.593 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2355, Suspiciousness=0.22360679774997896]
11:32:39.593 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:39,593 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:39.597 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:39.606 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:39.643 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:39.643 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:39,658 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:39,659 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:39,783 DEBUG spoon.support.StandardEnvironment - built in 124 ms
2015-02-28 11:32:39,783 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:39,784 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:39.784 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:39,784 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:39.787 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### str = str.substring(0, ((str.length()) - 1)) ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("str",str);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:39.788 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### str = str.substring(0, ((str.length()) - 1)) ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("str",str);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        str = str.substring(0, ((str.length()) - 1));
    
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:39.791 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:39.802 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:39.845 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:39.852 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:40.261 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:40.262 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (409 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:40.264 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:40.265 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:40.265 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[For input string: "-4503599627370496."]
java.lang.NumberFormatException: For input string: "-4503599627370496."
    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
    at java.lang.Long.parseLong(Long.java:441)
    at java.lang.Long.parseLong(Long.java:483)
    at org.apache.commons.math.dfp.Dfp.toDouble(Dfp.java:2029)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:40.265 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2355
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:40.266 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:40.266 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): For input string: "-4503599627370496."]
11:32:40.266 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2355 otherwise the patch would be "true" or "false"
11:32:40.266 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2355, Suspiciousness=0.22360679774997896]
11:32:40.266 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2356, Suspiciousness=0.22360679774997896]
11:32:40.266 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:40,266 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:40.270 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:40.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:40.317 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:40.317 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2356.
11:32:40.317 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2356, Suspiciousness=0.22360679774997896]
11:32:40.317 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2358, Suspiciousness=0.22360679774997896]
11:32:40.317 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:40,317 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:40.321 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:40.331 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:40.368 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:40.368 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:40,384 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:40,384 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:40,504 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:40,504 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:40,504 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:40.505 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:40,505 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:40.508 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (mantissa == 4503599627370496L) {
    mantissa = 0;
    exponent++;
} 
11:32:40.510 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:40.521 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:40.563 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:40.571 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:41.010 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:41.010 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (439 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:41.012 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:41.014 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:41.014 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<6.103515625E-5>]
java.lang.AssertionError: expected:<0.0> but was:<6.103515625E-5>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:41.014 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2358
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:41.015 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:41.015 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<6.103515625E-5>]
11:32:41.015 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2358 otherwise the patch would be "true" or "false"
11:32:41.015 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2358, Suspiciousness=0.22360679774997896]
11:32:41.015 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2365, Suspiciousness=0.22360679774997896]
11:32:41.015 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:41,015 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:41.021 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:41.035 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:41.081 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:41.081 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,097 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,097 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,216 DEBUG spoon.support.StandardEnvironment - built in 119 ms
2015-02-28 11:32:41,216 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:41,217 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:41.217 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:41,217 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:41.220 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (exponent <= (-1023)) {
    exponent--;
} 
11:32:41.223 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:41.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:41.283 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:41.290 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:41.695 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:41.696 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (406 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:41.698 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:41.699 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:41.699 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:41.700 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2365
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:41.700 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:41.700 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:41.700 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2365 otherwise the patch would be "true" or "false"
11:32:41.700 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2365, Suspiciousness=0.22360679774997896]
11:32:41.700 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2369, Suspiciousness=0.22360679774997896]
11:32:41.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:41,700 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:41.704 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:41.714 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:41.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:41.750 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,766 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,766 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:41,894 DEBUG spoon.support.StandardEnvironment - built in 128 ms
2015-02-28 11:32:41,894 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:41,894 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:41.895 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:41,895 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:41.898 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while (exponent < (-1023)) {
    exponent++;
    mantissa >>>= 1;
} ##### Before:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("mantissa",mantissa);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("str",str);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    while (exponent < (-1023)) {
        exponent++;
        mantissa >>>= 1;
    }
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:41.898 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### while (exponent < (-1023)) {
    exponent++;
    mantissa >>>= 1;
} ##### After:
{
    if (isInfinite()) {
        if (lessThan(getZero())) {
            return java.lang.Double.NEGATIVE_INFINITY;
        } else {
            return java.lang.Double.POSITIVE_INFINITY;
        }
    } 
    if (isNaN()) {
        return java.lang.Double.NaN;
    } 
    org.apache.commons.math.dfp.Dfp y = this;
    boolean negate = false;
    if (lessThan(getZero())) {
        y = negate();
        negate = true;
    } 
    int exponent = ((int)((y.log10()) * 3.32));
    if (exponent < 0) {
        exponent--;
    } 
    org.apache.commons.math.dfp.Dfp tempDfp = org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent);
    while ((tempDfp.lessThan(y)) || (tempDfp.equals(y))) {
        tempDfp = tempDfp.multiply(2);
        exponent++;
    }
    exponent--;
    y = y.divide(org.apache.commons.math.dfp.DfpMath.pow(getTwo(), exponent));
    if (exponent > (-1023)) {
        y = y.subtract(getOne());
    } 
    if (exponent < (-1074)) {
        return 0;
    } 
    if (exponent > 1023) {
        return negate ? java.lang.Double.NEGATIVE_INFINITY : java.lang.Double.POSITIVE_INFINITY;
    } 
    y = y.multiply(newInstance(4503599627370496L)).rint();
    java.lang.String str = y.toString();
    str = str.substring(0, ((str.length()) - 1));
    long mantissa = java.lang.Long.parseLong(str);
    if (mantissa == 4503599627370496L) {
        mantissa = 0;
        exponent++;
    } 
    if (exponent <= (-1023)) {
        exponent--;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("mantissa",mantissa);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("negate",negate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exponent",exponent);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("tempDfp",tempDfp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("str",str);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        while (exponent < (-1023)) {
            exponent++;
            mantissa >>>= 1;
        }
    
    long bits = mantissa | ((exponent + 1023L) << 52);
    double x = java.lang.Double.longBitsToDouble(bits);
    if (negate) {
        x = -x;
    } 
    return x;
}
11:32:41.901 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:41.912 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:41.955 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:41.962 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:42.379 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:42.379 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (417 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:42.381 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:42.382 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:42.382 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:42.383 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2369
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:42.383 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:42.383 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:42.383 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2369 otherwise the patch would be "true" or "false"
11:32:42.383 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2369, Suspiciousness=0.22360679774997896]
11:32:42.383 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2374, Suspiciousness=0.22360679774997896]
11:32:42.383 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:42,383 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:42.389 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:42.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:42.454 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:42.454 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2374.
11:32:42.454 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2374, Suspiciousness=0.22360679774997896]
11:32:42.454 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2375, Suspiciousness=0.22360679774997896]
11:32:42.454 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:42,454 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:42.460 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:42.474 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:42.525 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:42.525 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2375.
11:32:42.525 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2375, Suspiciousness=0.22360679774997896]
11:32:42.525 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2377, Suspiciousness=0.22360679774997896]
11:32:42.525 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:42,525 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:42.531 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:42.545 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:42.588 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:42.588 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:42,612 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:42,612 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:42,735 DEBUG spoon.support.StandardEnvironment - built in 123 ms
2015-02-28 11:32:42,735 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:42,736 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:42.736 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:42,736 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:42.739 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (negate) {
    x = -x;
} 
11:32:42.742 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:42.752 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:42.794 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:42.802 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:43.201 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:43.201 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (400 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:43.203 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:43.205 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:43.205 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:43.205 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:2377
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:43.205 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<Infinity>]
11:32:43.205 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:43.205 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:2377 otherwise the patch would be "true" or "false"
11:32:43.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2377, Suspiciousness=0.22360679774997896]
11:32:43.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2381, Suspiciousness=0.22360679774997896]
11:32:43.205 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:43,205 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:43.209 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:43.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:43.255 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:2381.
11:32:43.255 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=2381, Suspiciousness=0.22360679774997896]
11:32:43.255 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1229, Suspiciousness=0.2182178902359924]
11:32:43.256 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:43,256 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:43.260 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:43.269 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.312 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:43.312 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:43,327 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:43,328 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:43,447 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:43,448 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:43,448 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:43.448 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:43,448 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:43.453 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b.exp = a.exp ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b.exp = a.exp;
}
11:32:43.453 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b.exp = a.exp ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b.exp = a.exp;
    
}
11:32:43.455 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:43.465 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.507 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:43.515 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:43.919 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:43.919 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (404 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:43.921 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:43.923 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:43.923 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:43.923 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1229
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:43.923 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:43.923 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:43.923 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1229 otherwise the patch would be "true" or "false"
11:32:43.923 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1229, Suspiciousness=0.2182178902359924]
11:32:43.923 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=213, Suspiciousness=0.2182178902359924]
11:32:43.924 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:43,924 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:43.926 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:43.928 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.945 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:43.945 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:213.
11:32:43.945 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=213, Suspiciousness=0.2182178902359924]
11:32:43.945 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=215, Suspiciousness=0.2182178902359924]
11:32:43.945 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:43,945 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:43.947 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:43.949 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.966 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:43.966 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpMath:215.
11:32:43.966 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=215, Suspiciousness=0.2182178902359924]
11:32:43.966 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=217, Suspiciousness=0.2182178902359924]
11:32:43.966 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:43,966 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:43.968 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:43.970 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:43.986 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:43.987 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:44,002 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:44,002 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/DfpMath.java]
2015-02-28 11:32:44,064 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 11:32:44,064 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:44,064 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:44.065 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.DfpMath]
2015-02-28 11:32:44,065 DEBUG spoon.support.StandardEnvironment - processing 'DfpMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:44.070 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (a == 0) {
    return result;
} 
11:32:44.071 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.DfpMath]
11:32:44.074 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:44.095 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
11:32:44.103 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:44.509 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:44.509 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (406 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:44.511 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:44.513 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:44.513 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:44.513 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.DfpMath:217
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:44.513 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:44.513 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:44.513 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.DfpMath:217 otherwise the patch would be "true" or "false"
11:32:44.513 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpMath, LineNumber=217, Suspiciousness=0.2182178902359924]
11:32:44.513 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=414, Suspiciousness=0.2182178902359924]
11:32:44.513 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.DfpField]
2015-02-28 11:32:44,513 DEBUG spoon.support.StandardEnvironment - processing 'DfpField' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:44.514 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.DfpField]
11:32:44.519 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:44.533 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:44.534 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.DfpField:414.
11:32:44.534 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.DfpField, LineNumber=414, Suspiciousness=0.2182178902359924]
11:32:44.534 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=660, Suspiciousness=0.2182178902359924]
11:32:44.534 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:44,534 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:44.538 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:44.547 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:44.583 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:44.583 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.dfp.Dfp:660.
11:32:44.583 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=660, Suspiciousness=0.2182178902359924]
11:32:44.583 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1095, Suspiciousness=0.21320071635561041]
11:32:44.583 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:44,583 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:44.587 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:44.597 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:44.632 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:44.632 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:44,648 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:44,648 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:44,777 DEBUG spoon.support.StandardEnvironment - built in 129 ms
2015-02-28 11:32:44,777 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:44,778 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:44.778 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:44,778 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:44.781 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((mant[((mant.length) - 1)]) > 1000) {
    return ((exp) * 4) - 1;
} 
11:32:44.783 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:44.794 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:44.835 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:44.842 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:45.227 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:45.227 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (385 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:45.229 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:45.231 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:45.231 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:45.231 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1095
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:45.231 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:45.232 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:45.232 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1095 otherwise the patch would be "true" or "false"
11:32:45.232 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1095, Suspiciousness=0.21320071635561041]
11:32:45.232 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1098, Suspiciousness=0.21320071635561041]
11:32:45.232 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:45,232 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:45.236 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:45.245 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:45.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:45.281 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:45,296 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:45,296 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:45,421 DEBUG spoon.support.StandardEnvironment - built in 125 ms
2015-02-28 11:32:45,421 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:45,421 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:45.422 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:45,422 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:45.425 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((mant[((mant.length) - 1)]) > 100) {
    return ((exp) * 4) - 2;
} 
11:32:45.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:45.436 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:45.476 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:45.484 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:45.890 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:45.891 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (407 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:45.893 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:45.894 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:45.894 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:45.895 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1098
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:45.895 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:45.895 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:45.895 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1098 otherwise the patch would be "true" or "false"
11:32:45.895 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1098, Suspiciousness=0.21320071635561041]
11:32:45.895 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1101, Suspiciousness=0.21320071635561041]
11:32:45.895 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:45,895 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:45.899 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:45.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:45.943 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:45.943 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:45,959 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:45,959 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:46,078 DEBUG spoon.support.StandardEnvironment - built in 119 ms
2015-02-28 11:32:46,078 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:46,078 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:46.078 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:46,079 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:46.081 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((mant[((mant.length) - 1)]) > 10) {
    return ((exp) * 4) - 3;
} 
11:32:46.084 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:46.094 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:46.142 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:46.149 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:46.556 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:46.556 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (407 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:46.558 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:46.560 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:46.560 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:46.560 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1101
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:46.560 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:46.560 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:46.561 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1101 otherwise the patch would be "true" or "false"
11:32:46.561 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1101, Suspiciousness=0.21320071635561041]
11:32:46.561 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=726, Suspiciousness=0.20851441405707477]
11:32:46.561 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:46,561 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:46.565 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:46.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:46.609 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:46.609 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:46,624 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:46,625 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:46,744 DEBUG spoon.support.StandardEnvironment - built in 119 ms
2015-02-28 11:32:46,744 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:46,744 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:46.744 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:46,745 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:46.747 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### inexact = true ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    inexact = true;
}
11:32:46.748 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### inexact = true ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        inexact = true;
    
}
11:32:46.750 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:46.760 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:46.800 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:46.808 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:57.741 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:57.742 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10934 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:57.744 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:57.746 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:57.746 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:57.746 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:726
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:57.746 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:57.746 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:57.746 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:726 otherwise the patch would be "true" or "false"
11:32:57.747 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=726, Suspiciousness=0.20851441405707477]
11:32:57.747 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=738, Suspiciousness=0.20851441405707477]
11:32:57.747 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:57,747 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:57.751 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:57.760 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:57.795 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:57.795 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:57,810 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:57,811 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:57,930 DEBUG spoon.support.StandardEnvironment - built in 119 ms
2015-02-28 11:32:57,931 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:57,931 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:57.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:57,932 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:57.935 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
}
11:32:57.935 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
}
11:32:57.937 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:57.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:57.986 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:57.994 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:58.613 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:58.614 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (619 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:58.616 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:58.618 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:58.618 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:58.618 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:738
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:58.618 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:58.618 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:58.618 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:738 otherwise the patch would be "true" or "false"
11:32:58.619 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=738, Suspiciousness=0.20851441405707477]
11:32:58.619 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=739, Suspiciousness=0.20851441405707477]
11:32:58.619 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:58,619 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:58.623 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:58.632 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:58.666 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:58.667 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:58,682 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:58,682 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:58,802 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:58,802 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:58,802 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:58.803 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:58,803 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:58.806 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this) ##### Before:
{
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
}
11:32:58.806 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this) ##### After:
{
    field.setIEEEFlagsBits(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("diff",diff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("adiff",adiff);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("inexact",inexact);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("e",e);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lostdigit",lostdigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        dotrap(org.apache.commons.math.dfp.DfpField.FLAG_INEXACT, org.apache.commons.math.dfp.Dfp.ALIGN_TRAP, this, this);
    
}
11:32:58.809 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:58.819 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:58.859 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:58.867 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:59.460 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:32:59.460 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (594 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:59.463 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:32:59.464 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:32:59.464 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:32:59.465 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:739
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:32:59.465 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:59.465 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:32:59.465 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:739 otherwise the patch would be "true" or "false"
11:32:59.465 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=739, Suspiciousness=0.20851441405707477]
11:32:59.465 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1240, Suspiciousness=0.20412414523193154]
11:32:59.465 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:59,465 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:32:59.469 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:59.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:59.518 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:59.518 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:59,533 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:59,533 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:32:59,653 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-02-28 11:32:59,653 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:32:59,653 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:32:59.654 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:32:59,654 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:32:59.658 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### aextradigit = a.align(b.exp) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    aextradigit = a.align(b.exp);
}
11:32:59.658 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### aextradigit = a.align(b.exp) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rsign",rsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bextradigit",bextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("asign",asign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("aextradigit",aextradigit);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bsign",bsign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        aextradigit = a.align(b.exp);
    
}
11:32:59.660 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:32:59.670 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:32:59.710 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:32:59.719 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:33:00.184 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:33:00.184 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (466 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:33:00.187 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:33:00.188 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:33:00.189 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:33:00.189 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1240
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:33:00.189 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:33:00.189 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:33:00.189 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1240 otherwise the patch would be "true" or "false"
11:33:00.189 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1240, Suspiciousness=0.20412414523193154]
11:33:00.189 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1504, Suspiciousness=0.20412414523193154]
11:33:00.189 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:33:00,189 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:33:00.193 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:33:00.202 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:33:00.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:33:00.237 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:00,252 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:00,253 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:00,371 DEBUG spoon.support.StandardEnvironment - built in 118 ms
2015-02-28 11:33:00,371 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:33:00,371 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:33:00.372 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:33:00,372 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:33:00.378 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = dotrap(excp, org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP, x, result) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("product",product);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    result = dotrap(excp, org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP, x, result);
}
11:33:00.378 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### result = dotrap(excp, org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP, x, result) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.sign",x.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.field",x.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.exp",x.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("product",product);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.mant",x.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x.nans",x.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        result = dotrap(excp, org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP, x, result);
    
}
11:33:00.379 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:33:00.389 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:33:00.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:33:00.438 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:33:01.288 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
11:33:01.288 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (851 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:33:01.290 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
11:33:01.292 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
11:33:01.292 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:33:01.292 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.dfp.Dfp:1504
[testIssue567(org.apache.commons.math.dfp.DfpTest)]
11:33:01.292 [main] DEBUG tests.output - First set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:33:01.292 [main] DEBUG tests.output - Second set: 
[testIssue567(org.apache.commons.math.dfp.DfpTest): expected:<0.0> but was:<-Infinity>]
11:33:01.293 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.dfp.Dfp:1504 otherwise the patch would be "true" or "false"
11:33:01.293 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1504, Suspiciousness=0.20412414523193154]
11:33:01.293 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1696, Suspiciousness=0.20412414523193154]
11:33:01.293 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:33:01,293 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
11:33:01.297 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:33:01.306 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:33:01.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:33:01.340 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:01,356 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:01,356 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 11:33:01,474 DEBUG spoon.support.StandardEnvironment - built in 118 ms
2015-02-28 11:33:01,475 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 11:33:01,475 DEBUG spoon.support.StandardEnvironment - built in 0 ms
11:33:01.475 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 11:33:01,475 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
11:33:01.491 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### max = trial - 1 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    max = trial - 1;
    continue;
}
11:33:01.492 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### max = trial - 1 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        max = trial - 1;
    
    continue;
}
11:33:01.500 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
11:33:01.509 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
11:33:01.549 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
11:33:01.557 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
12:33:01.550 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
12:33:01.551 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.dfp.Dfp, LineNumber=1697, Suspiciousness=0.20412414523193154]
12:33:01.551 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 12:33:01,551 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
12:33:01.555 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.dfp.Dfp]
12:33:01.564 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
12:33:01.599 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
12:33:01.599 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 12:33:01,614 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 12:33:01,615 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_54/target/classes/:/tmp/math_54/target/test-classes/:/tmp/math_54/lib/commons-discovery-0.5.jar:/tmp/math_54/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_54/src/main/java/org/apache/commons/math/dfp/Dfp.java]
2015-02-28 12:33:01,733 DEBUG spoon.support.StandardEnvironment - built in 118 ms
2015-02-28 12:33:01,734 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 12:33:01,734 DEBUG spoon.support.StandardEnvironment - built in 0 ms
12:33:01.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.dfp.Dfp]
2015-02-28 12:33:01,734 DEBUG spoon.support.StandardEnvironment - processing 'Dfp' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
12:33:01.750 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### continue ##### Before:
{
    max = trial - 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    continue;
}
12:33:01.750 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### continue ##### After:
{
    max = trial - 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.nans",divisor.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nsqd",nsqd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("quotient",quotient);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.RADIX",org.apache.commons.math.dfp.Dfp.RADIX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.QNAN",org.apache.commons.math.dfp.Dfp.QNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rh",rh);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP",org.apache.commons.math.dfp.Dfp.DIVIDE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ERR_SCALE",org.apache.commons.math.dfp.Dfp.ERR_SCALE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NAN_STRING",org.apache.commons.math.dfp.Dfp.NAN_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("remainder",remainder);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.nans",org.apache.commons.math.dfp.Dfp.this.nans);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.INFINITE",org.apache.commons.math.dfp.Dfp.INFINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("md",md);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.field",divisor.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.TRUNC_TRAP",org.apache.commons.math.dfp.Dfp.TRUNC_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.mant",org.apache.commons.math.dfp.Dfp.this.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MAX_EXP",org.apache.commons.math.dfp.Dfp.MAX_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.field",org.apache.commons.math.dfp.Dfp.this.field);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("trial",trial);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP",org.apache.commons.math.dfp.Dfp.GREATER_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.exp",divisor.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.NEG_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.sign",divisor.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.sign",org.apache.commons.math.dfp.Dfp.this.sign);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.FINITE",org.apache.commons.math.dfp.Dfp.FINITE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP",org.apache.commons.math.dfp.Dfp.LESS_THAN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ADD_TRAP",org.apache.commons.math.dfp.Dfp.ADD_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MIN_EXP",org.apache.commons.math.dfp.Dfp.MIN_EXP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP",org.apache.commons.math.dfp.Dfp.NEW_INSTANCE_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dividend",dividend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.mant",divisor.mant);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP",org.apache.commons.math.dfp.Dfp.MULTIPLY_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("qd",qd);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SNAN",org.apache.commons.math.dfp.Dfp.SNAN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING",org.apache.commons.math.dfp.Dfp.POS_INFINITY_STRING);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.this.exp",org.apache.commons.math.dfp.Dfp.this.exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP",org.apache.commons.math.dfp.Dfp.NEXT_AFTER_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divMsb",divMsb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.SQRT_TRAP",org.apache.commons.math.dfp.Dfp.SQRT_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.dfp.Dfp.ALIGN_TRAP",org.apache.commons.math.dfp.Dfp.ALIGN_TRAP);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        continue;
    
}
12:33:01.752 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.dfp.Dfp]
12:33:01.761 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
12:33:01.801 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (2 classes)]
12:33:01.808 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
