org.jfree.data.general.SeriesException: You are attempting to add an observation for the time period 2009 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:520)
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:468)
	at org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:936)
	at org.jfree.data.time.junit.TimeSeriesTests.testCreateCopy3(TimeSeriesTests.java:605)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:1)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
org.jfree.data.general.SeriesException: You are attempting to add an observation for the time period 2010 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:520)
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:468)
	at org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:936)
	at org.jfree.data.time.junit.TimeSeriesTests.testCreateCopy3(TimeSeriesTests.java:605)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:1)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
org.jfree.data.general.SeriesException: You are attempting to add an observation for the time period 2009 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:520)
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:468)
	at org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:936)
	at org.jfree.data.time.junit.TimeSeriesTests.testCreateCopy3(TimeSeriesTests.java:605)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:1)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
org.jfree.data.general.SeriesException: You are attempting to add an observation for the time period 2010 but the series already contains an observation for that time period. Duplicates are not permitted.  Try using the addOrUpdate() method.
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:520)
	at org.jfree.data.time.TimeSeries.add(TimeSeries.java:468)
	at org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:936)
	at org.jfree.data.time.junit.TimeSeriesTests.testCreateCopy3(TimeSeriesTests.java:605)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:1)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:189)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:214)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:218)
	at fr.inria.lille.commons.spoon.util.SpoonElementLibrary.parentOfType(SpoonElementLibrary.java:52)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromStatement(CollectableValueFinder.java:83)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromIf(CollectableValueFinder.java:73)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.valueFinderFromIf(CollectableValueFinder.java:49)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.appendValueCollection(ConditionalLoggingInstrumenter.java:48)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:1)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:417)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:257)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:473)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:293)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:52)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:72)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:102)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
## OAR [2015-03-02 21:17:15] Job 1494055 KILLED
