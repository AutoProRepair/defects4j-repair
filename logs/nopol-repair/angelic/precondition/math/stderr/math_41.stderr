java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:189)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:214)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:218)
	at fr.inria.lille.commons.spoon.util.SpoonElementLibrary.parentOfType(SpoonElementLibrary.java:52)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromStatement(CollectableValueFinder.java:83)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromIf(CollectableValueFinder.java:73)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.valueFinderFromIf(CollectableValueFinder.java:49)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.appendValueCollection(ConditionalLoggingInstrumenter.java:48)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:1)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:417)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:257)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:416)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:257)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:473)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:293)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:52)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:72)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:102)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:189)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:214)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:218)
	at fr.inria.lille.commons.spoon.util.SpoonElementLibrary.parentOfType(SpoonElementLibrary.java:52)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromStatement(CollectableValueFinder.java:83)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromIf(CollectableValueFinder.java:73)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.valueFinderFromIf(CollectableValueFinder.java:49)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.appendValueCollection(ConditionalLoggingInstrumenter.java:48)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:1)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:417)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:257)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:416)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:257)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:473)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:293)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:137)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:52)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:72)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:102)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.IllegalArgumentException: File does not exist in: '/tmp/math_41/src/main/java/org/apache/commons/math/RetryRunner.java'
	at xxl.java.library.FileLibrary.fail(FileLibrary.java:129)
	at xxl.java.library.FileLibrary.openFrom(FileLibrary.java:29)
	at xxl.java.library.FileLibrary.fileFrom(FileLibrary.java:44)
	at fr.inria.lille.repair.nopol.SourceLocation.getSourceFile(SourceLocation.java:68)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:58)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:102)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.IllegalArgumentException: File does not exist in: '/tmp/math_41/src/main/java/org/apache/commons/math/RetryRunner.java'
	at xxl.java.library.FileLibrary.fail(FileLibrary.java:129)
	at xxl.java.library.FileLibrary.openFrom(FileLibrary.java:29)
	at xxl.java.library.FileLibrary.fileFrom(FileLibrary.java:44)
	at fr.inria.lille.repair.nopol.SourceLocation.getSourceFile(SourceLocation.java:68)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:58)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:102)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(BigDecimal.java:470)
	at java.math.BigDecimal.<init>(BigDecimal.java:739)
	at java.math.BigDecimal.valueOf(BigDecimal.java:1069)
	at xxl.java.library.StringLibrary.plainDecimalRepresentation(StringLibrary.java:192)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.decimal(ObjectToExpr.java:58)
	at fr.inria.lille.commons.synthesis.smt.ObjectToExpr.asIExpr(ObjectToExpr.java:43)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExpr(SMTLib.java:230)
	at fr.inria.lille.commons.synthesis.smt.SMTLib.asIExprs(SMTLib.java:224)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.asSMTExpressions(Constraint.java:133)
	at fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint.instantiatedArguments(VerificationConstraint.java:50)
	at fr.inria.lille.commons.synthesis.smt.constraint.Constraint.invocationWithValues(Constraint.java:79)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.addVerificationAssertions(SynthesisScriptBuilder.java:70)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.assertionsFor(SynthesisScriptBuilder.java:49)
	at fr.inria.lille.commons.synthesis.SynthesisScriptBuilder.scriptFrom(SynthesisScriptBuilder.java:35)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:79)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:103)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:80)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:50)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)

real	167m36.029s
user	176m58.116s
sys	0m17.097s
