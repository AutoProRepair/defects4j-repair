Running ant (compile) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------
    [mkdir] Created dir: /tmp/math_47/target
    [mkdir] Created dir: /tmp/math_47/target/classes
    [mkdir] Created dir: /tmp/math_47/target/test-classes
    [mkdir] Created dir: /tmp/math_47/target/classes/META-INF
     [copy] Copying 1 file to /tmp/math_47/target/classes/META-INF

compile:
    [javac] Compiling 568 source files to /tmp/math_47/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

BUILD SUCCESSFUL
Total time: 8 seconds
Running ant (compile.tests) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------

compile:

check-availability:
     [echo] doing check-availability...

download-dependencies:
     [echo] doing download-dependencies...

download-junit:

compile.tests:
    [javac] Compiling 333 source files to /tmp/math_47/target/test-classes
    [javac] Note: /tmp/math_47/src/test/java/org/apache/commons/math/linear/UnmodifiableRealVectorAbstractTest.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: /tmp/math_47/src/test/java/org/apache/commons/math/PerfTestUtils.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
     [copy] Copying 13 files to /tmp/math_47/target/test-classes

BUILD SUCCESSFUL
Total time: 7 seconds
19:02:04.530 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Building Spoon model from src/main/java]
2015-03-05 19:02:04,843 DEBUG spoon.support.StandardEnvironment - building sources: [src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/UnivariateDfpFunction.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java, src/main/java/org/apache/commons/math/filter/MeasurementModel.java, src/main/java/org/apache/commons/math/filter/KalmanFilter.java, src/main/java/org/apache/commons/math/filter/ProcessModel.java, src/main/java/org/apache/commons/math/filter/DefaultMeasurementModel.java, src/main/java/org/apache/commons/math/filter/DefaultProcessModel.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/ModelSpecificationException.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AllowedSolution.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/RealLinearOperator.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerBounds.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerMode.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/geometry/VectorFormat.java, src/main/java/org/apache/commons/math/geometry/Space.java, src/main/java/org/apache/commons/math/geometry/Vector.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractSubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Region.java, src/main/java/org/apache/commons/math/geometry/partitioning/Side.java, src/main/java/org/apache/commons/math/geometry/partitioning/Embedding.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTreeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/RegionFactory.java, src/main/java/org/apache/commons/math/geometry/partitioning/SubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundaryAttribute.java, src/main/java/org/apache/commons/math/geometry/partitioning/Hyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Characterization.java, src/main/java/org/apache/commons/math/geometry/partitioning/Transform.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundarySizeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/OrderedTuple.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Plane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Euclidean3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubPlane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/OutlineExtractor.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Euclidean2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/NestedLoops.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/SubOrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Interval.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Euclidean1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1D.java]
2015-03-05 19:02:04,981 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/UnivariateDfpFunction.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java, src/main/java/org/apache/commons/math/filter/MeasurementModel.java, src/main/java/org/apache/commons/math/filter/KalmanFilter.java, src/main/java/org/apache/commons/math/filter/ProcessModel.java, src/main/java/org/apache/commons/math/filter/DefaultMeasurementModel.java, src/main/java/org/apache/commons/math/filter/DefaultProcessModel.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/ModelSpecificationException.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AllowedSolution.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/RealLinearOperator.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerBounds.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerMode.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/geometry/VectorFormat.java, src/main/java/org/apache/commons/math/geometry/Space.java, src/main/java/org/apache/commons/math/geometry/Vector.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractSubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Region.java, src/main/java/org/apache/commons/math/geometry/partitioning/Side.java, src/main/java/org/apache/commons/math/geometry/partitioning/Embedding.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTreeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/RegionFactory.java, src/main/java/org/apache/commons/math/geometry/partitioning/SubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundaryAttribute.java, src/main/java/org/apache/commons/math/geometry/partitioning/Hyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Characterization.java, src/main/java/org/apache/commons/math/geometry/partitioning/Transform.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundarySizeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/OrderedTuple.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Plane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Euclidean3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubPlane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/OutlineExtractor.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Euclidean2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/NestedLoops.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/SubOrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Interval.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Euclidean1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1D.java]
2015-03-05 19:02:12,478 DEBUG spoon.support.StandardEnvironment - built in 7628 ms
2015-03-05 19:02:12,478 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:02:12,478 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - Test clasess:
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ConvergenceExceptionTest
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathConfigurationExceptionTest
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathExceptionTest
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.RetryRunnerTest
19:02:14.951 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.FunctionUtilsTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.GaussianTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.HarmonicOscillatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogisticTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogitTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.SigmoidTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.StepFunctionTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.RombergIntegratorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.SimpsonIntegratorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest
19:02:14.952 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BisectionSolverTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BrentSolverTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.IllinoisSolverTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.LaguerreSolverTest
19:02:14.953 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolver2Test
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.NewtonSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.PegasusSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.RiddersSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.SecantSolverTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFieldTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFormatTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexUtilsTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.FrenchComplexFormatTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpDecTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpMathTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpTest
19:02:14.954 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.AbtractIntegerDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BetaDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BinomialDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.CauchyDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ChiSquareDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ExponentialDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.FDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.GammaDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.HypergeometricDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.NormalDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PascalDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PoissonDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.TDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.WeibullDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ZipfDistributionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.DimensionMismatchExceptionTest
19:02:14.955 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.MaxCountExceededExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotPositiveExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooLargeExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooSmallExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.OutOfRangeExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.TooManyEvaluationsExceptionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ArgUtilsTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ExceptionContextTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.filter.KalmanFilterTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFieldTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFormatTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFieldTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFormatTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionTest
19:02:14.956 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryChromosomeTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryMutationTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ChromosomeTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ElitisticListPopulationTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FitnessCachingTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FixedGenerationCountTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestBinary
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ListPopulationTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.OnePointCrossoverTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyMutationTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.TournamentSelectionTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.LineTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.PlaneTest
19:02:14.957 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.RotationTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.SubLineTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.Vector3DTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.LineTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.SubLineTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.Array2DRowRealMatrixTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayFieldVectorTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayRealVectorTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BiDiagonalTransformerTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockFieldMatrixTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockRealMatrixTest
19:02:14.958 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskyDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskySolverTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenSolverTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldLUDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldMatrixImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FrenchRealVectorFormatTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUSolverTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixUtilsTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRSolverTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealVectorFormatTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealVectorTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueDecompositionImplTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueSolverTest
19:02:14.959 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldMatrixTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldVectorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealMatrixTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealVectorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.TriDiagonalTransformerTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ContinuousOutputModelTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.FirstOrderConverterTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.events.EventStateTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.events.OverlappingEventsTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest
19:02:14.960 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerIntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillIntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest
19:02:14.961 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerOutputTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.CMAESOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.PowellOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.CurveFitterTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.GaussianFitterTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.HarmonicFitterTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.PolynomialFitterTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest
19:02:14.962 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.MinpackTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexSolverTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexTableauTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BracketFinderTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BrentOptimizerTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.AbstractRandomGeneratorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.BitsStreamGeneratorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.EmpiricalDistributionTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.GaussianRandomGeneratorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.MersenneTwisterTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomAdaptorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomDataTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomGeneratorAbstractTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest
19:02:14.963 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UniformRandomGeneratorTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.ValueServerTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well1024aTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937aTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937cTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497aTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497bTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well512aTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.BetaTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.ErfTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.GammaTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.CertifiedDataTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.FrequencyTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.StatUtilsTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.CovarianceTest
19:02:14.964 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.PearsonsCorrelationTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.StorelessCovarianceTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LewTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LotteryTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.InteractionTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.ListUnivariateImplTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SummaryStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest
19:02:14.965 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FirstMomentTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FourthMomentTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.KurtosisTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.MeanTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SkewnessTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VarianceTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MaxTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MedianTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MinTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.PercentileTest
19:02:14.966 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.ProductTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumLogTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumSqTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.ChiSquareTestTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.MannWhitneyUTestTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.OneWayAnovaTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TTestTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TestUtilsTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.ranking.NaturalRankingTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.SimpleRegressionTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastCosineTransformerTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastFourierTransformerTest
19:02:14.967 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastHadamardTransformerTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastSineTransformerTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealFieldTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ContinuedFractionTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.DefaultTransformerTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathStrictComparisonTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTestPerformance
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.IncrementorTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MathUtilsTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MultidimensionalCounterTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToDoubleHashMapTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToFieldTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.PairTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ResizableDoubleArrayTest
19:02:14.968 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.TransformerMapTest
19:02:15.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - >>> Begin subprocess output
19:02:15.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.LaguerreSolverTest

19:02:15.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:02:15.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

19:02:16.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction

19:02:16.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

19:02:16.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction

19:02:16.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

19:02:16.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters

19:02:16.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)

19:02:16.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction

19:02:16.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

19:02:16.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest

19:02:16.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:02:16.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

19:02:16.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane

19:02:16.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

19:02:16.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions

19:02:16.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)

19:02:16.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid

19:02:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:02:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest

19:02:16.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:02:16.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization

19:02:16.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats

19:02:16.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString

19:02:16.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts

19:02:16.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions

19:02:16.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics

19:02:16.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension

19:02:16.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection

19:02:16.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState

19:02:16.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)

19:02:16.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode

19:02:16.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

19:02:16.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.OutOfRangeExceptionTest

19:02:16.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:02:16.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.OutOfRangeExceptionTest)

19:02:16.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors

19:02:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:02:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well44497aTest

19:02:16.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:02:16.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497aTest)

19:02:16.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode

19:02:16.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntDirect

19:02:18.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextFloatDirect

19:02:18.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBooleanDirect

19:02:18.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongDirect

19:02:18.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well44497aTest)

19:02:18.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBoolean2

19:02:18.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testFloatDirect

19:02:18.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well44497aTest)

19:02:18.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testDoubleDirect

19:02:18.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well44497aTest)

19:02:18.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong2

19:02:18.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well44497aTest)

19:02:18.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntIAE

19:02:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well44497aTest)

19:02:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntNeg

19:02:18.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well44497aTest)

19:02:18.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBytes

19:02:18.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well44497aTest)

19:02:18.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt2

19:02:18.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well44497aTest)

19:02:18.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPascal

19:02:18.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well44497aTest)

19:02:18.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSample

19:02:18.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well44497aTest)

19:02:18.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntExtremeValues

19:02:18.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well44497aTest)

19:02:18.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniformExclusiveEndpoints

19:02:18.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well44497aTest)

19:02:18.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGaussian

19:02:18.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well44497aTest)

19:02:18.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextF

19:02:18.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well44497aTest)

19:02:18.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextT

19:02:18.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well44497aTest)

19:02:18.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextChiSquare

19:02:18.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well44497aTest)

19:02:18.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureLong

19:02:18.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well44497aTest)

19:02:18.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureHex

19:02:18.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well44497aTest)

19:02:18.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureInt

19:02:18.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well44497aTest)

19:02:20.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoissonConsistency

19:02:20.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well44497aTest)

19:02:20.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHypergeometric

19:02:20.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well44497aTest)

19:02:20.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongExtremeValues

19:02:20.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well44497aTest)

19:02:20.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextExponential

19:02:20.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well44497aTest)

19:02:20.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoisson

19:02:20.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well44497aTest)

19:02:20.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniform

19:02:20.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well44497aTest)

19:02:20.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPermutation

19:02:20.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well44497aTest)

19:02:20.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBinomial

19:02:20.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well44497aTest)

19:02:20.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testConfig

19:02:20.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well44497aTest)

19:02:20.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInversionDeviate

19:02:20.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well44497aTest)

19:02:20.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHex

19:02:20.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well44497aTest)

19:02:20.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt

19:02:20.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well44497aTest)

19:02:20.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextCauchy

19:02:20.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well44497aTest)

19:02:20.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGamma

19:02:20.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well44497aTest)

19:02:20.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextWeibull

19:02:20.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well44497aTest)

19:02:20.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBeta

19:02:20.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well44497aTest)

19:02:20.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong

19:02:20.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well44497aTest)

19:02:20.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextZipf

19:02:20.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest

19:02:20.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:02:20.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive, DisplayName: testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)
19:02:20.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive
19:02:20.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative, DisplayName: testTestNegative(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)

19:02:20.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative

19:02:20.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.FDistributionTest

19:02:20.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:02:20.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom, DisplayName: testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom

19:02:20.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions

19:02:20.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes

19:02:20.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom, DisplayName: testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom

19:02:20.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts

19:02:20.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors

19:02:20.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:02:20.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities

19:02:20.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities

19:02:20.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling

19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities
19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments
19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.FDistributionTest)

19:02:20.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency

19:02:20.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionTest

19:02:20.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

19:02:20.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.FractionTest)

19:02:20.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue

19:02:20.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.FractionTest)
19:02:20.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs

19:02:20.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.FractionTest)

19:02:20.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd

19:02:20.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.FractionTest)
19:02:20.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract

19:02:20.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.fraction.FractionTest)

19:02:20.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.FractionTest)

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.FractionTest)

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.FractionTest)

19:02:20.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction

19:02:20.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.FractionTest)

19:02:20.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble

19:02:20.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.FractionTest)

19:02:20.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo

19:02:20.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.FractionTest)

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.FractionTest)

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.FractionTest)

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.FractionTest)

19:02:20.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue

19:02:20.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.FractionTest)

19:02:20.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide

19:02:20.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.FractionTest)

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.FractionTest)

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.FractionTest)

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate

19:02:20.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionTest)

19:02:20.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial

19:02:20.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.FractionTest)

19:02:20.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio

19:02:20.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow, DisplayName: testIntegerOverflow(org.apache.commons.math.fraction.FractionTest)

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.FractionTest)
19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.FractionTest)

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23

19:02:20.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.PegasusSolverTest

19:02:20.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:02:20.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionRightSide

19:02:20.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionAboveSide

19:02:20.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionBelowSide

19:02:20.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionLeftSide

19:02:20.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testBadEndpoints

19:02:20.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testRootEndpoints

19:02:20.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testQuinticZero

19:02:20.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

19:02:20.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSinZero

19:02:20.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8

19:02:20.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest

19:02:20.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:02:20.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetSubVector, DisplayName: testSetSubVector(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetSubVector

19:02:20.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetEntry

19:02:20.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testAllButExcluded, DisplayName: testAllButExcluded(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testAllButExcluded

19:02:20.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetSubVector, DisplayName: testGetSubVector(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetSubVector

19:02:20.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
19:02:20.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSparseIterator

19:02:20.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testIterator

19:02:20.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetEntry, DisplayName: testSetEntry(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)

19:02:20.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetEntry

19:02:20.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
19:02:20.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest

19:02:20.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:02:20.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testRepetition, DisplayName: testRepetition(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)

19:02:20.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testRepetition

19:02:20.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testNavigation, DisplayName: testNavigation(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)

19:02:20.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testNavigation

19:02:20.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testDelete1, DisplayName: testDelete1(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)

19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testDelete1

19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testInsert, DisplayName: testInsert(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)

19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testInsert

19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testSearch, DisplayName: testSearch(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)

19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testSearch
19:02:20.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:20.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

19:02:20.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest

19:02:20.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:02:20.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

19:02:20.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction

19:02:20.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

19:02:20.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction

19:02:20.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

19:02:20.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters

19:02:20.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)

19:02:20.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction
19:02:20.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 4
TestResult: 0
19:02:20.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.util.FastMathTestPerformance

19:02:20.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

19:02:20.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)

19:02:20.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.util.FastMathTestPerformance)

19:02:20.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - abs        1    1.0      5 4.8374      2 2.5449

19:02:20.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs

19:02:20.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.util.FastMathTestPerformance)
19:02:20.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:02:22.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cos       62    1.0     66 1.0627     46 0.7499
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos

19:02:22.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.util.FastMathTestPerformance)

19:02:24.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - exp       78    1.0     37 0.4800     71 0.9120
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp

19:02:24.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.FastMathTestPerformance)

19:02:26.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log       94    1.0     54 0.5814     28 0.3053
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog

19:02:26.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.FastMathTestPerformance)

19:02:32.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - pow      297    1.0    199 0.6714    101 0.3420
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow

19:02:32.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.util.FastMathTestPerformance)

19:02:33.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sin       57    1.0     65 1.1346     48 0.8383
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin

19:02:33.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.util.FastMathTestPerformance)

19:02:36.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tan       89    1.0    120 1.3525     65 0.7363
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan

19:02:36.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTestPerformance)

19:02:40.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan2    140    1.0    143 1.0245    139 0.9977
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2

19:02:40.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1, DisplayName: testExpm1(org.apache.commons.math.util.FastMathTestPerformance)

19:02:43.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - expm1     87    1.0    110 1.2558     89 1.0210
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1

19:02:43.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot, DisplayName: testHypot(org.apache.commons.math.util.FastMathTestPerformance)

19:03:00.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - hypot    812    1.0     48 0.0596    812 0.9997
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot

19:03:00.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.util.FastMathTestPerformance)

19:03:03.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log10    130    1.0    154 1.1860     28 0.2200
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10

19:03:03.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p, DisplayName: testLog1p(org.apache.commons.math.util.FastMathTestPerformance)

19:03:07.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log1p     95    1.0    165 1.7260    101 1.0646
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p
19:03:07.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.util.FastMathTestPerformance)

19:03:18.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - acos     451    1.0    205 0.4548    453 1.0046
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos

19:03:18.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.util.FastMathTestPerformance)

19:03:29.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - asin     459    1.0    191 0.4179    461 1.0044
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin

19:03:29.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.util.FastMathTestPerformance)

19:03:31.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan      73    1.0     94 1.2875     74 1.0244
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan

19:03:31.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt, DisplayName: testCbrt(org.apache.commons.math.util.FastMathTestPerformance)

19:03:35.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cbrt     126    1.0    100 0.7889    128 1.0149
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt

19:03:35.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.FastMathTestPerformance)

19:03:38.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cosh     129    1.0     91 0.7069    135 1.0432
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh

19:03:38.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.FastMathTestPerformance)

19:03:42.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sinh     142    1.0    107 0.7568    144 1.0188
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh

19:03:42.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.util.FastMathTestPerformance)

19:03:43.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sqrt       2    1.0     17 7.6664     13 5.9827
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt

19:03:43.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.util.FastMathTestPerformance)

19:03:47.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tanh     149    1.0    147 0.9860    151 1.0109
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh

19:03:47.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.BrentSolverTest

19:03:47.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:03:47.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)

19:03:47.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints

19:03:47.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)

19:03:47.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess

19:03:47.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)
19:03:47.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints
19:03:47.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)

19:03:47.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero

19:03:47.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)

19:03:47.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero

19:03:47.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest
19:03:47.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:03:47.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation, DisplayName: testWilcoxonSignedRankInputValidation(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)

19:03:47.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation

19:03:47.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple, DisplayName: testWilcoxonSignedRankSimple(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)

19:03:47.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple

19:03:47.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.OnePointCrossoverTest

19:03:47.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:47.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover, DisplayName: testCrossover(org.apache.commons.math.genetics.OnePointCrossoverTest)
19:03:47.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover

19:03:47.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest

19:03:47.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:47.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, MethodName: testName, DisplayName: testName(org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest)
19:03:47.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, MethodName: testName

19:03:47.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.SigmoidTest

19:03:47.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:47.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative

19:03:47.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues

19:03:47.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue

19:03:47.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.SigmoidTest)
19:03:47.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3

19:03:47.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4

19:03:47.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.SigmoidTest)

19:03:47.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments

19:03:47.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:03:47.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.BlockRealMatrixTest

19:03:47.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 48

19:03:47.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge

19:03:47.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge

19:03:47.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm

19:03:47.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate

19:03:47.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples

19:03:47.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry

19:03:47.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail

19:03:47.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge

19:03:47.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd

19:03:47.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd

19:03:47.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace

19:03:47.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm

19:03:47.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk

19:03:47.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockRealMatrixTest)
19:03:47.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString

19:03:47.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge

19:03:47.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge

19:03:47.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix

19:03:47.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks

19:03:47.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.967 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions

19:03:47.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix

19:03:47.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge

19:03:47.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector
19:03:47.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:47.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions

19:03:47.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix

19:03:47.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:47.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209

19:03:47.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge

19:03:48.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors

19:03:48.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)
19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn
19:03:48.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector

19:03:48.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply

19:03:48.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow

19:03:48.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode

19:03:48.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge

19:03:48.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial

19:03:48.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow

19:03:48.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose

19:03:48.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix

19:03:48.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply

19:03:48.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix

19:03:48.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector

19:03:48.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix

19:03:48.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)

19:03:48.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector

19:03:48.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 48
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.GaussianTest
19:03:48.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
19:03:48.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.GaussianTest)
19:03:48.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative

19:03:48.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN, DisplayName: testDerivativeNaN(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN

19:03:48.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues

19:03:48.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue

19:03:48.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.function.GaussianTest)
19:03:48.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2

19:03:48.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5

19:03:48.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments, DisplayName: testLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments

19:03:48.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.GaussianTest)

19:03:48.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient

19:03:48.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

19:03:48.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.TDistributionTest

19:03:48.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow, DisplayName: testCumulativeProbabilityAgaintStackOverflow(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow

19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions
19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: nistData, DisplayName: nistData(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: nistData

19:03:48.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts
19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors

19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:03:48.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf

19:03:48.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities

19:03:48.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities

19:03:48.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling

19:03:48.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities

19:03:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.TDistributionTest)
19:03:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments

19:03:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.TDistributionTest)

19:03:48.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency

19:03:48.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.FrequencyTest

19:03:48.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:48.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable, DisplayName: testEmptyTable(org.apache.commons.math.stat.FrequencyTest)

19:03:48.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable

19:03:48.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.stat.FrequencyTest)

19:03:48.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd

19:03:48.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts, DisplayName: testPcts(org.apache.commons.math.stat.FrequencyTest)

19:03:48.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts

19:03:48.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.FrequencyTest)

19:03:48.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString

19:03:48.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount, DisplayName: testGetUniqueCount(org.apache.commons.math.stat.FrequencyTest)

19:03:48.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount

19:03:48.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues, DisplayName: testIntegerValues(org.apache.commons.math.stat.FrequencyTest)

19:03:48.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues

19:03:48.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts, DisplayName: testCounts(org.apache.commons.math.stat.FrequencyTest)

19:03:48.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts

19:03:48.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.FrequencyTest)

19:03:48.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial

19:03:48.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:03:48.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest

19:03:48.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

19:03:48.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness, DisplayName: testIncreasingBandwidthIncreasesSmoothness(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness

19:03:48.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine, DisplayName: testOnStraightLine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine

19:03:48.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth, DisplayName: testInsufficientBandwidth(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth

19:03:48.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1, DisplayName: testNotAllFiniteReal1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2, DisplayName: testNotAllFiniteReal2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3, DisplayName: testNotAllFiniteReal3(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4, DisplayName: testNotAllFiniteReal4(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5, DisplayName: testNotAllFiniteReal5(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6, DisplayName: testNotAllFiniteReal6(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints, DisplayName: testOnTwoPoints(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData, DisplayName: testEmptyData(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1, DisplayName: testNonStrictlyIncreasing1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2, DisplayName: testNonStrictlyIncreasing2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2
19:03:48.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:48.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint, DisplayName: testOnOnePoint(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint

19:03:48.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1, DisplayName: testCompletelyIncorrectBandwidth1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1

19:03:48.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2, DisplayName: testCompletelyIncorrectBandwidth2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2

19:03:48.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, DisplayName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers

19:03:48.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine, DisplayName: testOnDistortedSine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine

19:03:48.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments, DisplayName: testUnequalSizeArguments(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments

19:03:48.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights, DisplayName: testMath296withoutWeights(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)

19:03:48.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights

19:03:48.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0

19:03:48.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest

19:03:48.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:48.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

19:03:48.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank

19:03:48.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance, DisplayName: testMeanAndCovariance(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

19:03:48.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance

19:03:48.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226, DisplayName: testMath226(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

19:03:48.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226

19:03:48.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix, DisplayName: testRootMatrix(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

19:03:48.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix

19:03:48.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
19:03:48.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumTest

19:03:48.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:03:48.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues

19:03:48.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum, DisplayName: testWeightedSum(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum

19:03:48.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples

19:03:48.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode

19:03:48.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency

19:03:48.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency

19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
19:03:48.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well19937cTest

19:03:48.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:03:48.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937cTest)

19:03:48.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode

19:03:48.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntDirect

19:03:49.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextFloatDirect

19:03:49.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBooleanDirect

19:03:49.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongDirect

19:03:49.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well19937cTest)

19:03:49.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBoolean2

19:03:49.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testFloatDirect

19:03:49.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well19937cTest)

19:03:49.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testDoubleDirect

19:03:49.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well19937cTest)

19:03:49.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong2

19:03:49.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well19937cTest)

19:03:49.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntIAE

19:03:49.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well19937cTest)

19:03:49.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntNeg

19:03:49.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well19937cTest)

19:03:49.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBytes

19:03:49.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well19937cTest)

19:03:49.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt2

19:03:49.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well19937cTest)

19:03:49.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPascal

19:03:49.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well19937cTest)

19:03:49.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSample

19:03:49.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well19937cTest)

19:03:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntExtremeValues

19:03:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well19937cTest)

19:03:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniformExclusiveEndpoints

19:03:49.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well19937cTest)

19:03:49.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGaussian

19:03:49.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well19937cTest)

19:03:49.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextF

19:03:49.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well19937cTest)

19:03:49.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextT

19:03:49.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well19937cTest)

19:03:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextChiSquare

19:03:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well19937cTest)

19:03:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureLong

19:03:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well19937cTest)

19:03:49.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureHex

19:03:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well19937cTest)

19:03:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureInt

19:03:49.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well19937cTest)

19:03:51.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoissonConsistency

19:03:51.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well19937cTest)

19:03:51.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHypergeometric

19:03:51.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well19937cTest)

19:03:51.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongExtremeValues

19:03:51.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well19937cTest)

19:03:51.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextExponential

19:03:51.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well19937cTest)

19:03:51.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoisson

19:03:51.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well19937cTest)

19:03:51.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniform

19:03:51.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well19937cTest)

19:03:51.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPermutation

19:03:51.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well19937cTest)

19:03:51.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBinomial

19:03:51.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well19937cTest)

19:03:51.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testConfig

19:03:51.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well19937cTest)

19:03:51.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInversionDeviate

19:03:51.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well19937cTest)

19:03:51.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHex

19:03:51.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well19937cTest)

19:03:51.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt

19:03:51.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well19937cTest)

19:03:51.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextCauchy

19:03:51.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well19937cTest)

19:03:51.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGamma

19:03:51.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well19937cTest)

19:03:51.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextWeibull

19:03:51.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well19937cTest)

19:03:51.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBeta

19:03:51.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well19937cTest)

19:03:51.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong

19:03:51.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well19937cTest)

19:03:51.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextZipf

19:03:51.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0

19:03:51.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionFieldTest

19:03:51.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:51.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.BigFractionFieldTest)

19:03:51.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne

19:03:51.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.BigFractionFieldTest)

19:03:51.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero

19:03:51.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionFieldTest)

19:03:51.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial

19:03:51.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:51.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.transform.FastSineTransformerTest

19:03:51.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:51.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastSineTransformerTest)

19:03:51.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData

19:03:51.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastSineTransformerTest)

19:03:51.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters

19:03:51.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastSineTransformerTest)

19:03:51.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction

19:03:51.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest
19:03:51.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:51.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration, DisplayName: testExactIntegration(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

19:03:51.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration

19:03:51.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

19:03:51.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction

19:03:51.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

19:03:51.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction
19:03:51.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testIssue464, DisplayName: testIssue464(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)

19:03:51.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testIssue464

19:03:51.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest
19:03:51.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:51.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

19:03:51.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters

19:03:51.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

19:03:51.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction

19:03:51.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)

19:03:51.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function

19:03:51.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.FastMathStrictComparisonTest
19:03:51.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 53

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0], DisplayName: test1[0](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0]

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1], DisplayName: test1[1](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1]

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2], DisplayName: test1[2](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2]

19:03:51.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3], DisplayName: test1[3](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3]

19:03:51.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4], DisplayName: test1[4](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4]

19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5], DisplayName: test1[5](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5]

19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6], DisplayName: test1[6](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6]
19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7], DisplayName: test1[7](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7]

19:03:51.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8], DisplayName: test1[8](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8]

19:03:51.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9], DisplayName: test1[9](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9]

19:03:51.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10], DisplayName: test1[10](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10]

19:03:51.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11], DisplayName: test1[11](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11]

19:03:51.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12], DisplayName: test1[12](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12]

19:03:51.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13], DisplayName: test1[13](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13]

19:03:51.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14], DisplayName: test1[14](org.apache.commons.math.util.FastMathStrictComparisonTest)
19:03:51.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14]

19:03:51.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15], DisplayName: test1[15](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15]

19:03:51.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16], DisplayName: test1[16](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16]

19:03:51.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17], DisplayName: test1[17](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17]

19:03:51.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18], DisplayName: test1[18](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18]

19:03:51.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19], DisplayName: test1[19](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19]

19:03:51.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20], DisplayName: test1[20](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20]

19:03:51.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21], DisplayName: test1[21](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21]

19:03:51.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22], DisplayName: test1[22](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22]

19:03:51.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23], DisplayName: test1[23](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23]

19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24], DisplayName: test1[24](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24]

19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25], DisplayName: test1[25](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25]
19:03:51.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26], DisplayName: test1[26](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26]

19:03:51.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27], DisplayName: test1[27](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27]

19:03:51.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28], DisplayName: test1[28](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28]

19:03:51.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29], DisplayName: test1[29](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29]

19:03:51.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30], DisplayName: test1[30](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30]

19:03:51.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31], DisplayName: test1[31](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31]

19:03:51.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32], DisplayName: test1[32](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32]

19:03:51.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33], DisplayName: test1[33](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33]

19:03:51.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34], DisplayName: test1[34](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34]

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35], DisplayName: test1[35](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35]

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36], DisplayName: test1[36](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36]
19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37], DisplayName: test1[37](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37]
19:03:51.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38], DisplayName: test1[38](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38]

19:03:51.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39], DisplayName: test1[39](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39]

19:03:51.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40], DisplayName: test1[40](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40]

19:03:51.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41], DisplayName: test1[41](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41]

19:03:51.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42], DisplayName: test1[42](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42]

19:03:51.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43], DisplayName: test1[43](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43]
19:03:51.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44], DisplayName: test1[44](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44]

19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45], DisplayName: test1[45](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45]

19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46], DisplayName: test1[46](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46]
19:03:51.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47], DisplayName: test1[47](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47]

19:03:51.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48], DisplayName: test1[48](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48]

19:03:51.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49], DisplayName: test1[49](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49]

19:03:51.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50], DisplayName: test1[50](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50]

19:03:51.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51], DisplayName: test1[51](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51]

19:03:51.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52], DisplayName: test1[52](org.apache.commons.math.util.FastMathStrictComparisonTest)

19:03:51.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52]

19:03:51.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 53
TestResult: 0
19:03:51.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.SingularValueSolverTest

19:03:51.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:03:51.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.SingularValueSolverTest)

19:03:51.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.SingularValueSolverTest)

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors
19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueSolverTest)

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve, DisplayName: testLeastSquareSolve(org.apache.commons.math.linear.SingularValueSolverTest)

19:03:51.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve

19:03:51.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B, DisplayName: testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)

19:03:51.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B

19:03:51.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

19:03:51.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.PlaneTest

19:03:51.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:03:51.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection2, DisplayName: testIntersection2(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)

19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection2

19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection3, DisplayName: testIntersection3(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection3

19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testPoint, DisplayName: testPoint(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testPoint

19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testThreePoints, DisplayName: testThreePoints(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testThreePoints

19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testContains

19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection
19:03:51.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testOffset, DisplayName: testOffset(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)

19:03:51.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testOffset

19:03:51.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testRotate, DisplayName: testRotate(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)

19:03:51.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testRotate

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testSimilar, DisplayName: testSimilar(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testSimilar
19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testTranslate, DisplayName: testTranslate(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testTranslate
19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

19:03:51.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.FrenchComplexFormatTest

19:03:51.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 31

19:03:51.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
19:03:51.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary

19:03:51.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat

19:03:51.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals

19:03:51.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary

19:03:51.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar
19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber
19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan

19:03:51.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc

19:03:51.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat

19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth

19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal
19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:51.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat

19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity

19:03:52.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testTrimOneImaginary, DisplayName: testTrimOneImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testTrimOneImaginary

19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity
19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar

19:03:52.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex

19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals
19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal
19:03:52.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth

19:03:52.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal

19:03:52.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary

19:03:52.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals

19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity

19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter

19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal
19:03:52.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan

19:03:52.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals
19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 31

19:03:52.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest

19:03:52.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:03:52.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetSubVector, DisplayName: testSetSubVector(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetSubVector

19:03:52.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetEntry

19:03:52.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testAllButExcluded, DisplayName: testAllButExcluded(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testAllButExcluded

19:03:52.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetSubVector, DisplayName: testGetSubVector(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetSubVector

19:03:52.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSparseIterator

19:03:52.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testIterator

19:03:52.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetEntry, DisplayName: testSetEntry(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)

19:03:52.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetEntry

19:03:52.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
19:03:52.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.transform.FastCosineTransformerTest

19:03:52.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:52.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastCosineTransformerTest)

19:03:52.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData

19:03:52.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastCosineTransformerTest)

19:03:52.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters

19:03:52.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastCosineTransformerTest)

19:03:52.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction

19:03:52.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.ArrayRealVectorTest
19:03:52.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 22

19:03:52.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineMixedTypes, DisplayName: testCombineMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineMixedTypes

19:03:52.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors

19:03:52.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc

19:03:52.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors

19:03:52.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionMixedType, DisplayName: testCombinePreconditionMixedType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionMixedType

19:03:52.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions

19:03:52.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfSameType, DisplayName: testCombineToSelfSameType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfSameType

19:03:52.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionSameType, DisplayName: testCombinePreconditionSameType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionSameType

19:03:52.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfMixedTypes, DisplayName: testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfMixedTypes

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineSameType, DisplayName: testCombineSameType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineSameType

19:03:52.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions

19:03:52.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine, DisplayName: testCosine(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine

19:03:52.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1, DisplayName: testCosinePrecondition1(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1

19:03:52.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2, DisplayName: testCosinePrecondition2(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2

19:03:52.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3, DisplayName: testCosinePrecondition3(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3

19:03:52.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionSameType, DisplayName: testCombineToSelfPreconditionSameType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionSameType

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testOuterProduct

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionMixedType, DisplayName: testCombineToSelfPreconditionMixedType(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionMixedType

19:03:52.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayRealVectorTest)

19:03:52.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial

19:03:52.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 22

19:03:52.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest

19:03:52.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:52.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

19:03:52.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment

19:03:52.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

19:03:52.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments
19:03:52.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:52.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

19:03:52.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear

19:03:52.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)

19:03:52.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment

19:03:52.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpTest

19:03:52.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 25

19:03:52.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.dfp.DfpTest)

19:03:52.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd

19:03:52.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor, DisplayName: testFloor(org.apache.commons.math.dfp.DfpTest)

19:03:52.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor

19:03:52.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.dfp.DfpTest)

19:03:52.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10

19:03:52.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpTest)

19:03:52.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound

19:03:52.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil, DisplayName: testCeil(org.apache.commons.math.dfp.DfpTest)

19:03:52.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil

19:03:52.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint, DisplayName: testRint(org.apache.commons.math.dfp.DfpTest)

19:03:52.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint

19:03:52.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.dfp.DfpTest)

19:03:52.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt

19:03:52.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.dfp.DfpTest)

19:03:52.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString

19:03:52.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt, DisplayName: testDivideInt(org.apache.commons.math.dfp.DfpTest)

19:03:52.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt

19:03:52.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSignPredicates, DisplayName: testSignPredicates(org.apache.commons.math.dfp.DfpTest)

19:03:52.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSignPredicates

19:03:52.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10, DisplayName: testPower10(org.apache.commons.math.dfp.DfpTest)

19:03:52.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10

19:03:52.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign, DisplayName: testCopySign(org.apache.commons.math.dfp.DfpTest)

19:03:52.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign

19:03:52.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare, DisplayName: testCompare(org.apache.commons.math.dfp.DfpTest)

19:03:52.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare

19:03:52.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor, DisplayName: testByteConstructor(org.apache.commons.math.dfp.DfpTest)

19:03:52.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor

19:03:52.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.dfp.DfpTest)

19:03:52.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue

19:03:52.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.dfp.DfpTest)

19:03:52.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide

19:03:52.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.dfp.DfpTest)

19:03:52.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply

19:03:52.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567, DisplayName: testIssue567(org.apache.commons.math.dfp.DfpTest)

19:03:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567

19:03:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIsZero, DisplayName: testIsZero(org.apache.commons.math.dfp.DfpTest)

19:03:52.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIsZero

19:03:52.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor, DisplayName: testIntConstructor(org.apache.commons.math.dfp.DfpTest)

19:03:52.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor

19:03:52.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K, DisplayName: testLog10K(org.apache.commons.math.dfp.DfpTest)

19:03:52.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K

19:03:52.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder, DisplayName: testRemainder(org.apache.commons.math.dfp.DfpTest)

19:03:52.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder

19:03:52.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K, DisplayName: testPower10K(org.apache.commons.math.dfp.DfpTest)
* Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K
* Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor, DisplayName: testLongConstructor(org.apache.commons.math.dfp.DfpTest)
* Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor
* Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpTest)
* Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter
Number of testcases executed : 25
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.RandomKeyTest

19:03:52.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:03:52.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation, DisplayName: testRandomPermutation(org.apache.commons.math.genetics.RandomKeyTest)

19:03:52.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation

19:03:52.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation, DisplayName: testInducedPermutation(org.apache.commons.math.genetics.RandomKeyTest)

19:03:52.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation

19:03:53.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation, DisplayName: testIdentityPermutation(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation

19:03:53.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1, DisplayName: testConstructor1(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1
19:03:53.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2, DisplayName: testConstructor2(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2

19:03:53.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInvalidRepresentation, DisplayName: testInvalidRepresentation(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInvalidRepresentation

19:03:53.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation, DisplayName: testComparatorPermutation(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation

19:03:53.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode, DisplayName: testDecode(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode

19:03:53.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame

19:03:53.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr, DisplayName: testEqualRepr(org.apache.commons.math.genetics.RandomKeyTest)

19:03:53.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr

19:03:53.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest
19:03:53.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:53.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData

19:03:53.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency

19:03:53.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility

19:03:53.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero

19:03:53.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant

19:03:53.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency

19:03:53.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency

19:03:53.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)

19:03:53.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly

19:03:53.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:03:53.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.data.LotteryTest

19:03:53.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:53.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LotteryTest)
19:03:53.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues

19:03:53.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
19:03:53.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest

19:03:53.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:03:53.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples

19:03:53.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization

19:03:53.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation

19:03:53.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency

19:03:53.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode

19:03:53.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency

19:03:53.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation

19:03:53.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency
19:03:53.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.CurveFitterTest

19:03:53.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:53.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303, DisplayName: testMath303(org.apache.commons.math.optimization.fitting.CurveFitterTest)
19:03:53.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303

19:03:53.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304, DisplayName: testMath304(org.apache.commons.math.optimization.fitting.CurveFitterTest)

19:03:53.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304
19:03:53.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372, DisplayName: testMath372(org.apache.commons.math.optimization.fitting.CurveFitterTest)

19:03:53.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372

19:03:53.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

19:03:53.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.FirstOrderConverterTest

19:03:53.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:53.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)

19:03:53.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep

19:03:53.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension, DisplayName: testDoubleDimension(org.apache.commons.math.ode.FirstOrderConverterTest)

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension

19:03:53.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpDecTest

19:03:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpDecTest)
19:03:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound

19:03:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10, DisplayName: testRoundDecimal10(org.apache.commons.math.dfp.DfpDecTest)

19:03:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10

19:03:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpDecTest)

19:03:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter

19:03:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

19:03:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathExceptionTest

19:03:53.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:53.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.MathExceptionTest)

19:03:53.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization

19:03:53.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathExceptionTest)

19:03:53.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause

19:03:53.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace, DisplayName: testPrintStackTrace(org.apache.commons.math.MathExceptionTest)

19:03:53.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace

19:03:53.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathExceptionTest)

19:03:53.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor

19:03:53.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
19:03:53.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest

19:03:53.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:53.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation, DisplayName: testMeanAndCorrelation(org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest)

19:03:53.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation

19:03:53.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

19:03:53.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillIntegratorTest

19:03:53.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:53.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck

19:03:53.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward

19:03:53.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep

19:03:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps

19:03:53.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep

19:03:53.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative

19:03:53.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler

19:03:53.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)

19:03:53.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize

19:03:53.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
19:03:53.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.RombergIntegratorTest
19:03:53.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:53.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

19:03:53.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters

19:03:53.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

19:03:53.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction

19:03:53.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)

19:03:53.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction

19:03:53.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:53.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest

19:03:53.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:03:53.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testFasterThanNewton, DisplayName: testFasterThanNewton(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testFasterThanNewton

19:03:53.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConvergenceOnFunctionAccuracy, DisplayName: testConvergenceOnFunctionAccuracy(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConvergenceOnFunctionAccuracy

19:03:53.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder1, DisplayName: testInsufficientOrder1(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder1
19:03:53.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder2, DisplayName: testInsufficientOrder2(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder2

19:03:53.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder3, DisplayName: testInsufficientOrder3(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder3

19:03:53.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConstructorsOK, DisplayName: testConstructorsOK(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConstructorsOK

19:03:53.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionRightSide

19:03:53.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionAboveSide

19:03:53.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionBelowSide

19:03:53.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionLeftSide

19:03:53.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testBadEndpoints
19:03:53.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:53.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testRootEndpoints

19:03:53.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testQuinticZero

19:03:53.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)

19:03:53.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSinZero

19:03:53.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

19:03:53.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.MultidimensionalCounterTest

19:03:53.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:03:53.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency, DisplayName: testIterationConsistency(org.apache.commons.math.util.MultidimensionalCounterTest)

19:03:53.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency

19:03:53.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions, DisplayName: testIteratorPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)

19:03:53.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions

19:03:53.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.util.MultidimensionalCounterTest)

19:03:53.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors

19:03:53.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion, DisplayName: testMulti2UniConversion(org.apache.commons.math.util.MultidimensionalCounterTest)

19:03:53.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion

19:03:53.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)

19:03:53.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions

19:03:53.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
19:03:53.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexFieldTest

19:03:53.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:53.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.complex.ComplexFieldTest)

19:03:53.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne

19:03:53.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.complex.ComplexFieldTest)

19:03:53.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero

19:03:53.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexFieldTest)

19:03:53.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial

19:03:53.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
19:03:53.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest

19:03:53.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:03:53.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D, DisplayName: testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)

19:03:53.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D

19:03:53.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D, DisplayName: testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)

19:03:54.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D

19:03:54.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:03:54.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.DefaultTransformerTest

19:03:54.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:03:54.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble, DisplayName: testTransformDouble(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble

19:03:54.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal, DisplayName: testTransformBigDecimal(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal

19:03:54.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject, DisplayName: testTransformObject(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject

19:03:54.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString, DisplayName: testTransformString(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString

19:03:54.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger, DisplayName: testTransformInteger(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger

19:03:54.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull, DisplayName: testTransformNull(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull

19:03:54.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.DefaultTransformerTest)

19:03:54.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial

19:03:54.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7

19:03:54.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.LogitTest

19:03:54.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:03:54.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative

19:03:54.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues

19:03:54.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue

19:03:54.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1

19:03:54.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2

19:03:54.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3

19:03:54.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4

19:03:54.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5

19:03:54.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments

19:03:54.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction, DisplayName: testDerivativeWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction

19:03:54.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction, DisplayName: testValueWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)

19:03:54.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction

19:03:54.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.NotPositiveExceptionTest
19:03:54.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotPositiveExceptionTest)

19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors
19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest
19:03:54.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:03:54.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testIssue631, DisplayName: testIssue631(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testIssue631

19:03:54.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionRightSide

19:03:54.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionAboveSide

19:03:54.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionBelowSide

19:03:54.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionLeftSide

19:03:54.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testBadEndpoints

19:03:54.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testRootEndpoints

19:03:54.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testQuinticZero

19:03:54.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)

19:03:54.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSinZero

19:03:54.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

19:03:54.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest

19:03:54.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:54.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

19:03:54.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic

19:03:54.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

19:03:54.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats

19:03:54.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

19:03:54.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch

19:03:54.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

19:03:54.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial

19:03:54.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:03:54.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumSqTest

19:03:54.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:03:54.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues

19:03:54.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples

19:03:54.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization

19:03:54.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation

19:03:54.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency

19:03:54.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode

19:03:54.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency

19:03:54.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial

19:03:54.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy

19:03:54.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation

19:03:54.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

19:03:54.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency

19:03:54.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

19:03:54.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexUtilsTest

19:03:54.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:54.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf, DisplayName: testPolar2ComplexInf(org.apache.commons.math.complex.ComplexUtilsTest)

19:03:54.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf

19:03:54.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN, DisplayName: testPolar2ComplexNaN(org.apache.commons.math.complex.ComplexUtilsTest)

19:03:54.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN

19:03:54.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus, DisplayName: testPolar2ComplexIllegalModulus(org.apache.commons.math.complex.ComplexUtilsTest)

19:03:54.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus

19:03:54.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex, DisplayName: testPolar2Complex(org.apache.commons.math.complex.ComplexUtilsTest)

19:03:54.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex

19:03:54.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

19:03:54.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest

19:03:54.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:54.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConvergenceOnFunctionAccuracy, DisplayName: testConvergenceOnFunctionAccuracy(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)

19:03:54.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConvergenceOnFunctionAccuracy

19:03:54.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testNeta, DisplayName: testNeta(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)

19:03:54.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testNeta

19:03:54.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testInsufficientOrder3, DisplayName: testInsufficientOrder3(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)

19:03:54.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testInsufficientOrder3

19:03:54.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConstructorOK, DisplayName: testConstructorOK(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)

19:03:54.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConstructorOK

19:03:54.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:03:54.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest

19:03:54.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:03:54.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison, DisplayName: testfirstDerivativeComparison(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison

19:03:54.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic

19:03:54.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication, DisplayName: testMultiplication(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication

19:03:54.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition, DisplayName: testAddition(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition

19:03:54.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants

19:03:54.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic, DisplayName: testQuintic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic

19:03:54.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341, DisplayName: testMath341(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341

19:03:54.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear, DisplayName: testLinear(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear

19:03:54.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial

19:03:54.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString, DisplayName: testString(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString

19:03:54.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction, DisplayName: testSubtraction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)

19:03:54.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction
19:03:54.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
19:03:54.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.SparseRealVectorTest

19:03:54.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:03:54.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc

19:03:54.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors

19:03:54.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions

19:03:54.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut

19:03:54.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates

19:03:54.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConcurrentModification

19:03:54.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions

19:03:54.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testOuterProduct
19:03:54.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealVectorTest)

19:03:54.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial

19:03:54.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
19:03:54.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SparseFieldMatrixTest
19:03:54.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24

19:03:54.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate

19:03:54.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples

19:03:54.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry

19:03:54.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail

19:03:54.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd

19:03:54.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd

19:03:54.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace

19:03:54.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus

19:03:54.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2

19:03:54.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions

19:03:54.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix

19:03:54.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector

19:03:54.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions

19:03:54.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209

19:03:54.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors

19:03:54.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix

19:03:54.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector

19:03:54.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.594 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply

19:03:54.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode

19:03:54.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose

19:03:54.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply

19:03:54.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix

19:03:54.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix

19:03:54.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseFieldMatrixTest)

19:03:54.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector

19:03:54.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
TestResult: 0
19:03:54.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.fraction.FractionFormatTest

19:03:54.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18

19:03:54.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat

19:03:54.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative

19:03:54.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat

19:03:54.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper

19:03:54.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper

19:03:54.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative

19:03:54.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse

19:03:54.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat

19:03:54.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero
19:03:54.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative

19:03:54.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator

19:03:54.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat

19:03:54.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus

19:03:54.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger

19:03:54.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid

19:03:54.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat

19:03:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat

19:03:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.FractionFormatTest)

19:03:54.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative

19:03:54.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0
19:03:54.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.special.ErfTest

19:03:54.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:03:54.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.special.ErfTest)
19:03:54.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues

19:03:54.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960, DisplayName: testErf1960(org.apache.commons.math.special.ErfTest)

19:03:54.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960

19:03:54.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576, DisplayName: testErf2576(org.apache.commons.math.special.ErfTest)

19:03:54.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807, DisplayName: testErf2807(org.apache.commons.math.special.ErfTest)

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291, DisplayName: testErf3291(org.apache.commons.math.special.ErfTest)

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu, DisplayName: testErfcGnu(org.apache.commons.math.special.ErfTest)

19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu
19:03:54.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple, DisplayName: testErfcMaple(org.apache.commons.math.special.ErfTest)

19:03:54.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple

19:03:54.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0, DisplayName: testErf0(org.apache.commons.math.special.ErfTest)

19:03:54.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0

19:03:54.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testTwoArgumentErf, DisplayName: testTwoArgumentErf(org.apache.commons.math.special.ErfTest)

19:03:54.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testTwoArgumentErf

19:03:54.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu, DisplayName: testErfGnu(org.apache.commons.math.special.ErfTest)

19:03:54.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu

19:03:54.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
19:03:54.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest

19:03:54.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:54.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

19:03:54.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean

19:03:54.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

19:03:54.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats

19:03:54.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

19:03:54.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions

19:03:54.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

19:03:54.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis

19:03:54.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
19:03:54.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest

19:03:54.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:54.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest)

19:03:54.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting

19:03:54.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:03:54.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.BetaTest

19:03:54.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:03:54.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive, DisplayName: testRegularizedBetaPositiveNanPositive(org.apache.commons.math.special.BetaTest)

19:03:54.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive

19:03:54.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive, DisplayName: testRegularizedBetaPositivePositivePositive(org.apache.commons.math.special.BetaTest)

19:03:54.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive

19:03:54.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative, DisplayName: testRegularizedBetaPositivePositiveNegative(org.apache.commons.math.special.BetaTest)

19:03:54.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative

19:03:54.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive, DisplayName: testRegularizedBetaPositiveZeroPositive(org.apache.commons.math.special.BetaTest)

19:03:54.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive

19:03:54.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive, DisplayName: testLogBetaPositivePositive(org.apache.commons.math.special.BetaTest)

19:03:54.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative, DisplayName: testLogBetaPositiveNegative(org.apache.commons.math.special.BetaTest)

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan, DisplayName: testLogBetaPositiveNan(org.apache.commons.math.special.BetaTest)

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive, DisplayName: testRegularizedBetaNegativePositivePositive(org.apache.commons.math.special.BetaTest)

19:03:54.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive

19:03:54.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan, DisplayName: testRegularizedBetaPositivePositiveNan(org.apache.commons.math.special.BetaTest)

19:03:54.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan

19:03:54.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive, DisplayName: testLogBetaZeroPositive(org.apache.commons.math.special.BetaTest)
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive
19:03:54.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero, DisplayName: testRegularizedBetaPositivePositiveZero(org.apache.commons.math.special.BetaTest)
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero
19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive, DisplayName: testRegularizedBetaPositiveNegativePositive(org.apache.commons.math.special.BetaTest)

19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive

19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive, DisplayName: testLogBetaNanPositive(org.apache.commons.math.special.BetaTest)

19:03:54.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive

19:03:54.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive, DisplayName: testLogBetaNegativePositive(org.apache.commons.math.special.BetaTest)

19:03:54.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive

19:03:54.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero, DisplayName: testLogBetaPositiveZero(org.apache.commons.math.special.BetaTest)
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero
19:03:54.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive, DisplayName: testRegularizedBetaZeroPositivePositive(org.apache.commons.math.special.BetaTest)

19:03:54.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive

19:03:54.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive, DisplayName: testRegularizedBetaNanPositivePositive(org.apache.commons.math.special.BetaTest)

19:03:54.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive

19:03:54.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0

19:03:54.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest

19:03:54.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:03:54.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot, DisplayName: testSolveNoRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot
19:03:54.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin, DisplayName: testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin

19:03:54.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction, DisplayName: testNullFunction(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction
19:03:54.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin, DisplayName: testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin

19:03:54.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy, DisplayName: testSolveBadAccuracy(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy

19:03:54.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc
19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull, DisplayName: testSolveNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull

19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin, DisplayName: testBracketSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin

19:03:54.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial, DisplayName: testBadInitial(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial

19:03:54.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations, DisplayName: testBadMaximumIterations(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot, DisplayName: testBracketEndpointRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull, DisplayName: testSolveAccuracyNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull

19:03:54.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints, DisplayName: testSolveBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)

19:03:54.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints

19:03:54.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
19:03:54.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.LUSolverTest

19:03:54.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:03:54.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.LUSolverTest)

19:03:54.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve

19:03:54.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold, DisplayName: testThreshold(org.apache.commons.math.linear.LUSolverTest)

19:03:54.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold

19:03:54.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.LUSolverTest)

19:03:54.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant

19:03:54.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.LUSolverTest)

19:03:54.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors

19:03:54.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors, DisplayName: testSolveSingularityErrors(org.apache.commons.math.linear.LUSolverTest)

19:03:54.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors

19:03:54.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUSolverTest)

19:03:54.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular
19:03:54.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

19:03:54.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.CholeskySolverTest

19:03:54.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:54.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.CholeskySolverTest)

19:03:54.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve

19:03:54.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.CholeskySolverTest)

19:03:54.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant

19:03:54.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.CholeskySolverTest)

19:03:54.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors

19:03:54.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
19:03:54.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.solvers.SecantSolverTest

19:03:54.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:54.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionRightSide

19:03:54.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionAboveSide

19:03:54.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionBelowSide

19:03:54.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionLeftSide

19:03:54.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints

19:03:54.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints

19:03:54.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero

19:03:54.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)

19:03:54.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero

19:03:54.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
19:03:54.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.complex.ComplexTest

19:03:54.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 116

19:03:54.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf, DisplayName: testNthRoot_cornercase_NAN_Inf(org.apache.commons.math.complex.ComplexTest)

19:03:54.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf

19:03:54.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf, DisplayName: testTanhInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf

19:03:54.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN, DisplayName: testTanhNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN, DisplayName: testConjugateNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideInf, DisplayName: testScalarDivideInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideInf

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideNaN, DisplayName: testScalarDivideNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideNaN

19:03:54.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf, DisplayName: testScalarMultiplyInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf

19:03:54.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN, DisplayName: testScalarMultiplyNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN

19:03:54.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary, DisplayName: testDivideImaginary(org.apache.commons.math.complex.ComplexTest)

19:03:54.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary

19:03:54.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf, DisplayName: testAcosInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf

19:03:54.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN, DisplayName: testAcosNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN

19:03:54.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass, DisplayName: testEqualsClass(org.apache.commons.math.complex.ComplexTest)

19:03:54.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass

19:03:54.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.complex.ComplexTest)

19:03:54.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs

19:03:54.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.complex.ComplexTest)

19:03:54.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd

19:03:54.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.complex.ComplexTest)

19:03:54.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos

19:03:54.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.complex.ComplexTest)

19:03:54.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp

19:03:54.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.complex.ComplexTest)

19:03:54.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog

19:03:54.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.complex.ComplexTest)

19:03:54.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow

19:03:54.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.complex.ComplexTest)

19:03:54.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin

19:03:54.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.complex.ComplexTest)

19:03:54.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan

19:03:54.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.complex.ComplexTest)

19:03:54.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract

19:03:54.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.complex.ComplexTest)

19:03:54.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAdd

19:03:54.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPow, DisplayName: testScalarPow(org.apache.commons.math.complex.ComplexTest)

19:03:54.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPow

19:03:54.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf, DisplayName: testDivideNaNInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf

19:03:54.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanI, DisplayName: testAtanI(org.apache.commons.math.complex.ComplexTest)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.5493061443340549)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.6749633584745077)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.7331685343967135)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.8047189562170501)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.8958797346140276)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 1.0184409636305198)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 1.1989476363991853)
19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
(-1.5707963267948966, 1.522261218861711)
19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
(NaN, NaN)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 1.4722194895832204)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 1.0986122886681098)

19:03:54.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.8673005276940532)

19:03:54.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.6931471805599453)

19:03:54.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)

19:03:54.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.3095196042031116)

19:03:54.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.2027325540540821)

19:03:54.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.10033534773107562)

19:03:54.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null

19:03:54.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4Cla
19:03:54.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ssRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testAtanI

19:03:54.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanI

19:03:54.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.complex.ComplexTest)

19:03:54.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos

19:03:54.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.complex.ComplexTest)

19:03:54.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin

19:03:54.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.complex.ComplexTest)

19:03:54.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan

19:03:54.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.complex.ComplexTest)

19:03:54.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh

19:03:54.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.complex.ComplexTest)

19:03:54.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.complex.ComplexTest)

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf, DisplayName: testAsinInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN, DisplayName: testAsinNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN

19:03:54.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf, DisplayName: testAtanInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf

19:03:54.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN, DisplayName: testAtanNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN

19:03:54.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddInf, DisplayName: testScalarAddInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddInf

19:03:54.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddNaN, DisplayName: testScalarAddNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddNaN

19:03:54.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowZero, DisplayName: testScalarPowZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowZero

19:03:54.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivide, DisplayName: testScalarDivide(org.apache.commons.math.complex.ComplexTest)

19:03:54.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivide

19:03:54.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInf, DisplayName: testDivideInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInf

19:03:54.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN, DisplayName: testDivideNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN

19:03:54.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference, DisplayName: testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)

19:03:54.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference

19:03:54.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN, DisplayName: testNegateNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN

19:03:54.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical, DisplayName: testTanhCritical(org.apache.commons.math.complex.ComplexTest)

19:03:54.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical

19:03:54.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero, DisplayName: testPowZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero

19:03:54.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowInf, DisplayName: testScalarPowInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowInf

19:03:54.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply, DisplayName: testScalarMultiply(org.apache.commons.math.complex.ComplexTest)

19:03:54.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply

19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero, DisplayName: testSqrtImaginaryZero(org.apache.commons.math.complex.ComplexTest)
19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero

19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive, DisplayName: testSqrtRealPositive(org.apache.commons.math.complex.ComplexTest)

19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive

19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull, DisplayName: testEqualsNull(org.apache.commons.math.complex.ComplexTest)

19:03:54.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull

19:03:54.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame, DisplayName: testEqualsSame(org.apache.commons.math.complex.ComplexTest)

19:03:54.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame

19:03:54.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue, DisplayName: testEqualsTrue(org.apache.commons.math.complex.ComplexTest)

19:03:54.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN, DisplayName: testSqrt1zNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative, DisplayName: testSqrtRealNegative(org.apache.commons.math.complex.ComplexTest)

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNBase, DisplayName: testScalarPowNaNBase(org.apache.commons.math.complex.ComplexTest)

19:03:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNBase

19:03:54.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument, DisplayName: testGetArgument(org.apache.commons.math.complex.ComplexTest)

19:03:54.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument

19:03:54.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar, DisplayName: testSqrtPolar(org.apache.commons.math.complex.ComplexTest)

19:03:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar

19:03:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN, DisplayName: testMultiplyNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN

19:03:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero, DisplayName: testLogZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero

19:03:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate, DisplayName: testConjugate(org.apache.commons.math.complex.ComplexTest)

19:03:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate

19:03:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot, DisplayName: testNthRoot_normal_fourthRoot(org.apache.commons.math.complex.ComplexTest)

19:03:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf, DisplayName: testMultiplyNaNInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference, DisplayName: testEqualsImaginaryDifference(org.apache.commons.math.complex.ComplexTest)

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractInf, DisplayName: testScalarSubtractInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractInf

19:03:54.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractNaN, DisplayName: testScalarSubtractNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractNaN

19:03:54.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical, DisplayName: testTanCritical(org.apache.commons.math.complex.ComplexTest)

19:03:54.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase, DisplayName: testPowNaNBase(org.apache.commons.math.complex.ComplexTest)

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221, DisplayName: testMath221(org.apache.commons.math.complex.ComplexTest)

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, DisplayName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math.complex.ComplexTest)

19:03:54.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty

19:03:54.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf, DisplayName: testGetArgumentInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf

19:03:54.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN, DisplayName: testGetArgumentNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN, DisplayName: testConstructorNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf, DisplayName: testCoshInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN

19:03:54.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent, DisplayName: testPowNaNExponent(org.apache.commons.math.complex.ComplexTest)

19:03:54.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent

19:03:54.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode, DisplayName: testHashCode(org.apache.commons.math.complex.ComplexTest)

19:03:54.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero, DisplayName: testSqrtRealZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative, DisplayName: testSqrtImaginaryNegative(org.apache.commons.math.complex.ComplexTest)

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero, DisplayName: testNthRoot_cornercase_thirdRoot_realPartZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero

19:03:54.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideZero, DisplayName: testScalarDivideZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideZero

19:03:54.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtract, DisplayName: testScalarSubtract(org.apache.commons.math.complex.ComplexTest)

19:03:54.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtract

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN, DisplayName: testAbsNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInf, DisplayName: testAddInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInf

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN, DisplayName: testAddNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN

19:03:54.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf, DisplayName: testCosInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf

19:03:54.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN, DisplayName: testCosNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.complex.ComplexTest)

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf, DisplayName: testExpInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN, DisplayName: testExpNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN

19:03:54.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.complex.ComplexTest)

19:03:54.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply

19:03:54.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal, DisplayName: testDivideReal(org.apache.commons.math.complex.ComplexTest)

19:03:54.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal

19:03:54.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero, DisplayName: testDivideZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>

19:03:54.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.run
19:03:54.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testDivideZero

19:03:54.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero

19:03:54.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN, DisplayName: testEqualsNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN

19:03:54.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf, DisplayName: testLogInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN, DisplayName: testLogNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.complex.ComplexTest)

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf, DisplayName: testPowInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf

19:03:54.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite, DisplayName: testConjugateInfiinite(org.apache.commons.math.complex.ComplexTest)

19:03:54.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite

19:03:54.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf, DisplayName: testSinhInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf

19:03:54.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN

19:03:54.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexTest)

19:03:54.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial

19:03:54.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf, DisplayName: testSinInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf

19:03:54.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN, DisplayName: testSinNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN

19:03:54.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z, DisplayName: testSqrt1z(org.apache.commons.math.complex.ComplexTest)

19:03:54.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z

19:03:54.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf, DisplayName: testTanInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf

19:03:54.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN, DisplayName: testTanNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN

19:03:54.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot, DisplayName: testNthRoot_normal_thirdRoot(org.apache.commons.math.complex.ComplexTest)

19:03:54.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot

19:03:54.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull, DisplayName: testpowNull(org.apache.commons.math.complex.ComplexTest)

19:03:54.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull

19:03:54.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractInf, DisplayName: testSubtractInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractInf

19:03:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN, DisplayName: testSubtractNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN

19:03:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite, DisplayName: testAbsInfinite(org.apache.commons.math.complex.ComplexTest)

19:03:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite

19:03:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf, DisplayName: testSqrtInf(org.apache.commons.math.complex.ComplexTest)

19:03:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf

19:03:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN, DisplayName: testSqrtNaN(org.apache.commons.math.complex.ComplexTest)

19:03:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN

19:03:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZeroZero, DisplayName: testDivideZeroZero(org.apache.commons.math.complex.ComplexTest)

19:03:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZeroZero

19:03:54.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.complex.ComplexTest)

19:03:54.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor

19:03:54.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNExponent, DisplayName: testScalarPowNaNExponent(org.apache.commons.math.complex.ComplexTest)

19:03:54.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNExponent

19:03:54.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 116
TestResult: 1

19:03:54.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.PairTest

19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.PairTest)
19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor

19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals, DisplayName: testEquals(org.apache.commons.math.util.PairTest)

19:03:54.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals

19:03:54.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
19:03:54.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest

19:03:54.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:03:54.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

19:03:54.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial

19:03:54.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
* Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck

19:03:54.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

19:03:54.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep

19:03:54.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

19:03:54.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations

19:03:54.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

19:03:54.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance

19:03:54.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)

19:03:54.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward

19:03:54.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
19:03:54.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpMathTest
19:03:54.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:03:54.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.dfp.DfpMathTest)

19:03:54.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow

19:03:54.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.dfp.DfpMathTest)

19:03:54.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin

19:03:54.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MinTest

19:03:54.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:03:54.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs

19:03:54.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues

19:03:54.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MinTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples
19:03:54.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:54.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.994 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode

19:03:54.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency

19:03:54.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)

19:03:54.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency

19:03:54.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:03:54.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.BinaryChromosomeTest

19:03:54.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:54.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor, DisplayName: testInvalidConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)

19:03:54.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor

19:03:54.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.BinaryChromosomeTest)

19:03:54.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame

19:03:54.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor, DisplayName: testRandomConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)

19:03:54.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor

19:03:55.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:55.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.GammaTest

19:03:55.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:03:55.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma, DisplayName: testTrigamma(org.apache.commons.math.special.GammaTest)

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive, DisplayName: testLogGammaPositive(org.apache.commons.math.special.GammaTest)

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative, DisplayName: testLogGammaNegative(org.apache.commons.math.special.GammaTest)

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative

19:03:55.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive, DisplayName: testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)

19:03:55.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive

19:03:55.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative, DisplayName: testRegularizedGammaPositiveNegative(org.apache.commons.math.special.GammaTest)

19:03:55.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative

19:03:55.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan, DisplayName: testLogGammaNan(org.apache.commons.math.special.GammaTest)

19:03:55.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs, DisplayName: testDigammaLargeArgs(org.apache.commons.math.special.GammaTest)

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive, DisplayName: testRegularizedGammaNanPositive(org.apache.commons.math.special.GammaTest)

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive, DisplayName: testRegularizedGammaZeroPositive(org.apache.commons.math.special.GammaTest)

19:03:55.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive

19:03:55.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero, DisplayName: testLogGammaZero(org.apache.commons.math.special.GammaTest)

19:03:55.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero

19:03:55.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs, DisplayName: testDigammaSmallArgs(org.apache.commons.math.special.GammaTest)

19:03:55.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs

19:03:55.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive, DisplayName: testRegularizedGammaNegativePositive(org.apache.commons.math.special.GammaTest)

19:03:55.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive

19:03:55.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan, DisplayName: testRegularizedGammaPositiveNan(org.apache.commons.math.special.GammaTest)

19:03:55.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan

19:03:55.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero, DisplayName: testRegularizedGammaPositiveZero(org.apache.commons.math.special.GammaTest)

19:03:55.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero

19:03:55.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

19:03:55.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.ChromosomeTest

19:03:55.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:03:55.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome, DisplayName: testFindSameChromosome(org.apache.commons.math.genetics.ChromosomeTest)
19:03:55.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:55.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome

19:03:55.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.genetics.ChromosomeTest)

19:03:55.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo

19:03:55.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:03:55.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest

19:03:55.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:03:55.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds, DisplayName: interpolationAtBounds(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

19:03:55.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds

19:03:55.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

19:03:55.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency

19:03:55.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside, DisplayName: interpolationInside(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

19:03:55.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside

19:03:55.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

19:03:55.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization

19:03:55.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset, DisplayName: noReset(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)

19:03:55.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset

19:03:55.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.ResizableDoubleArrayTest

19:03:55.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:03:55.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements, DisplayName: testAddElements(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements
19:03:55.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:55.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000, DisplayName: testAdd1000(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000

19:03:55.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute, DisplayName: testSubstitute(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute

19:03:55.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors

19:03:55.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling, DisplayName: testAddElementRolling(org.apache.commons.math.util.ResizableDoubleArrayTest)
19:03:55.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:55.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling

19:03:55.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor, DisplayName: testWithInitialCapacityAndExpansionFactor(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor

19:03:55.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements, DisplayName: testSetNumberOfElements(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements

19:03:55.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity, DisplayName: testWithInitialCapacity(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity

19:03:55.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard, DisplayName: testDiscard(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard
19:03:55.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:55.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode

19:03:55.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators, DisplayName: testMutators(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion, DisplayName: testSetElementArbitraryExpansion(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.util.ResizableDoubleArrayTest)

19:03:55.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax

19:03:55.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0

19:03:55.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.FunctionUtilsTest

19:03:55.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:03:55.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector, DisplayName: testCollector(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector

19:03:55.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments, DisplayName: testFixingArguments(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments

19:03:55.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd

19:03:55.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc, DisplayName: testSinc(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc

19:03:55.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine, DisplayName: testCombine(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine

19:03:55.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose

19:03:55.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.analysis.FunctionUtilsTest)

19:03:55.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply

19:03:55.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0

19:03:55.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest

19:03:55.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:55.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest)

19:03:55.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors

19:03:55.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:03:55.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.ContinuedFractionTest

19:03:55.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:55.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.util.ContinuedFractionTest)

19:03:55.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio

19:03:55.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:03:55.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.IncrementorTest

19:03:55.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:03:55.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount, DisplayName: testAboveMaxCount(org.apache.commons.math.util.IncrementorTest)

19:03:55.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount

19:03:55.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount, DisplayName: testBelowMaxCount(org.apache.commons.math.util.IncrementorTest)

19:03:55.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount

19:03:55.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.IncrementorTest)

19:03:55.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset, DisplayName: testReset(org.apache.commons.math.util.IncrementorTest)

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement, DisplayName: testBulkIncrement(org.apache.commons.math.util.IncrementorTest)

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

19:03:55.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest

19:03:55.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:55.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

19:03:55.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency

19:03:55.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

19:03:55.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone

19:03:55.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

19:03:55.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization

19:03:55.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.BitsStreamGeneratorTest
19:03:55.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:55.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41

19:03:55.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntDirect

19:03:56.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextFloatDirect

19:03:56.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBooleanDirect

19:03:56.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongDirect

19:03:56.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBoolean2

19:03:56.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testFloatDirect

19:03:56.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testDoubleDirect

19:03:56.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong2

19:03:56.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntIAE

19:03:56.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntNeg

19:03:56.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBytes

19:03:56.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt2

19:03:56.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPascal

19:03:56.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSample

19:03:56.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntExtremeValues

19:03:56.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniformExclusiveEndpoints

19:03:56.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGaussian

19:03:56.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextF

19:03:56.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextT

19:03:56.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:56.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextChiSquare

19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.BitsStreamGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureLong
19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.BitsStreamGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureHex
19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.BitsStreamGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureInt
19:03:56.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:56.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoissonConsistency

19:03:57.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHypergeometric

19:03:57.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongExtremeValues

19:03:57.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextExponential

19:03:57.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoisson

19:03:57.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniform

19:03:57.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPermutation

19:03:57.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBinomial

19:03:57.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testConfig

19:03:57.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInversionDeviate

19:03:57.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHex

19:03:57.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt

19:03:57.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextCauchy

19:03:57.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGamma

19:03:57.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextWeibull

19:03:57.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBeta

19:03:57.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong

19:03:57.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.BitsStreamGeneratorTest)

19:03:57.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextZipf

19:03:57.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest
19:03:57.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:57.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

19:03:57.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeitherRev, DisplayName: testMulNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeitherRev

19:03:57.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeither, DisplayName: testIncNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeither

19:03:57.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLastRev, DisplayName: testMulLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLastRev

19:03:57.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBothRev, DisplayName: testMulBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBothRev

19:03:57.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirstRev, DisplayName: testIncFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirstRev

19:03:57.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirst, DisplayName: testIncFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirst

19:03:57.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBoth, DisplayName: testMulBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBoth

19:03:57.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLast, DisplayName: testMulLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLast

19:03:57.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeither, DisplayName: testMulNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeither

19:03:57.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLastRev, DisplayName: testIncLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLastRev

19:03:57.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirst, DisplayName: testMulFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirst

19:03:57.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBothRev, DisplayName: testIncBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBothRev

19:03:57.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirstRev, DisplayName: testMulFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirstRev

19:03:57.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBoth, DisplayName: testIncBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBoth

19:03:57.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLast, DisplayName: testIncLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLast

19:03:57.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeitherRev, DisplayName: testIncNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)

19:03:57.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeitherRev

19:03:57.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.BisectionSolverTest

19:03:57.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:57.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369, DisplayName: testMath369(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

19:03:57.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369

19:03:57.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

19:03:57.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero

19:03:57.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)

19:03:57.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero

19:03:57.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:57.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionTest

19:03:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24

19:03:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue

19:03:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs

19:03:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd

19:03:57.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow

19:03:57.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract

19:03:57.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal

19:03:57.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor

19:03:57.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction

19:03:57.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble

19:03:57.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo

19:03:57.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor

19:03:57.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue

19:03:57.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340, DisplayName: testMath340(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340

19:03:57.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue

19:03:57.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor

19:03:57.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue

19:03:57.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide

19:03:57.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply

19:03:57.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode

19:03:57.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate

19:03:57.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial

19:03:57.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio

19:03:57.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue

19:03:57.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.BigFractionTest)

19:03:57.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor

19:03:57.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
TestResult: 0

19:03:57.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TestUtilsTest

19:03:57.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:03:57.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest

19:03:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence

19:03:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount

19:03:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples

19:03:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic

19:03:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic

19:03:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare

19:03:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT

19:03:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired

19:03:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic

19:03:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils, DisplayName: testOneWayAnovaUtils(org.apache.commons.math.stat.inference.TestUtilsTest)

19:03:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils

19:03:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
19:03:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.genetics.TournamentSelectionTest

19:03:57.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:57.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect, DisplayName: testSelect(org.apache.commons.math.genetics.TournamentSelectionTest)
19:03:57.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect

19:03:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:03:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.BetaDistributionTest

19:03:57.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:57.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BetaDistributionTest)

19:03:57.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts

19:03:57.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative, DisplayName: testCumulative(org.apache.commons.math.distribution.BetaDistributionTest)

19:03:57.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative

19:03:57.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.BetaDistributionTest)

19:03:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity

19:03:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations

19:03:57.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:03:57.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations)
19:03:57.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test

19:03:58.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest
19:03:58.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:03:58.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep, DisplayName: testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep

19:03:58.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck

19:03:58.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward

19:03:58.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps

19:03:58.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep

19:03:58.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents

19:03:58.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler

19:03:58.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)

19:03:58.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance

19:03:58.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest

19:03:58.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:03:58.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingGoodInit, DisplayName: testCircleFittingGoodInit(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingGoodInit

19:03:58.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency

19:03:58.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations

19:03:58.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial

19:03:58.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes1, DisplayName: testInconsistentSizes1(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes1

19:03:58.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes2, DisplayName: testInconsistentSizes2(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes2

19:03:58.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets

19:03:58.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple

19:03:58.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

19:03:58.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned

19:03:58.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation

19:03:58.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible

19:03:58.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations

19:03:58.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting

19:03:58.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet

19:03:58.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations, DisplayName: testMaxEvaluations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations

19:03:58.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)

19:03:58.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit

19:03:58.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0

19:03:58.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.Array2DRowRealMatrixTest

19:03:58.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 39

19:03:58.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm

19:03:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate

19:03:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples

19:03:58.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry

19:03:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail

19:03:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd

19:03:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd

19:03:58.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower

19:03:58.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace

19:03:58.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm

19:03:58.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk

19:03:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString

19:03:58.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix

19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus

19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector
19:03:58.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2

19:03:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions

19:03:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix

19:03:58.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector

19:03:58.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions

19:03:58.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix

19:03:58.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209

19:03:58.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors

19:03:58.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn

19:03:58.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix

19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn

19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector
19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply

19:03:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow

19:03:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode

19:03:58.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial

19:03:58.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow
19:03:58.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose

19:03:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix

19:03:58.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply

19:03:58.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix
19:03:58.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector

19:03:58.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix

19:03:58.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

19:03:58.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector

19:03:58.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 39
TestResult: 0

19:03:58.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.univariate.BracketFinderTest

19:03:58.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:03:58.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary, DisplayName: testMinimumIsOnIntervalBoundary(org.apache.commons.math.optimization.univariate.BracketFinderTest)

19:03:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary

19:03:58.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax, DisplayName: testCubicMax(org.apache.commons.math.optimization.univariate.BracketFinderTest)

19:03:58.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax

19:03:58.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin, DisplayName: testCubicMin(org.apache.commons.math.optimization.univariate.BracketFinderTest)

19:03:58.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin

19:03:58.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering, DisplayName: testIntervalBoundsOrdering(org.apache.commons.math.optimization.univariate.BracketFinderTest)

19:03:58.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering

19:03:58.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:03:58.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest

19:03:58.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:03:58.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)
19:03:58.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:03:58.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin

19:03:58.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction, DisplayName: testBadFunction(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)

19:03:58.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction

19:03:58.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)

19:03:58.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin

19:03:58.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:03:58.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest

19:03:58.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

19:03:58.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeitherRev, DisplayName: testMulNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeitherRev

19:03:58.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeither, DisplayName: testIncNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeither

19:03:58.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLastRev, DisplayName: testMulLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLastRev

19:03:58.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBothRev, DisplayName: testMulBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBothRev

19:03:58.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirstRev, DisplayName: testIncFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirstRev

19:03:58.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirst, DisplayName: testIncFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirst

19:03:58.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBoth, DisplayName: testMulBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBoth

19:03:58.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLast, DisplayName: testMulLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLast

19:03:58.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeither, DisplayName: testMulNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeither

19:03:58.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLastRev, DisplayName: testIncLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLastRev

19:03:58.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirst, DisplayName: testMulFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirst

19:03:58.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBothRev, DisplayName: testIncBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBothRev

19:03:58.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirstRev, DisplayName: testMulFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirstRev

19:03:58.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBoth, DisplayName: testIncBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBoth

19:03:58.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLast, DisplayName: testIncLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLast

19:03:58.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeitherRev, DisplayName: testIncNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)

19:03:58.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeitherRev

19:03:58.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well1024aTest

19:03:58.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:03:58.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well1024aTest)

19:03:58.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode

19:03:58.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntDirect

19:03:59.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextFloatDirect

19:03:59.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBooleanDirect

19:03:59.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongDirect

19:03:59.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well1024aTest)

19:03:59.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean2

19:03:59.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloatDirect

19:03:59.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well1024aTest)

19:03:59.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDoubleDirect

19:03:59.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well1024aTest)

19:03:59.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong2

19:03:59.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well1024aTest)

19:03:59.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntIAE

19:03:59.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well1024aTest)

19:03:59.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg

19:03:59.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well1024aTest)

19:03:59.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes

19:03:59.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well1024aTest)

19:03:59.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt2

19:03:59.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well1024aTest)

19:03:59.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPascal

19:03:59.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well1024aTest)

19:03:59.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSample

19:03:59.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well1024aTest)

19:03:59.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntExtremeValues

19:03:59.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well1024aTest)

19:03:59.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniformExclusiveEndpoints

19:03:59.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well1024aTest)

19:03:59.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGaussian

19:03:59.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well1024aTest)

19:03:59.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextF

19:03:59.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well1024aTest)

19:03:59.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextT

19:03:59.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well1024aTest)

19:03:59.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextChiSquare

19:03:59.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well1024aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureLong

19:03:59.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well1024aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureHex

19:03:59.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well1024aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureInt

19:03:59.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well1024aTest)

19:04:01.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoissonConsistency

19:04:01.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well1024aTest)

19:04:01.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHypergeometric

19:04:01.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well1024aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongExtremeValues
19:04:01.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:01.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well1024aTest)

19:04:01.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextExponential

19:04:01.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well1024aTest)

19:04:01.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoisson

19:04:01.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well1024aTest)

19:04:01.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniform

19:04:01.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well1024aTest)

19:04:01.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPermutation

19:04:01.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well1024aTest)

19:04:01.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBinomial

19:04:01.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well1024aTest)

19:04:01.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testConfig

19:04:01.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well1024aTest)

19:04:01.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInversionDeviate

19:04:01.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well1024aTest)

19:04:01.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHex

19:04:01.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well1024aTest)

19:04:01.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt

19:04:01.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well1024aTest)

19:04:01.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextCauchy

19:04:01.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well1024aTest)

19:04:01.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGamma

19:04:01.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well1024aTest)

19:04:01.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextWeibull

19:04:01.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well1024aTest)

19:04:01.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBeta

19:04:01.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well1024aTest)

19:04:01.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong

19:04:01.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well1024aTest)

19:04:01.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextZipf

19:04:01.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.RetryRunnerTest
19:04:01.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:01.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:01.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes, DisplayName: testRetryFailSometimes(org.apache.commons.math.RetryRunnerTest)

19:04:01.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes

19:04:01.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways, DisplayName: testRetryFailAlways(org.apache.commons.math.RetryRunnerTest)

19:04:01.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways

19:04:01.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.FitnessCachingTest

19:04:01.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:01.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching, DisplayName: testFitnessCaching(org.apache.commons.math.genetics.FitnessCachingTest)

19:04:01.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching

19:04:01.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.PowellOptimizerTest

19:04:01.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:01.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

19:04:01.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic

19:04:01.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic, DisplayName: testMaximizeQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

19:04:01.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic

19:04:01.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc, DisplayName: testSumSinc(org.apache.commons.math.optimization.direct.PowellOptimizerTest)

19:04:01.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc

19:04:01.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest

19:04:01.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21

19:04:01.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency, DisplayName: testGLSEfficiency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency

19:04:03.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData, DisplayName: cannotAddNullYSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData

19:04:03.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare, DisplayName: cannotAddCovarianceDataThatIsNotSquare(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare

19:04:03.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData, DisplayName: notEnoughData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData

19:04:03.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency, DisplayName: testGLSOLSConsistency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency

19:04:03.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData, DisplayName: cannotAddNullCovarianceData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData

19:04:03.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch, DisplayName: cannotAddCovarianceDataWithSampleSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch

19:04:03.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance
19:04:03.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:03.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch

19:04:03.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData, DisplayName: cannotAddXSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData

19:04:03.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2
19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals

19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance

19:04:03.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData

19:04:03.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample

19:04:03.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters

19:04:03.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance

19:04:03.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData

19:04:03.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull

19:04:03.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData

19:04:03.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)

19:04:03.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull

19:04:03.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.CauchyDistributionTest

19:04:03.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale, DisplayName: testScale(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts

19:04:03.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian, DisplayName: testMedian(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian

19:04:03.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:04:03.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities

19:04:03.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities

19:04:03.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling

19:04:03.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities

19:04:03.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments

19:04:03.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.CauchyDistributionTest)

19:04:03.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency

19:04:03.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

19:04:03.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest

19:04:03.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:03.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage, DisplayName: testMessage(org.apache.commons.math.exception.TooManyEvaluationsExceptionTest)

19:04:03.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage

19:04:03.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:03.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.RotationTest

19:04:03.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:04:03.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAxisAngle, DisplayName: testAxisAngle(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAxisAngle

19:04:03.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorTwoPairs, DisplayName: testVectorTwoPairs(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorTwoPairs

19:04:03.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testCompose

19:04:03.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIdentity, DisplayName: testIdentity(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIdentity

19:04:03.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testComposeInverse, DisplayName: testComposeInverse(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testComposeInverse

19:04:03.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testApplyInverseTo, DisplayName: testApplyInverseTo(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testApplyInverseTo

19:04:03.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAngles, DisplayName: testAngles(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAngles

19:04:03.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorOnePair, DisplayName: testVectorOnePair(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorOnePair

19:04:03.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIssue639, DisplayName: testIssue639(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIssue639

19:04:03.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testMatrix, DisplayName: testMatrix(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testMatrix

19:04:03.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testRevert, DisplayName: testRevert(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testRevert

19:04:03.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testSingularities, DisplayName: testSingularities(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testSingularities

19:04:03.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testQuaternion, DisplayName: testQuaternion(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

19:04:03.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testQuaternion

19:04:03.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.BinomialDistributionTest

19:04:03.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:03.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts

19:04:03.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0

19:04:03.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1

19:04:03.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities

19:04:03.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities

19:04:03.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling

19:04:03.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities

19:04:03.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments
19:04:03.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:03.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.BinomialDistributionTest)

19:04:03.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments

19:04:03.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest

19:04:03.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:03.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInfinite, DisplayName: testInfinite(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)

19:04:03.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInfinite

19:04:03.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInterval, DisplayName: testInterval(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)

19:04:03.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInterval

19:04:03.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testMultiple, DisplayName: testMultiple(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)

19:04:03.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testMultiple

19:04:03.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest

19:04:03.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:03.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)

19:04:03.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters

19:04:03.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)

19:04:03.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction

19:04:03.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)

19:04:03.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction

19:04:03.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.ElitisticListPopulationTest

19:04:03.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:03.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration, DisplayName: testNextGeneration(org.apache.commons.math.genetics.ElitisticListPopulationTest)

19:04:03.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration

19:04:03.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.AbstractRandomGeneratorTest

19:04:03.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41

19:04:03.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
19:04:03.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:04.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntDirect

19:04:04.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloatDirect

19:04:04.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBooleanDirect

19:04:04.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongDirect

19:04:04.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBoolean2

19:04:04.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testFloatDirect

19:04:04.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testDoubleDirect

19:04:04.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong2

19:04:04.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntIAE

19:04:04.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntNeg

19:04:04.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBytes

19:04:04.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
19:04:04.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:04.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt2
19:04:04.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:04.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.AbstractRandomGeneratorTest)
19:04:04.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:04.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal

19:04:04.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample

19:04:04.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues
19:04:04.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:04.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints

19:04:04.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian

19:04:04.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF

19:04:04.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT

19:04:04.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:04.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare

19:04:04.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong

19:04:04.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex

19:04:04.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt

19:04:04.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency

19:04:06.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric

19:04:06.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues
19:04:06.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:06.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential

19:04:06.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson

19:04:06.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform

19:04:06.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation

19:04:06.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial

19:04:06.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig

19:04:06.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate

19:04:06.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex

19:04:06.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt

19:04:06.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy

19:04:06.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma

19:04:06.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull

19:04:06.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta

19:04:06.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong

19:04:06.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.AbstractRandomGeneratorTest)

19:04:06.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf

19:04:06.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest

19:04:06.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:04:06.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues

19:04:06.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples

19:04:06.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization

19:04:06.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation

19:04:06.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency

19:04:06.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode

19:04:06.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency

19:04:06.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial

19:04:06.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

19:04:06.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy

19:04:06.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation

19:04:06.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency

19:04:06.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MaxTest

19:04:06.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:06.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs

19:04:06.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues

19:04:06.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MaxTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples

19:04:06.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization

19:04:06.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency

19:04:06.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial

19:04:06.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:06.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.transform.FastFourierTransformerTest

19:04:06.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:06.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastFourierTransformerTest)

19:04:06.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData

19:04:06.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastFourierTransformerTest)

19:04:06.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters

19:04:06.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastFourierTransformerTest)

19:04:06.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction

19:04:06.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData, DisplayName: test2DData(org.apache.commons.math.transform.FastFourierTransformerTest)

19:04:06.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData

19:04:06.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.BlockFieldMatrixTest

19:04:06.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 46

19:04:06.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge

19:04:06.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge

19:04:06.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate

19:04:06.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples

19:04:06.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry

19:04:06.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail

19:04:06.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge

19:04:06.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd

19:04:06.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd

19:04:06.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace
19:04:06.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:06.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk

19:04:06.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString

19:04:06.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge

19:04:06.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge

19:04:06.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:06.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix

19:04:06.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks

19:04:07.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus
19:04:07.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:07.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector

19:04:07.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2

19:04:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions

19:04:07.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix

19:04:07.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge

19:04:07.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector

19:04:07.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions

19:04:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix

19:04:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209

19:04:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge

19:04:07.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors

19:04:07.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge

19:04:07.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn

19:04:07.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix
19:04:07.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:07.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn

19:04:07.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector

19:04:07.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply

19:04:07.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow

19:04:07.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode

19:04:07.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge

19:04:07.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial

19:04:07.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow

19:04:07.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose

19:04:07.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix

19:04:07.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply

19:04:07.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix

19:04:07.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector

19:04:07.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix

19:04:07.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)

19:04:07.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector

19:04:07.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 46
TestResult: 0
19:04:07.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.BiDiagonalTransformerTest

19:04:07.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:07.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal, DisplayName: testBBiDiagonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal

19:04:07.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower, DisplayName: testUpperOrLower(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower

19:04:07.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal

19:04:07.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix, DisplayName: testSingularMatrix(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix

19:04:07.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues

19:04:07.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions

19:04:07.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt

19:04:07.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)

19:04:07.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal

19:04:07.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:04:07.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.complex.ComplexFormatTest

19:04:07.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 31

19:04:07.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary

19:04:07.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat

19:04:07.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals

19:04:07.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary

19:04:07.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar

19:04:07.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber

19:04:07.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan

19:04:07.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc

19:04:07.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat
19:04:07.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:07.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth

19:04:07.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal

19:04:07.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat
19:04:07.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:07.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

19:04:07.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity

19:04:07.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testTrimOneImaginary, DisplayName: testTrimOneImaginary(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testTrimOneImaginary

19:04:07.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity

19:04:07.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar

19:04:07.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex

19:04:07.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals

19:04:07.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal

19:04:07.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth

19:04:07.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal

19:04:07.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary

19:04:07.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals
19:04:07.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:07.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity

19:04:07.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter

19:04:07.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal

19:04:07.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan

19:04:07.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary

19:04:07.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity

19:04:07.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)

19:04:07.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals

19:04:07.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 31
TestResult: 0

19:04:07.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.MersenneTwisterTest

19:04:07.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:04:07.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura, DisplayName: testMakotoNishimura(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura

19:04:07.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntDirect

19:04:07.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextFloatDirect

19:04:07.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBooleanDirect

19:04:07.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongDirect

19:04:07.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean2

19:04:07.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloatDirect

19:04:07.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDoubleDirect

19:04:07.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong2

19:04:07.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntIAE

19:04:07.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg

19:04:07.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes

19:04:07.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt2

19:04:07.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPascal

19:04:07.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSample

19:04:07.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntExtremeValues

19:04:07.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniformExclusiveEndpoints

19:04:07.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGaussian

19:04:07.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextF

19:04:07.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextT

19:04:07.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.MersenneTwisterTest)

19:04:07.970 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextChiSquare

19:04:07.970 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.MersenneTwisterTest)
* Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureLong

19:04:07.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.MersenneTwisterTest)
* Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureHex

19:04:07.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.MersenneTwisterTest)
* Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureInt

19:04:07.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoissonConsistency

19:04:09.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHypergeometric

19:04:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongExtremeValues

19:04:09.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextExponential

19:04:09.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoisson

19:04:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniform

19:04:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPermutation

19:04:09.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBinomial

19:04:09.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testConfig

19:04:09.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInversionDeviate

19:04:09.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHex

19:04:09.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt

19:04:09.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextCauchy

19:04:09.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGamma

19:04:09.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextWeibull

19:04:09.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBeta

19:04:09.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong

19:04:09.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.MersenneTwisterTest)

19:04:09.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextZipf

19:04:09.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.MathUtilsTest

19:04:09.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 76

19:04:09.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt, DisplayName: testCopyOfInt(org.apache.commons.math.util.MathUtilsTest)

19:04:09.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt

19:04:09.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient, DisplayName: testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)

19:04:09.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient

19:04:09.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail, DisplayName: testFactorialFail(org.apache.commons.math.util.MathUtilsTest)

19:04:09.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail

19:04:09.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency, DisplayName: testGcdConsistency(org.apache.commons.math.util.MathUtilsTest)

19:04:09.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency

19:04:09.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2, DisplayName: testCopyOfDouble2(org.apache.commons.math.util.MathUtilsTest)

19:04:09.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2

19:04:09.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3, DisplayName: testCopyOfDouble3(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3

19:04:09.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace, DisplayName: testSortInPlace(org.apache.commons.math.util.MathUtilsTest)

19:04:09.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace

19:04:09.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2, DisplayName: testCopyOfInt2(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2

19:04:09.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3, DisplayName: testCopyOfInt3(org.apache.commons.math.util.MathUtilsTest)

19:04:09.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3

19:04:09.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble, DisplayName: testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble
19:04:09.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble, DisplayName: testRoundDouble(org.apache.commons.math.util.MathUtilsTest)

19:04:09.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble

19:04:09.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle, DisplayName: testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)

19:04:09.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle

19:04:09.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray, DisplayName: testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)

19:04:09.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray

19:04:09.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt, DisplayName: testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt

19:04:09.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle, DisplayName: testReduceComparedWithNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)

19:04:09.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle

19:04:09.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble, DisplayName: testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble
19:04:09.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd, DisplayName: testGcd(org.apache.commons.math.util.MathUtilsTest)

19:04:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd

19:04:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm, DisplayName: testLcm(org.apache.commons.math.util.MathUtilsTest)

19:04:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm

19:04:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.MathUtilsTest)

19:04:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog

19:04:09.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.MathUtilsTest)

19:04:09.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow

19:04:09.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge, DisplayName: testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)

19:04:09.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge

19:04:09.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder, DisplayName: testCheckOrder(org.apache.commons.math.util.MathUtilsTest)

19:04:09.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder

19:04:09.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh
19:04:09.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash, DisplayName: testHash(org.apache.commons.math.util.MathUtilsTest)

19:04:09.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash

19:04:09.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh

19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash, DisplayName: testPermutedArrayHash(org.apache.commons.math.util.MathUtilsTest)

19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash

19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt, DisplayName: testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt
19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong, DisplayName: testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong

19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt, DisplayName: testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt
19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon, DisplayName: testCompareToEpsilon(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon
19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble, DisplayName: testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble
19:04:09.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat, DisplayName: testRoundFloat(org.apache.commons.math.util.MathUtilsTest)

19:04:09.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat

19:04:09.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN, DisplayName: testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)

19:04:09.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN

19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash, DisplayName: testArrayHash(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash
19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial, DisplayName: testFactorial(org.apache.commons.math.util.MathUtilsTest)

19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial

19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta, DisplayName: testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta
19:04:09.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong, DisplayName: testGcdLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong

19:04:09.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps, DisplayName: testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)

19:04:09.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps

19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong, DisplayName: testLcmLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong

19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals, DisplayName: testArrayEquals(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals
19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck, DisplayName: testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)

19:04:09.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck

19:04:09.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite, DisplayName: testCheckFinite(org.apache.commons.math.util.MathUtilsTest)

19:04:09.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite

19:04:09.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps, DisplayName: testFloatEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)

19:04:09.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps

19:04:09.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong, DisplayName: testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong

19:04:09.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble, DisplayName: testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble

19:04:09.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt, DisplayName: testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt
19:04:09.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail, DisplayName: testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)

19:04:09.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail

19:04:09.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombinationInfinite, DisplayName: testLinearCombinationInfinite(org.apache.commons.math.util.MathUtilsTest)

19:04:09.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombinationInfinite
19:04:09.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475, DisplayName: testMath475(org.apache.commons.math.util.MathUtilsTest)

19:04:09.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475

19:04:09.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN

19:04:09.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination1, DisplayName: testLinearCombination1(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination1

19:04:09.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination2, DisplayName: testLinearCombination2(org.apache.commons.math.util.MathUtilsTest)

19:04:09.970 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination2

19:04:09.970 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage, DisplayName: testSubAndCheckErrorMessage(org.apache.commons.math.util.MathUtilsTest)

19:04:09.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage

19:04:09.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0, DisplayName: test0Choose0(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0

19:04:09.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps, DisplayName: testEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps
19:04:09.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck, DisplayName: testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)

19:04:09.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck

19:04:09.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte, DisplayName: testSignByte(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte

19:04:09.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong, DisplayName: testSignLong(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong

19:04:09.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta, DisplayName: testEqualsWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta

19:04:09.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong, DisplayName: testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong

19:04:09.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble, DisplayName: testCopyOfDouble(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble
19:04:09.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat, DisplayName: testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat
19:04:09.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps, DisplayName: testCompareToMaxUlps(org.apache.commons.math.util.MathUtilsTest)

19:04:09.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps

19:04:09.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort, DisplayName: testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte, DisplayName: testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong, DisplayName: testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1, DisplayName: testCheckNotNull1(org.apache.commons.math.util.MathUtilsTest)

19:04:09.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1

19:04:09.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2, DisplayName: testCheckNotNull2(org.apache.commons.math.util.MathUtilsTest)

19:04:09.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2

19:04:09.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN, DisplayName: testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)

19:04:09.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble, DisplayName: testSignDouble(org.apache.commons.math.util.MathUtilsTest)

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck, DisplayName: testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce, DisplayName: testReduce(org.apache.commons.math.util.MathUtilsTest)

19:04:09.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce

19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt, DisplayName: testSignInt(org.apache.commons.math.util.MathUtilsTest)

19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt

19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.util.MathUtilsTest)
19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN
19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat, DisplayName: testSignFloat(org.apache.commons.math.util.MathUtilsTest)
19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat

19:04:09.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort, DisplayName: testSignShort(org.apache.commons.math.util.MathUtilsTest)
19:04:09.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort

19:04:09.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 76
19:04:09.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest
19:04:09.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
19:04:09.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)

19:04:09.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane
19:04:09.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
19:04:09.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions
19:04:09.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
19:04:09.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid
19:04:09.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:04:09.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TTestTest

19:04:09.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
19:04:09.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TTestTest)

19:04:09.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest

19:04:09.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TTestTest)

19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples
19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TTestTest)
19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic
19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TTestTest)
19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT
19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TTestTest)
19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired
19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TTestTest)
19:04:09.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic
19:04:09.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
19:04:09.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest

19:04:09.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
19:04:09.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:09.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)
19:04:09.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency

19:04:10.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)

19:04:10.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization

19:04:10.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ChiSquareDistributionTest

19:04:10.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors

19:04:10.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf

19:04:10.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities

19:04:10.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities

19:04:10.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling

19:04:10.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities

19:04:10.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments

19:04:10.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ChiSquareDistributionTest)

19:04:10.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency

19:04:10.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest

19:04:10.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:10.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
19:04:10.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial

19:04:10.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

19:04:10.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck

19:04:10.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

19:04:10.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep

19:04:10.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

19:04:10.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations

19:04:10.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

19:04:10.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance

19:04:10.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)

19:04:10.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward

19:04:10.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.FixedGenerationCountTest

19:04:10.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:10.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied, DisplayName: testIsSatisfied(org.apache.commons.math.genetics.FixedGenerationCountTest)

19:04:10.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied

19:04:10.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.MeanTest

19:04:10.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:10.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples

19:04:10.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean, DisplayName: testWeightedMean(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean

19:04:10.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples

19:04:10.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization

19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.MeanTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation
19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency

19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode

19:04:10.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency

19:04:10.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)

19:04:10.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency

19:04:10.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:10.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.fitting.HarmonicFitterTest

19:04:10.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:10.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError, DisplayName: test1PercentError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError

19:04:10.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData, DisplayName: testTinyVariationsData(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData

19:04:10.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1

19:04:10.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess

19:04:10.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted, DisplayName: testUnsorted(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted

19:04:10.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)

19:04:10.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError

19:04:10.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest

19:04:10.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:10.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)

19:04:10.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency

19:04:10.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)

19:04:10.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization

19:04:10.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.CovarianceTest

19:04:10.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:04:10.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.CovarianceTest)

19:04:10.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData

19:04:10.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.CovarianceTest)

19:04:10.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility

19:04:10.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.CovarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant
19:04:10.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.CovarianceTest)

19:04:10.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency

19:04:10.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.CovarianceTest)

19:04:10.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly

19:04:10.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.EmpiricalDistributionTest

19:04:10.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:04:10.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow, DisplayName: testBinIndexOverflow(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow

19:04:10.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization

19:04:10.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad, DisplayName: testLoad(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad

19:04:10.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext, DisplayName: testNext(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext

19:04:10.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray, DisplayName: testLoadNullDoubleArray(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray

19:04:10.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGeneratorConfig, DisplayName: testGeneratorConfig(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGeneratorConfig

19:04:10.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat, DisplayName: testGridTooFat(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat

19:04:10.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad, DisplayName: testDoubleLoad(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad

19:04:10.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine, DisplayName: testGridTooFine(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine

19:04:10.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile, DisplayName: testLoadNullFile(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile

19:04:10.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds, DisplayName: testGetBinUpperBounds(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds

19:04:10.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL, DisplayName: testLoadNullURL(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL

19:04:10.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail, DisplayName: testNexFail(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail

19:04:10.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testReSeed, DisplayName: testReSeed(org.apache.commons.math.random.EmpiricalDistributionTest)

19:04:10.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testReSeed

19:04:10.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.IllinoisSolverTest

19:04:10.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:10.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionRightSide

19:04:10.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionAboveSide

19:04:10.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionBelowSide

19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionLeftSide

19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testBadEndpoints
19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testRootEndpoints

19:04:10.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testQuinticZero

19:04:10.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)

19:04:10.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSinZero

19:04:10.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:04:10.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.RealVectorFormatTest

19:04:10.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

19:04:10.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat

19:04:10.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals

19:04:10.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator

19:04:10.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX

19:04:10.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan

19:04:10.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc

19:04:10.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX

19:04:10.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY

19:04:10.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ

19:04:10.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll

19:04:10.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix
19:04:10.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.RealVectorFormatTest)

19:04:10.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix

19:04:10.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX
19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY
19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ
19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace
19:04:10.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents
19:04:10.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents
19:04:10.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity

19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl
19:04:10.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity
19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting
19:04:10.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals

19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals
19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity

19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting
19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan

19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity
19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
19:04:10.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals
19:04:10.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
19:04:10.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest

19:04:10.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
19:04:10.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck

19:04:10.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward

19:04:10.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep

19:04:10.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps

19:04:10.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep

19:04:10.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)

19:04:10.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize

19:04:10.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.OneWayAnovaTest

19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest, DisplayName: testAnovaTest(org.apache.commons.math.stat.inference.OneWayAnovaTest)

19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest

19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue, DisplayName: testAnovaFValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)

19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue
19:04:10.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:10.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue, DisplayName: testAnovaPValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)

19:04:10.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue

19:04:10.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest

19:04:10.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:10.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)

19:04:10.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane

19:04:10.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)

19:04:10.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave

19:04:10.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)

19:04:10.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions

19:04:10.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well19937aTest

19:04:10.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:04:10.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937aTest)

19:04:10.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode

19:04:10.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntDirect

19:04:11.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextFloatDirect

19:04:11.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBooleanDirect

19:04:11.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongDirect

19:04:11.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well19937aTest)

19:04:11.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBoolean2

19:04:11.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testFloatDirect

19:04:11.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well19937aTest)

19:04:11.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testDoubleDirect

19:04:11.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well19937aTest)

19:04:11.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong2

19:04:11.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well19937aTest)

19:04:11.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntIAE

19:04:11.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well19937aTest)

19:04:11.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntNeg

19:04:11.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well19937aTest)

19:04:11.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBytes

19:04:11.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well19937aTest)

19:04:11.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt2

19:04:11.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well19937aTest)

19:04:11.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPascal

19:04:11.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well19937aTest)

19:04:11.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSample

19:04:11.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well19937aTest)

19:04:11.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntExtremeValues

19:04:11.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well19937aTest)

19:04:11.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniformExclusiveEndpoints

19:04:11.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well19937aTest)

19:04:11.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGaussian

19:04:11.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well19937aTest)

19:04:11.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextF

19:04:11.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well19937aTest)

19:04:11.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextT

19:04:11.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well19937aTest)

19:04:11.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextChiSquare

19:04:11.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well19937aTest)

19:04:11.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureLong

19:04:11.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well19937aTest)

19:04:11.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureHex

19:04:11.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well19937aTest)

19:04:11.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureInt

19:04:11.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well19937aTest)

19:04:13.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoissonConsistency

19:04:13.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well19937aTest)

19:04:13.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHypergeometric

19:04:13.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well19937aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongExtremeValues

19:04:13.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well19937aTest)

19:04:13.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextExponential

19:04:13.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well19937aTest)

19:04:13.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoisson

19:04:13.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well19937aTest)

19:04:13.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniform

19:04:13.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well19937aTest)

19:04:13.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPermutation

19:04:13.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well19937aTest)

19:04:13.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBinomial

19:04:13.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well19937aTest)

19:04:13.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testConfig

19:04:13.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well19937aTest)

19:04:13.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInversionDeviate

19:04:13.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well19937aTest)

19:04:13.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHex

19:04:13.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well19937aTest)

19:04:13.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt

19:04:13.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well19937aTest)

19:04:13.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextCauchy

19:04:13.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well19937aTest)

19:04:13.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGamma

19:04:13.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well19937aTest)

19:04:13.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextWeibull

19:04:13.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well19937aTest)

19:04:13.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBeta

19:04:13.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well19937aTest)

19:04:13.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong

19:04:13.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well19937aTest)

19:04:13.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextZipf

19:04:13.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.FastMathTest

19:04:13.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 36

19:04:13.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogSpecialCases, DisplayName: testLogSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:13.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogSpecialCases

19:04:13.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases, DisplayName: testDoubleNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:13.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases

19:04:13.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases, DisplayName: testAtan2SpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:13.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases

19:04:13.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy, DisplayName: testCbrtAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:15.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy

19:04:15.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTest)

19:04:15.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2

19:04:15.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses, DisplayName: checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)

19:04:15.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses

19:04:15.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy, DisplayName: testLogAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:15.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy

19:04:15.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy, DisplayName: testAcosAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:17.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy

19:04:17.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble, DisplayName: testMinMaxDouble(org.apache.commons.math.util.FastMathTest)

19:04:17.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble

19:04:17.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases, DisplayName: testPowSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:17.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases

19:04:17.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases, DisplayName: testDoubleScalbSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:17.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases
19:04:17.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:17.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy, DisplayName: testTanhAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:20.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy

19:04:20.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians, DisplayName: testToRadians(org.apache.commons.math.util.FastMathTest)

19:04:20.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians

19:04:20.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.util.FastMathTest)

19:04:20.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants

19:04:20.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy, DisplayName: testTanAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:20.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy

19:04:20.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases, DisplayName: testFloatScalbSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:20.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases

19:04:20.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees, DisplayName: testToDegrees(org.apache.commons.math.util.FastMathTest)

19:04:20.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees

19:04:20.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy, DisplayName: testSinAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:20.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy

19:04:20.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy, DisplayName: testAtan2Accuracy(org.apache.commons.math.util.FastMathTest)

19:04:21.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy

19:04:21.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases, DisplayName: testFloatNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:21.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases
19:04:21.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:21.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy, DisplayName: testExpm1Accuracy(org.apache.commons.math.util.FastMathTest)

19:04:21.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy

19:04:21.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat, DisplayName: testMinMaxFloat(org.apache.commons.math.util.FastMathTest)

19:04:21.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat

19:04:21.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic, DisplayName: testHyperbolic(org.apache.commons.math.util.FastMathTest)

19:04:21.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic

19:04:21.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy, DisplayName: testCoshAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:22.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy

19:04:22.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy, DisplayName: testPowAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:22.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy

19:04:22.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases, DisplayName: testExpSpecialCases(org.apache.commons.math.util.FastMathTest)

19:04:22.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases
19:04:22.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:22.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy, DisplayName: testLog10Accuracy(org.apache.commons.math.util.FastMathTest)

19:04:23.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy

19:04:23.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy, DisplayName: testAtanAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:23.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy

19:04:23.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.util.FastMathTest)

19:04:23.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter

19:04:23.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy, DisplayName: testLog1pAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:23.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy

19:04:23.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses, DisplayName: testHyperbolicInverses(org.apache.commons.math.util.FastMathTest)

19:04:23.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses

19:04:23.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Execution of test case ignored : checkExtraFastMathClasses

19:04:23.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy, DisplayName: testAsinAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:24.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy

19:04:24.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy, DisplayName: testCosAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:25.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy

19:04:25.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy, DisplayName: testExpAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:25.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy

19:04:25.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy, DisplayName: testSinhAccuracy(org.apache.commons.math.util.FastMathTest)

19:04:26.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy

19:04:26.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 35
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionFieldTest
19:04:26.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:26.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:26.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.FractionFieldTest)

19:04:26.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne

19:04:26.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.FractionFieldTest)
* Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero
19:04:26.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:26.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionFieldTest)

19:04:26.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial

19:04:26.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well512aTest

19:04:26.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:04:26.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well512aTest)

19:04:26.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode

19:04:26.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntDirect

19:04:27.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextFloatDirect

19:04:27.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBooleanDirect

19:04:27.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongDirect

19:04:27.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well512aTest)

19:04:27.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBoolean2

19:04:27.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testFloatDirect

19:04:27.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well512aTest)

19:04:27.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testDoubleDirect

19:04:27.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well512aTest)

19:04:27.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong2

19:04:27.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well512aTest)

19:04:27.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntIAE

19:04:27.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well512aTest)

19:04:27.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntNeg

19:04:27.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well512aTest)

19:04:27.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBytes

19:04:27.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well512aTest)

19:04:27.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt2

19:04:27.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well512aTest)

19:04:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPascal

19:04:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well512aTest)

19:04:27.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSample

19:04:27.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well512aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntExtremeValues

19:04:27.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well512aTest)

19:04:27.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniformExclusiveEndpoints

19:04:27.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well512aTest)

19:04:27.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGaussian

19:04:27.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well512aTest)

19:04:27.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextF

19:04:27.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well512aTest)

19:04:27.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextT

19:04:27.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well512aTest)

19:04:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextChiSquare

19:04:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well512aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureLong

19:04:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well512aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureHex

19:04:27.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well512aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureInt

19:04:27.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well512aTest)

19:04:29.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoissonConsistency

19:04:29.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well512aTest)

19:04:29.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHypergeometric

19:04:29.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well512aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongExtremeValues

19:04:29.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well512aTest)

19:04:29.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextExponential

19:04:29.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well512aTest)

19:04:29.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoisson

19:04:29.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well512aTest)

19:04:29.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniform

19:04:29.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well512aTest)

19:04:29.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPermutation

19:04:29.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well512aTest)

19:04:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBinomial

19:04:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well512aTest)

19:04:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testConfig

19:04:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well512aTest)

19:04:29.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInversionDeviate

19:04:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well512aTest)

19:04:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHex

19:04:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well512aTest)

19:04:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt

19:04:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well512aTest)

19:04:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextCauchy

19:04:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well512aTest)

19:04:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGamma

19:04:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well512aTest)

19:04:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextWeibull

19:04:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well512aTest)

19:04:29.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBeta

19:04:29.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well512aTest)

19:04:29.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong

19:04:29.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well512aTest)

19:04:29.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextZipf

19:04:29.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.RandomKeyMutationTest

19:04:29.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:29.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.RandomKeyMutationTest)

19:04:29.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate

19:04:29.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.NewtonSolverTest

19:04:29.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:29.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)

19:04:29.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero

19:04:29.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)

19:04:29.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero

19:04:29.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:04:29.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.LUDecompositionImplTest

19:04:29.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:29.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation

19:04:29.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular

19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions

19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare
19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular
19:04:29.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular

19:04:29.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU

19:04:29.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1

19:04:29.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.LUDecompositionImplTest)

19:04:29.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2

19:04:29.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest

19:04:29.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:04:29.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testOppositeHyperplanes, DisplayName: testOppositeHyperplanes(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testOppositeHyperplanes

19:04:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDisjointPolygons, DisplayName: testDisjointPolygons(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDisjointPolygons

19:04:29.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testEmptyDifference, DisplayName: testEmptyDifference(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testEmptyDifference

19:04:29.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testXor, DisplayName: testXor(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testXor

19:04:29.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20040520, DisplayName: testBug20040520(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20040520

19:04:29.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20041003, DisplayName: testBug20041003(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20041003

19:04:29.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testStair, DisplayName: testStair(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testStair

19:04:29.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnion, DisplayName: testUnion(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnion

19:04:29.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testHole, DisplayName: testHole(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testHole

19:04:29.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testChoppedHexagon, DisplayName: testChoppedHexagon(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testChoppedHexagon

19:04:29.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testLineIntersection, DisplayName: testLineIntersection(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testLineIntersection

19:04:29.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDifference, DisplayName: testDifference(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDifference

19:04:29.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testIntersection

19:04:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnlimitedSubHyperplane, DisplayName: testUnlimitedSubHyperplane(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnlimitedSubHyperplane

19:04:29.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testConcentric, DisplayName: testConcentric(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testConcentric

19:04:29.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSingularPoint, DisplayName: testSingularPoint(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSingularPoint

19:04:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSimplyConnected, DisplayName: testSimplyConnected(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)

19:04:29.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSimplyConnected

19:04:29.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.GammaDistributionTest

19:04:29.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:04:29.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities, DisplayName: testProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities

19:04:29.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions

19:04:29.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors, DisplayName: testParameterAccessors(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors

19:04:29.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts

19:04:29.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity

19:04:29.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:04:29.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues

19:04:29.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities

19:04:29.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities

19:04:29.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling

19:04:29.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities

19:04:29.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments

19:04:29.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.GammaDistributionTest)

19:04:29.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency

19:04:29.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.InteractionTest

19:04:29.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:29.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction, DisplayName: testInteraction(org.apache.commons.math.stat.descriptive.InteractionTest)

19:04:29.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction

19:04:29.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.ProductTest

19:04:29.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:29.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues

19:04:29.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct, DisplayName: testWeightedProduct(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct

19:04:29.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.ProductTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples

19:04:29.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization

19:04:29.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation

19:04:29.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency

19:04:29.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy

19:04:29.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation

19:04:29.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

19:04:29.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency
19:04:29.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:29.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.SubLineTest

19:04:29.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:29.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testEndPoints, DisplayName: testEndPoints(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testEndPoints

19:04:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoEndPoints, DisplayName: testNoEndPoints(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoEndPoints
19:04:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideInside, DisplayName: testIntersectionInsideInside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideInside

19:04:29.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryBoundary, DisplayName: testIntersectionBoundaryBoundary(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryBoundary

19:04:29.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionOutsideOutside, DisplayName: testIntersectionOutsideOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionOutsideOutside

19:04:29.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryOutside, DisplayName: testIntersectionBoundaryOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryOutside
19:04:29.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testSeveralSegments, DisplayName: testSeveralSegments(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testSeveralSegments

19:04:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfiniteNeg, DisplayName: testHalfInfiniteNeg(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfiniteNeg

19:04:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfinitePos, DisplayName: testHalfInfinitePos(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfinitePos

19:04:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideOutside, DisplayName: testIntersectionInsideOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideOutside

19:04:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoSegments, DisplayName: testNoSegments(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoSegments

19:04:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideBoundary, DisplayName: testIntersectionInsideBoundary(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)

19:04:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideBoundary

19:04:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest
19:04:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

19:04:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction

19:04:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

19:04:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:04:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest

19:04:29.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:29.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)

19:04:29.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial

19:04:29.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum, DisplayName: testNoOptimum(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)

19:04:29.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum

19:04:29.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:04:29.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest

19:04:29.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:29.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData

19:04:29.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
* Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency

19:04:29.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss, DisplayName: testSwiss(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss

19:04:29.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant

19:04:29.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency

19:04:29.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency

19:04:29.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly

19:04:29.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility

19:04:29.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)

19:04:29.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero

19:04:29.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.OpenIntToDoubleHashMapTest

19:04:29.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:04:29.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting

19:04:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2

19:04:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions

19:04:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy

19:04:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey

19:04:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent

19:04:29.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet

19:04:29.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize

19:04:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2

19:04:29.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification

19:04:29.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent

19:04:29.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty

19:04:29.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting

19:04:29.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove

19:04:29.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator

19:04:29.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize

19:04:29.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

19:04:29.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty

19:04:29.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastHadamardTransformerTest
19:04:29.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:29.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points, DisplayName: test3Points(org.apache.commons.math.transform.FastHadamardTransformerTest)
19:04:29.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:29.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points

19:04:29.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points, DisplayName: test8Points(org.apache.commons.math.transform.FastHadamardTransformerTest)

19:04:29.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points

19:04:29.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points, DisplayName: test4Points(org.apache.commons.math.transform.FastHadamardTransformerTest)

19:04:29.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points

19:04:29.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse, DisplayName: testNoIntInverse(org.apache.commons.math.transform.FastHadamardTransformerTest)

19:04:29.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse

19:04:29.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:04:29.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well44497bTest

19:04:29.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

19:04:29.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497bTest)

19:04:29.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode

19:04:29.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntDirect

19:04:30.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextFloatDirect

19:04:30.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBooleanDirect

19:04:30.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongDirect

19:04:30.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well44497bTest)

19:04:30.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBoolean2

19:04:30.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testFloatDirect

19:04:30.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well44497bTest)

19:04:30.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testDoubleDirect

19:04:30.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well44497bTest)

19:04:30.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong2

19:04:30.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well44497bTest)

19:04:30.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntIAE

19:04:30.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well44497bTest)

19:04:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntNeg

19:04:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well44497bTest)

19:04:30.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBytes

19:04:30.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well44497bTest)

19:04:30.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt2

19:04:30.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well44497bTest)

19:04:30.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPascal

19:04:30.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well44497bTest)

19:04:30.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSample

19:04:30.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well44497bTest)

19:04:30.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntExtremeValues

19:04:30.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well44497bTest)

19:04:30.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniformExclusiveEndpoints

19:04:30.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well44497bTest)

19:04:30.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGaussian

19:04:30.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well44497bTest)

19:04:30.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextF

19:04:30.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well44497bTest)

19:04:30.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextT

19:04:30.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well44497bTest)

19:04:30.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextChiSquare

19:04:30.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well44497bTest)

19:04:30.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureLong

19:04:30.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well44497bTest)

19:04:30.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureHex

19:04:30.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well44497bTest)

19:04:30.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureInt

19:04:30.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well44497bTest)

19:04:32.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoissonConsistency

19:04:32.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well44497bTest)

19:04:32.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHypergeometric

19:04:32.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well44497bTest)

19:04:32.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongExtremeValues

19:04:32.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well44497bTest)

19:04:32.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextExponential

19:04:32.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well44497bTest)

19:04:32.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoisson

19:04:32.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well44497bTest)

19:04:32.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniform

19:04:32.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well44497bTest)

19:04:32.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPermutation

19:04:32.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well44497bTest)

19:04:32.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBinomial

19:04:32.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well44497bTest)

19:04:32.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testConfig

19:04:32.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well44497bTest)

19:04:32.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInversionDeviate

19:04:32.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well44497bTest)

19:04:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHex

19:04:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well44497bTest)

19:04:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt

19:04:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well44497bTest)

19:04:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextCauchy

19:04:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well44497bTest)

19:04:32.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGamma

19:04:32.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well44497bTest)

19:04:32.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextWeibull

19:04:32.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well44497bTest)

19:04:32.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBeta

19:04:32.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well44497bTest)

19:04:32.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong

19:04:32.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well44497bTest)

19:04:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextZipf

19:04:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.MatrixUtilsTest

19:04:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter, DisplayName: testFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter

19:04:32.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix, DisplayName: testcreateFieldIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix

19:04:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix, DisplayName: testCreateRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix

19:04:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix, DisplayName: testCreateRowRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix

19:04:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix, DisplayName: testcreateFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix

19:04:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter, DisplayName: testBigFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter

19:04:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveUpperTriangularSystem, DisplayName: testSolveUpperTriangularSystem(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveUpperTriangularSystem

19:04:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix, DisplayName: testCreateIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix

19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix, DisplayName: testCreateColumnRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix

19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix, DisplayName: testCreateRowFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix
19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix, DisplayName: testCreateColumnFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix

19:04:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveLowerTriangularSystem, DisplayName: testSolveLowerTriangularSystem(org.apache.commons.math.linear.MatrixUtilsTest)

19:04:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveLowerTriangularSystem

19:04:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest

19:04:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:04:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBox, DisplayName: testBox(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
19:04:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBox

19:04:32.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testCross, DisplayName: testCross(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)

19:04:32.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testCross

19:04:32.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBuildBox, DisplayName: testBuildBox(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)

19:04:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBuildBox

19:04:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testTetrahedron, DisplayName: testTetrahedron(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)

19:04:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testTetrahedron

19:04:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testIsometry, DisplayName: testIsometry(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)

19:04:32.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testIsometry

19:04:32.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ConvergenceExceptionTest

19:04:32.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:32.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.ConvergenceExceptionTest)

19:04:32.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause

19:04:32.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.ConvergenceExceptionTest)

19:04:32.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor

19:04:32.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:04:32.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest

19:04:32.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:32.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward

19:04:32.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent

19:04:32.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep

19:04:32.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps

19:04:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep

19:04:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler

19:04:32.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks

19:04:32.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

19:04:32.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize

19:04:32.403 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.FieldMatrixImplTest

19:04:32.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 37

19:04:32.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate

19:04:32.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples

19:04:32.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry

19:04:32.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail

19:04:32.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd

19:04:32.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd

19:04:32.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower

19:04:32.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace

19:04:32.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk

19:04:32.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString

19:04:32.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix

19:04:32.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus
19:04:32.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector

19:04:32.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2

19:04:32.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions

19:04:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix

19:04:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector

19:04:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions

19:04:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn

19:04:32.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix

19:04:32.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn

19:04:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector

19:04:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply

19:04:32.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow

19:04:32.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode

19:04:32.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial

19:04:32.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow
19:04:32.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose

19:04:32.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix

19:04:32.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply

19:04:32.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix

19:04:32.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector

19:04:32.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix

19:04:32.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)

19:04:32.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector
19:04:32.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 37
TestResult: 0

19:04:32.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest

19:04:32.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:04:32.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate, DisplayName: testPerformClusterAnalysisDegenerate(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

19:04:32.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate

19:04:32.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace, DisplayName: testCertainSpace(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

19:04:32.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace

19:04:32.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters, DisplayName: testPerformClusterAnalysisToManyClusters(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

19:04:32.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters

19:04:32.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances, DisplayName: testSmallDistances(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

19:04:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances

19:04:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2, DisplayName: dimension2(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)

19:04:32.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2

19:04:32.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest

19:04:32.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:32.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)

19:04:32.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency

19:04:32.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)

19:04:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization

19:04:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.TriDiagonalTransformerTest

19:04:32.725 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:32.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt, DisplayName: testAEqualQTQt(org.apache.commons.math.linear.TriDiagonalTransformerTest)
19:04:32.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt

19:04:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal, DisplayName: testTTriDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal

19:04:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare

19:04:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal, DisplayName: testQTOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal

19:04:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal, DisplayName: testNoAccessBelowDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal
19:04:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal

19:04:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3, DisplayName: testMatricesValues3(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3

19:04:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5, DisplayName: testMatricesValues5(org.apache.commons.math.linear.TriDiagonalTransformerTest)

19:04:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5

19:04:32.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.LineTest

19:04:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.threed.LineTest)
19:04:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testContains

19:04:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testLineDistance, DisplayName: testLineDistance(org.apache.commons.math.geometry.euclidean.threed.LineTest)

19:04:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testLineDistance

19:04:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testClosest, DisplayName: testClosest(org.apache.commons.math.geometry.euclidean.threed.LineTest)

19:04:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testClosest

19:04:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.threed.LineTest)

19:04:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testIntersection

19:04:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testSimilar, DisplayName: testSimilar(org.apache.commons.math.geometry.euclidean.threed.LineTest)

19:04:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testSimilar

19:04:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testPointDistance, DisplayName: testPointDistance(org.apache.commons.math.geometry.euclidean.threed.LineTest)

19:04:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testPointDistance

19:04:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

19:04:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest

19:04:32.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:32.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)

19:04:32.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization

19:04:32.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization, DisplayName: testImpossibleSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)

19:04:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization

19:04:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState, DisplayName: testFixedState(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
* Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState

19:04:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset, DisplayName: testNoReset(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
* Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset

19:04:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.StatUtilsTest

19:04:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

19:04:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1, DisplayName: testNormalize1(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1

19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2, DisplayName: testNormalize2(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2
19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats, DisplayName: testDifferenceStats(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats
19:04:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile

19:04:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions, DisplayName: testArrayIndexConditions(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions

19:04:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax, DisplayName: testMax(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax

19:04:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin, DisplayName: testMin(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin

19:04:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats

19:04:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq, DisplayName: testSumSq(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq

19:04:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct, DisplayName: testProduct(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean, DisplayName: testGeometricMean(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean
19:04:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance, DisplayName: testVariance(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance

19:04:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog, DisplayName: testSumLog(org.apache.commons.math.stat.StatUtilsTest)

19:04:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog

19:04:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
TestResult: 0

19:04:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest

19:04:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:04:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

19:04:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean

19:04:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization

19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats

19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions
19:04:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

19:04:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis

19:04:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

19:04:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.ZipfDistributionTest

19:04:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions

19:04:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts
19:04:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ZipfDistributionTest)
19:04:32.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities
19:04:32.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities

19:04:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling

19:04:32.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities

19:04:32.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments

19:04:32.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.ZipfDistributionTest)

19:04:32.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments

19:04:32.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:04:32.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.FrenchRealVectorFormatTest

19:04:32.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30

19:04:32.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat

19:04:32.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals

19:04:32.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator
19:04:32.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX

19:04:32.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan

19:04:32.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc
19:04:32.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX

19:04:32.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY

19:04:32.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ

19:04:32.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll

19:04:32.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix

19:04:32.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix

19:04:32.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX

19:04:32.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY

19:04:32.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ

19:04:32.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace

19:04:32.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

19:04:32.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents

19:04:32.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents

19:04:32.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity

19:04:32.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl

19:04:32.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity

19:04:32.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting

19:04:32.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals

19:04:32.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals

19:04:32.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity

19:04:32.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting
19:04:32.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan

19:04:32.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity

19:04:32.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)

19:04:32.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals

19:04:32.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest

19:04:32.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

19:04:32.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat, DisplayName: testHat(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat

19:04:32.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility

19:04:32.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull, DisplayName: testNewSampleDataXNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull

19:04:32.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull, DisplayName: testNewSampleDataYNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull

19:04:32.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance

19:04:32.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch

19:04:32.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit, DisplayName: testPerfectFit(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit

19:04:32.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler1, DisplayName: testWampler1(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler1

19:04:32.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler2, DisplayName: testWampler2(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler2

19:04:32.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler3, DisplayName: testWampler3(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler3
19:04:32.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler4, DisplayName: testWampler4(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler4

19:04:32.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly

19:04:32.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2
19:04:32.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals

19:04:32.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance

19:04:32.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData

19:04:32.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample
19:04:32.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters

19:04:32.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance

19:04:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData

19:04:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull

19:04:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData

19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)

19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull
19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
TestResult: 0

19:04:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest

19:04:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
19:04:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization

19:04:32.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)

19:04:32.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString

19:04:32.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)

19:04:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode
19:04:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0

19:04:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest

19:04:32.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:04:32.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.831 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck

19:04:32.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward

19:04:32.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps

19:04:32.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls, DisplayName: testIntegratorControls(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls

19:04:32.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep

19:04:32.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative

19:04:32.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck
19:04:32.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents

19:04:32.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIssue596, DisplayName: testIssue596(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIssue596

19:04:32.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler

19:04:32.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)

19:04:32.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance

19:04:32.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MedianTest

19:04:32.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:32.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MedianTest)
19:04:32.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:32.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy

19:04:32.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MedianTest)

19:04:32.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation

19:04:32.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MedianTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency

19:04:32.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.MannWhitneyUTestTest

19:04:32.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation, DisplayName: testMannWhitneyUInputValidation(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple, DisplayName: testMannWhitneyUSimple(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

19:04:32.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.direct.CMAESOptimizerTest

19:04:32.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21

19:04:32.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen, DisplayName: testConstrainedRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:34.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen

19:04:34.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated, DisplayName: testElliRotated(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:34.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated

19:04:34.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse, DisplayName: testEllipse(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:35.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse

19:04:35.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes, DisplayName: testTwoAxes(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:36.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes

19:04:36.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar, DisplayName: testCigar(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:37.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar

19:04:37.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen, DisplayName: testRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen

19:04:38.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds, DisplayName: testInitOutofbounds(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds

19:04:38.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange, DisplayName: testInputSigmaOutOfRange(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange

19:04:38.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative, DisplayName: testInputSigmaNegative(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative

19:04:38.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch, DisplayName: testInputSigmaDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch

19:04:38.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData, DisplayName: testBoundariesNoData(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:38.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData
19:04:38.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:38.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin, DisplayName: testRastrigin(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:44.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin

19:04:44.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen, DisplayName: testDiagonalRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:45.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen

19:04:45.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow, DisplayName: testSsDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:46.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow

19:04:46.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize, DisplayName: testMaximize(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:46.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize

19:04:46.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley, DisplayName: testAckley(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:46.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley

19:04:46.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab, DisplayName: testCigTab(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:47.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab

19:04:47.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow, DisplayName: testDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:48.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow

19:04:48.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch, DisplayName: testBoundariesDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:48.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch

19:04:48.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere, DisplayName: testSphere(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:48.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere

19:04:48.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet, DisplayName: testTablet(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

19:04:49.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet

19:04:49.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
TestResult: 0

19:04:49.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.filter.KalmanFilterTest

19:04:49.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:49.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.filter.KalmanFilterTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.filter.KalmanFilterTest)

19:04:49.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.filter.KalmanFilterTest, MethodName: testConstant

19:04:49.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:49.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.regression.SimpleRegressionTest

19:04:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

19:04:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty, DisplayName: testRemoveMultiplePastEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty

19:04:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear
19:04:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr, DisplayName: testCorr(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.129 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr

19:04:49.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs

19:04:49.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect, DisplayName: testPerfect(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect

19:04:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty, DisplayName: testRemoveObsFromEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty

19:04:49.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative, DisplayName: testSSENonNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative

19:04:49.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle, DisplayName: testRemoveObsFromSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle

19:04:49.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty, DisplayName: testRemoveMultipleToEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty

19:04:49.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle, DisplayName: testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle

19:04:49.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY, DisplayName: testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY

19:04:49.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative, DisplayName: testPerfectNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative

19:04:49.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris, DisplayName: testNorris(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris

19:04:49.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference, DisplayName: testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference

19:04:49.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom, DisplayName: testRandom(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom

19:04:49.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple, DisplayName: testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)

19:04:49.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple

19:04:49.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0
19:04:49.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest

19:04:49.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:04:49.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283, DisplayName: testMath283(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283

19:04:49.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize1, DisplayName: testMaximize1(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize1

19:04:49.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize2, DisplayName: testMaximize2(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize2

19:04:49.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock

19:04:49.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize1, DisplayName: testMinimize1(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize1

19:04:49.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize2, DisplayName: testMinimize2(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize2

19:04:49.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

19:04:49.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell

19:04:49.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SparseRealMatrixTest
19:04:49.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 27

19:04:49.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate

19:04:49.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples

19:04:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry
19:04:49.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail

19:04:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd

19:04:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd

19:04:49.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace

19:04:49.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm

19:04:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString

19:04:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus

19:04:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2

19:04:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions

19:04:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix

19:04:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector

19:04:49.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions

19:04:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209

19:04:49.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors

19:04:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix

19:04:49.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector

19:04:49.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply

19:04:49.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode

19:04:49.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial

19:04:49.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose

19:04:49.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply

19:04:49.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix

19:04:49.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix

19:04:49.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseRealMatrixTest)

19:04:49.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector

19:04:49.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 27
TestResult: 0
19:04:49.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest

19:04:49.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:49.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter

19:04:49.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720

19:04:49.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy

19:04:49.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString

19:04:49.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics

19:04:49.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection

19:04:49.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval

19:04:49.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize

19:04:49.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

19:04:49.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues

19:04:49.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
19:04:49.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest

19:04:49.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:49.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN

19:04:49.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation

19:04:49.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples
19:04:49.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization

19:04:49.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation

19:04:49.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency
19:04:49.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode
19:04:49.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency

19:04:49.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial

19:04:49.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy

19:04:49.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)

19:04:49.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation

19:04:49.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency
19:04:49.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest
19:04:49.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:04:49.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiagConstant, DisplayName: testHdiagConstant(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiagConstant

19:04:49.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantInternal, DisplayName: testRegressAirlineConstantInternal(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantInternal

19:04:49.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiag, DisplayName: testHdiag(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiag

19:04:49.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testPCorr, DisplayName: testPCorr(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testPCorr

19:04:49.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testOneRedundantColumn, DisplayName: testOneRedundantColumn(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testOneRedundantColumn

19:04:49.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testThreeRedundantColumn, DisplayName: testThreeRedundantColumn(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testThreeRedundantColumn

19:04:49.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddObs, DisplayName: testNegativeTestAddObs(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddObs

19:04:49.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testSubsetRegression, DisplayName: testSubsetRegression(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testSubsetRegression

19:04:49.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantExternal, DisplayName: testRegressAirlineConstantExternal(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantExternal

19:04:49.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHasIntercept, DisplayName: testHasIntercept(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHasIntercept
19:04:49.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testAddObsGetNClear, DisplayName: testAddObsGetNClear(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testAddObsGetNClear

19:04:49.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler1, DisplayName: testWampler1(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler1

19:04:49.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler2, DisplayName: testWampler2(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler2

19:04:49.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler3, DisplayName: testWampler3(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler3

19:04:49.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testFilippelli, DisplayName: testFilippelli(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testFilippelli

19:04:49.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testLongly

19:04:49.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddMultipleObs, DisplayName: testNegativeTestAddMultipleObs(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)

19:04:49.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddMultipleObs

19:04:49.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest

19:04:49.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:49.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)

19:04:49.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency

19:04:49.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)

19:04:49.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization

19:04:49.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest

19:04:49.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:49.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData

19:04:49.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff, DisplayName: testVarianceDecompNonMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff

19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance, DisplayName: testNoVariance(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance

19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown, DisplayName: testSingleDown(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown
19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs, DisplayName: testNonMeanCutoffs(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs
19:04:49.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp, DisplayName: testSingleUp(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp
19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation

19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff, DisplayName: testVarianceDecompMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff
19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample, DisplayName: testSample(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)

19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample
19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

19:04:49.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.EigenSolverTest

19:04:49.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:49.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.EigenSolverTest)

19:04:49.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve

19:04:49.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.EigenSolverTest)

19:04:49.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors

19:04:49.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.linear.EigenSolverTest)

19:04:49.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible

19:04:49.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible, DisplayName: testInvertible(org.apache.commons.math.linear.EigenSolverTest)

19:04:49.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible

19:04:49.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.KurtosisTest

19:04:49.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:04:49.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN

19:04:49.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples

19:04:49.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization

19:04:49.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation

19:04:49.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency

19:04:49.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode

19:04:49.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency

19:04:49.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial

19:04:49.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy

19:04:49.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation

19:04:49.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)

19:04:49.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency

19:04:49.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

19:04:49.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest

19:04:49.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:49.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck

19:04:49.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward

19:04:49.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep

19:04:49.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps

19:04:49.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep

19:04:49.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)

19:04:49.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize

19:04:49.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0

19:04:49.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest

19:04:49.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:49.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward

19:04:49.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative, DisplayName: testWrongDerivative(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative

19:04:49.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep

19:04:49.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents

19:04:49.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors, DisplayName: testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors

19:04:49.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler

19:04:49.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance

19:04:49.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence, DisplayName: testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence

19:04:49.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)

19:04:49.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks

19:04:49.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.QRDecompositionImplTest

19:04:49.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:49.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR, DisplayName: testAEqualQR(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR

19:04:49.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues

19:04:49.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions

19:04:49.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular, DisplayName: testRUpperTriangular(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular

19:04:49.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal

19:04:49.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal, DisplayName: testHTrapezoidal(org.apache.commons.math.linear.QRDecompositionImplTest)

19:04:49.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal

19:04:49.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest

19:04:49.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:04:49.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)

19:04:49.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane

19:04:49.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)

19:04:49.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave

19:04:49.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)

19:04:49.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions

19:04:49.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.CertifiedDataTest

19:04:49.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:04:49.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics, DisplayName: testSummaryStatistics(org.apache.commons.math.stat.CertifiedDataTest)

19:04:49.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics

19:04:49.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics, DisplayName: testDescriptiveStatistics(org.apache.commons.math.stat.CertifiedDataTest)

19:04:49.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics

19:04:49.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest

19:04:49.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:04:49.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization

19:04:49.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats
19:04:49.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString

19:04:49.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts

19:04:49.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions

19:04:49.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics

19:04:49.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension

19:04:49.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection

19:04:49.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState
19:04:49.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

19:04:49.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode

19:04:49.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

19:04:49.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest

19:04:49.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:49.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooLargeExceptionTest)

19:04:49.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors

19:04:49.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:49.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest

19:04:49.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:04:49.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations, DisplayName: testMaxIterations(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations

19:04:49.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize1, DisplayName: testMaximize1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize1

19:04:49.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize2, DisplayName: testMaximize2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize2

19:04:49.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock

19:04:49.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1, DisplayName: testLeastSquares1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1

19:04:49.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2, DisplayName: testLeastSquares2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2

19:04:49.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3, DisplayName: testLeastSquares3(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3

19:04:49.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize1, DisplayName: testMinimize1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize1

19:04:49.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize2, DisplayName: testMinimize2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize2

19:04:49.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)

19:04:49.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell

19:04:49.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

19:04:49.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest

19:04:49.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:49.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency

19:04:49.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations

19:04:49.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial

19:04:49.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets

19:04:49.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple

19:04:49.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

19:04:49.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned

19:04:49.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation

19:04:49.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible

19:04:49.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations

19:04:49.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting

19:04:49.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)

19:04:49.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet

19:04:49.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:49.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest

19:04:49.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16

19:04:49.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency

19:04:49.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes, DisplayName: testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes

19:04:49.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations

19:04:49.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial

19:04:49.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation, DisplayName: testQRColumnsPermutation(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation

19:04:49.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets

19:04:49.814 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple

19:04:49.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted

19:04:49.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned

19:04:49.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199, DisplayName: testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199

19:04:49.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible

19:04:49.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations

19:04:49.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting

19:04:49.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters, DisplayName: testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters

19:04:49.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet

19:04:49.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)

19:04:49.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit

19:04:49.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0

19:04:49.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SparseFieldVectorTest

19:04:49.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:04:49.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseFieldVectorTest)

19:04:49.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc

19:04:49.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)

19:04:49.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions

19:04:49.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseFieldVectorTest)

19:04:49.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates

19:04:49.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)

19:04:49.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions

19:04:49.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.SparseFieldVectorTest)

19:04:49.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testOuterProduct

19:04:49.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.BigFractionFormatTest

19:04:49.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 19

19:04:49.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat

19:04:49.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative

19:04:49.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat

19:04:49.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper

19:04:49.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper

19:04:49.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative

19:04:49.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse

19:04:49.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat

19:04:49.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero

19:04:49.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative

19:04:49.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator

19:04:49.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat

19:04:49.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus

19:04:49.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger

19:04:49.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid

19:04:49.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat

19:04:49.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat

19:04:49.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig, DisplayName: testParseBig(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig

19:04:49.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.BigFractionFormatTest)

19:04:49.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative

19:04:49.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 19
TestResult: 0

19:04:49.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest

19:04:49.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:49.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest)

19:04:49.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock

19:04:49.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:49.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest

19:04:49.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:49.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest)

19:04:49.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors

19:04:49.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:49.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.OpenIntToFieldTest

19:04:49.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

19:04:49.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting

19:04:49.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2

19:04:49.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions

19:04:49.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy

19:04:49.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey

19:04:49.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent

19:04:49.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet

19:04:49.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize

19:04:49.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2

19:04:49.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification

19:04:49.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent

19:04:49.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty

19:04:49.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting

19:04:49.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove

19:04:49.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator

19:04:49.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize

19:04:49.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)

19:04:49.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty

19:04:49.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SingularValueDecompositionImplTest

19:04:49.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:49.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal

19:04:49.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testRank
19:04:49.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:49.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns, DisplayName: testMoreColumns(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns

19:04:49.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions

19:04:49.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber

19:04:49.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:49.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt

19:04:49.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability1, DisplayName: testStability1(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability1

19:04:50.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability2, DisplayName: testStability2(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability2

19:04:50.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testInverseConditionNumber, DisplayName: testInverseConditionNumber(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testInverseConditionNumber

19:04:50.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard, DisplayName: testHadamard(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard

19:04:50.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows, DisplayName: testMoreRows(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows

19:04:50.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)

19:04:50.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal

19:04:50.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:50.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.StepFunctionTest

19:04:50.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:04:50.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues

19:04:50.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1

19:04:50.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2

19:04:50.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3, DisplayName: testPreconditions3(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3

19:04:50.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4, DisplayName: testPreconditions4(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4

19:04:50.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5, DisplayName: testPreconditions5(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5

19:04:50.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6, DisplayName: testPreconditions6(org.apache.commons.math.analysis.function.StepFunctionTest)

19:04:50.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6

19:04:50.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside, DisplayName: testHeaviside(org.apache.commons.math.analysis.function.StepFunctionTest)
* Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside
19:04:50.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.correlation.StorelessCovarianceTest

19:04:50.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:50.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleCov, DisplayName: testLonglySimpleCov(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)

19:04:50.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleCov

19:04:50.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleVar, DisplayName: testLonglySimpleVar(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleVar
19:04:50.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByEntry, DisplayName: testLonglyByEntry(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)

19:04:50.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByEntry

19:04:50.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByEntry, DisplayName: testSwissFertilityByEntry(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)

19:04:50.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByEntry

19:04:50.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByRow, DisplayName: testSwissFertilityByRow(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)

19:04:50.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByRow

19:04:50.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByRow, DisplayName: testLonglyByRow(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)

19:04:50.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByRow

19:04:50.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest

19:04:50.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:04:50.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples

19:04:50.595 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization

19:04:50.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation
19:04:50.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency

19:04:50.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode

19:04:50.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency

19:04:50.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial

19:04:50.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy

19:04:50.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation

19:04:50.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

19:04:50.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency

19:04:50.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

19:04:50.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest

19:04:50.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:04:50.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples

19:04:50.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization

19:04:50.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation

19:04:50.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency

19:04:50.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode

19:04:50.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency
19:04:50.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial

19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy

19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation
19:04:50.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

19:04:50.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency

19:04:50.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

19:04:50.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest

19:04:50.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:04:50.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter

19:04:50.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720

19:04:50.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy

19:04:50.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString

19:04:50.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics

19:04:50.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection

19:04:50.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval

19:04:50.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize

19:04:50.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

19:04:50.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues

19:04:50.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0

19:04:50.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.ListPopulationTest

19:04:50.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:50.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome, DisplayName: testGetFittestChromosome(org.apache.commons.math.genetics.ListPopulationTest)

19:04:50.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome

19:04:50.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:50.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.PercentileTest

19:04:50.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:04:50.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile

19:04:50.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample, DisplayName: testNISTExample(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample

19:04:50.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton, DisplayName: testSingleton(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton

19:04:50.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testLowPercentile, DisplayName: testLowPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testLowPercentile
19:04:50.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:04:50.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile, DisplayName: testSetQuantile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile

19:04:50.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5, DisplayName: test5(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile, DisplayName: testHighPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty, DisplayName: testNullEmpty(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty

19:04:50.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy

19:04:50.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation

19:04:50.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

19:04:50.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency

19:04:50.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:04:50.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomAdaptorTest

19:04:50.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:04:50.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor, DisplayName: testAdaptor(org.apache.commons.math.random.RandomAdaptorTest)

19:04:50.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor

19:04:50.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:04:50.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest

19:04:50.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:04:50.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

19:04:50.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic

19:04:50.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

19:04:50.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats

19:04:50.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

19:04:50.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch

19:04:50.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

19:04:50.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial

19:04:50.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:04:50.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.QRSolverTest

19:04:50.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6

19:04:50.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined, DisplayName: testOverdetermined(org.apache.commons.math.linear.QRSolverTest)

19:04:50.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined

19:04:50.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.QRSolverTest)

19:04:50.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve

19:04:50.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.linear.QRSolverTest)

19:04:50.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank

19:04:50.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors, DisplayName: testSolveRankErrors(org.apache.commons.math.linear.QRSolverTest)

19:04:50.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors

19:04:50.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.QRSolverTest)

19:04:50.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors

19:04:50.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined, DisplayName: testUnderdetermined(org.apache.commons.math.linear.QRSolverTest)

19:04:50.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined

19:04:50.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest

19:04:50.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18

19:04:50.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testConstrainedRosen, DisplayName: testConstrainedRosen(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:04:50.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:04:52.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testConstrainedRosen

19:04:52.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testElliRotated, DisplayName: testElliRotated(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:04:52.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated BEGIN

19:05:01.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testElliRotated

19:05:01.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testEllipse, DisplayName: testEllipse(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:01.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli BEGIN

19:05:01.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testEllipse

19:05:01.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testInitOutOfBounds, DisplayName: testInitOutOfBounds(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:05:01.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testInitOutOfBounds

19:05:01.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTwoAxes, DisplayName: testTwoAxes(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:01.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes BEGIN

19:05:01.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTwoAxes

19:05:01.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testProblemDimensionTooSmall, DisplayName: testProblemDimensionTooSmall(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:05:01.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testProblemDimensionTooSmall

19:05:01.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigar, DisplayName: testCigar(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:01.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar BEGIN

19:05:01.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigar

19:05:01.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRosen, DisplayName: testRosen(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:05:03.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRosen

19:05:03.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRastrigin, DisplayName: testRastrigin(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:03.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin BEGIN

19:05:03.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRastrigin

19:05:03.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSsDiffPow, DisplayName: testSsDiffPow(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:03.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow BEGIN

19:05:05.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSsDiffPow

19:05:05.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaximize, DisplayName: testMaximize(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:05.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN

19:05:05.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN

19:05:05.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaximize

19:05:05.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testAckley, DisplayName: testAckley(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testAckley

19:05:05.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigTab, DisplayName: testCigTab(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:05.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab BEGIN

19:05:05.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigTab

19:05:05.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testDiffPow, DisplayName: testDiffPow(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testDiffPow

19:05:05.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testBoundariesDimensionMismatch, DisplayName: testBoundariesDimensionMismatch(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:05:05.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testBoundariesDimensionMismatch
19:05:05.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSphere, DisplayName: testSphere(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:05.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere BEGIN

19:05:05.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSphere

19:05:05.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTablet, DisplayName: testTablet(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)

19:05:05.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet BEGIN

19:05:05.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet END
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTablet

19:05:05.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaxEvaluations, DisplayName: testMaxEvaluations(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

19:05:05.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaxEvaluations

19:05:05.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.RandomGeneratorAbstractTest

19:05:05.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41

19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntDirect

19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntDirect

19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextFloatDirect

19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextFloatDirect

19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBooleanDirect

19:05:05.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBooleanDirect

19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLongDirect

19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongDirect
19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNexBoolean2

19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBoolean2

19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testFloatDirect

19:05:05.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testFloatDirect

19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testDoubleDirect

19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testDoubleDirect

19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLong2

19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong2
19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntIAE

19:05:05.540 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntIAE

19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntNeg

19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntNeg

19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNexBytes

19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBytes

19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInt2

19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt2
19:05:05.542 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPascal

19:05:05.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPascal
19:05:05.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSample

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSample
19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntExtremeValues

19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntExtremeValues
19:05:05.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextUniformExclusiveEndpoints

19:05:05.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniformExclusiveEndpoints

19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null

19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextGaussian

19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGaussian

19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)


19:05:05.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - MethodName: testNextF

19:05:05.547 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextF

19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextT

19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextT

19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextChiSquare

19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextChiSquare

19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomGeneratorAbstractTest)

19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null

19:05:05.549 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureLong
* Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureLong
19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureHex

19:05:05.550 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureHex

19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureInt

19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureInt

19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPoissonConsistency

19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoissonConsistency
19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextHypergeometric

19:05:05.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHypergeometric

19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLongExtremeValues

19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongExtremeValues

19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextExponential
* Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextExponential

19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPoisson

19:05:05.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoisson

19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextUniform

19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniform

19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPermutation

19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPermutation
19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBinomial

19:05:05.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBinomial

19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testConfig

19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testConfig

19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInversionDeviate

19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInversionDeviate

19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextHex

19:05:05.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHex

19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInt

19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt

19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextCauchy

19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextCauchy

19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextGamma

19:05:05.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGamma

19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextWeibull

19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextWeibull

19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBeta

19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBeta
19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLong

19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong
19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomGeneratorAbstractTest)
Message : null
19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextZipf

19:05:05.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextZipf

19:05:05.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
TestResult: 1

19:05:05.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.ranking.NaturalRankingTest

19:05:05.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:05:05.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage, DisplayName: testNaNsMinimalTiesAverage(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage

19:05:05.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom, DisplayName: testNaNsFixedTiesRandom(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom

19:05:05.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential, DisplayName: testNaNsRemovedTiesSequential(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential

19:05:05.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum, DisplayName: testNaNsMinimalTiesMaximum(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum

19:05:05.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault, DisplayName: testDefault(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault

19:05:05.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs, DisplayName: testNaNsAndInfs(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs

19:05:05.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum, DisplayName: testNaNsMaximalTiesMinimum(org.apache.commons.math.stat.ranking.NaturalRankingTest)

19:05:05.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum

19:05:05.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0

19:05:05.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest

19:05:05.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:05:05.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck

19:05:05.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward

19:05:05.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep

19:05:05.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps

19:05:05.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep

19:05:05.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler

19:05:05.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)

19:05:05.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize

19:05:05.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest

19:05:05.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:05.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

19:05:05.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane

19:05:05.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

19:05:05.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions

19:05:05.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

19:05:05.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid

19:05:05.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives, DisplayName: testSplinePartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

19:05:05.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives

19:05:05.651 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives, DisplayName: testMatchingPartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)

19:05:05.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives

19:05:05.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.BigRealFieldTest

19:05:05.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:05.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.util.BigRealFieldTest)
19:05:05.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne

19:05:05.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.util.BigRealFieldTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero
19:05:05.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.BigRealFieldTest)

19:05:05.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial

19:05:05.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest

19:05:05.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:05.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

19:05:05.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters

19:05:05.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

19:05:05.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction

19:05:05.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)

19:05:05.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction

19:05:05.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest

19:05:05.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:05.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest)
19:05:05.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors

19:05:05.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:05:05.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest

19:05:05.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:05.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

19:05:05.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency

19:05:05.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

19:05:05.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone

19:05:05.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)

19:05:05.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization

19:05:05.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.ValueServerTest

19:05:05.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:05:05.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties, DisplayName: testProperties(org.apache.commons.math.random.ValueServerTest)

19:05:05.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties

19:05:05.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes, DisplayName: testModes(org.apache.commons.math.random.ValueServerTest)

19:05:05.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes

19:05:05.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill, DisplayName: testFill(org.apache.commons.math.random.ValueServerTest)

19:05:05.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill

19:05:05.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile, DisplayName: testEmptyDigestFile(org.apache.commons.math.random.ValueServerTest)

19:05:05.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile

19:05:05.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile, DisplayName: testEmptyReplayFile(org.apache.commons.math.random.ValueServerTest)

19:05:05.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile

19:05:05.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail, DisplayName: testNextDigestFail(org.apache.commons.math.random.ValueServerTest)

19:05:05.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail

19:05:05.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFixedSeed, DisplayName: testFixedSeed(org.apache.commons.math.random.ValueServerTest)

19:05:05.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFixedSeed

19:05:05.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay, DisplayName: testReplay(org.apache.commons.math.random.ValueServerTest)

19:05:05.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay

19:05:05.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest, DisplayName: testNextDigest(org.apache.commons.math.random.ValueServerTest)

19:05:05.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest

19:05:05.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
19:05:05.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest

19:05:05.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:05.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples
19:05:05.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization

19:05:05.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation

19:05:05.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency
19:05:05.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode

19:05:05.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency

19:05:05.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial

19:05:05.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy

19:05:05.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

19:05:05.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation

19:05:05.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency

19:05:05.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0

19:05:05.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.SubLineTest

19:05:05.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

19:05:05.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testEndPoints, DisplayName: testEndPoints(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testEndPoints

19:05:05.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoEndPoints, DisplayName: testNoEndPoints(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoEndPoints

19:05:05.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideInside, DisplayName: testIntersectionInsideInside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideInside
19:05:05.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:05.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryBoundary, DisplayName: testIntersectionBoundaryBoundary(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryBoundary

19:05:05.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionOutsideOutside, DisplayName: testIntersectionOutsideOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionOutsideOutside

19:05:05.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryOutside, DisplayName: testIntersectionBoundaryOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryOutside

19:05:05.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testSeveralSegments, DisplayName: testSeveralSegments(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testSeveralSegments

19:05:05.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfiniteNeg, DisplayName: testHalfInfiniteNeg(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfiniteNeg

19:05:05.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfinitePos, DisplayName: testHalfInfinitePos(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfinitePos

19:05:05.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideOutside, DisplayName: testIntersectionInsideOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideOutside

19:05:05.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoSegments, DisplayName: testNoSegments(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoSegments

19:05:05.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideBoundary, DisplayName: testIntersectionInsideBoundary(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)

19:05:05.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideBoundary

19:05:05.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
TestResult: 0

19:05:05.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.TransformerMapTest

19:05:05.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:05.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.util.TransformerMapTest)

19:05:05.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear

19:05:05.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer, DisplayName: testContainsTransformer(org.apache.commons.math.util.TransformerMapTest)

19:05:05.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers, DisplayName: testTransformers(org.apache.commons.math.util.TransformerMapTest)

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer, DisplayName: testPutTransformer(org.apache.commons.math.util.TransformerMapTest)

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass, DisplayName: testContainsClass(org.apache.commons.math.util.TransformerMapTest)

19:05:05.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass

19:05:05.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses, DisplayName: testClasses(org.apache.commons.math.util.TransformerMapTest)

19:05:05.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses

19:05:05.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.TransformerMapTest)

19:05:05.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial

19:05:05.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer, DisplayName: testRemoveTransformer(org.apache.commons.math.util.TransformerMapTest)

19:05:05.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer

19:05:05.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:05:05.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.EigenDecompositionImplTest

19:05:05.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

19:05:05.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit, DisplayName: testDimension4WithoutSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit

19:05:05.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors, DisplayName: testEigenvectors(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors

19:05:05.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal, DisplayName: testTridiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal

19:05:05.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1, DisplayName: testDimension1(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1

19:05:05.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2, DisplayName: testDimension2(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2

19:05:05.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3, DisplayName: testDimension3(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3

19:05:05.820 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions

19:05:05.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues, DisplayName: testEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues

19:05:05.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue, DisplayName: testRepeatedEigenvalue(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue

19:05:05.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt, DisplayName: testAEqualVDVt(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt

19:05:05.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308, DisplayName: testMath308(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308

19:05:05.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal, DisplayName: testDiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal

19:05:05.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues, DisplayName: testDistinctEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues

19:05:05.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal

19:05:05.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot, DisplayName: testDimension3MultipleRoot(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot

19:05:05.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02, DisplayName: testMathpbx02(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02

19:05:05.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03, DisplayName: testMathpbx03(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:05.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03

19:05:05.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix, DisplayName: testBigMatrix(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:06.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix

19:05:06.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit, DisplayName: testDimension4WithSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:06.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit

19:05:06.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide, DisplayName: testZeroDivide(org.apache.commons.math.linear.EigenDecompositionImplTest)

19:05:06.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide

19:05:06.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.ArrayFieldVectorTest

19:05:06.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:06.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors

19:05:06.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc

19:05:06.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors

19:05:06.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions

19:05:06.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut

19:05:06.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions

19:05:06.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testOuterProduct

19:05:06.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayFieldVectorTest)

19:05:06.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial

19:05:06.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolver2Test

19:05:06.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:06.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolver2Test)
19:05:06.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters

19:05:06.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

19:05:06.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction

19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function

19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)

19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction
19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest

19:05:06.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:06.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction, DisplayName: testCumulativeDensityFunction(org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest)

19:05:06.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction

19:05:06.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.UniformRandomGeneratorTest

19:05:06.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:06.599 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.UniformRandomGeneratorTest)

19:05:06.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation

19:05:06.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest
19:05:06.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:06.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid, DisplayName: testCentroid(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)

19:05:06.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid

19:05:06.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
* Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance
19:05:06.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference, DisplayName: testArrayIsReference(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
* Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference

19:05:06.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)

19:05:06.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial

19:05:06.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest

19:05:06.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:06.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)
19:05:06.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency

19:05:06.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)

19:05:06.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone

19:05:06.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)

19:05:06.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization

19:05:06.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolverTest

19:05:06.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:06.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolverTest)
19:05:06.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters

19:05:06.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)

19:05:06.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction

19:05:06.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolverTest)

19:05:06.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function

19:05:06.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)

19:05:06.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction

19:05:06.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest

19:05:06.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:06.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials, DisplayName: testFirstChebyshevPolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials

19:05:06.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre, DisplayName: testHighDegreeLegendre(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre

19:05:06.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials, DisplayName: testLaguerreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials

19:05:06.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials, DisplayName: testHermiteDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials

19:05:06.652 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds, DisplayName: testChebyshevBounds(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds

19:05:06.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials, DisplayName: testFirstHermitePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials

19:05:06.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials, DisplayName: testFirstLegendrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials

19:05:06.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials, DisplayName: testChebyshevDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials

19:05:06.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials, DisplayName: testFirstLaguerrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials

19:05:06.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials, DisplayName: testLegendreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)

19:05:06.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials

19:05:06.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.LineTest

19:05:06.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:06.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testAbscissa, DisplayName: testAbscissa(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testAbscissa
19:05:06.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOriginOffset, DisplayName: testOriginOffset(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOriginOffset

19:05:06.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testPointAt, DisplayName: testPointAt(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testPointAt

19:05:06.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testContains

19:05:06.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testIntersection

19:05:06.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOffset, DisplayName: testOffset(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOffset

19:05:06.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testTransform, DisplayName: testTransform(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testTransform

19:05:06.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testParallel, DisplayName: testParallel(org.apache.commons.math.geometry.euclidean.twod.LineTest)

19:05:06.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testParallel

19:05:06.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:05:06.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.util.ExceptionContextTest

19:05:06.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:06.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage, DisplayName: testNoArgAddMessage(org.apache.commons.math.exception.util.ExceptionContextTest)

19:05:06.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage

19:05:06.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable, DisplayName: testSerializeUnserializable(org.apache.commons.math.exception.util.ExceptionContextTest)

19:05:06.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable

19:05:06.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain, DisplayName: testMessageChain(org.apache.commons.math.exception.util.ExceptionContextTest)

19:05:06.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain

19:05:06.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize, DisplayName: testSerialize(org.apache.commons.math.exception.util.ExceptionContextTest)

19:05:06.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize

19:05:06.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext, DisplayName: testContext(org.apache.commons.math.exception.util.ExceptionContextTest)

19:05:06.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext

19:05:06.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.AbtractIntegerDistributionTest

19:05:06.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:06.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleDoubleArguments, DisplayName: testCumulativeProbabilitiesSingleDoubleArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)

19:05:06.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleDoubleArguments

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeDoubleArguments, DisplayName: testCumulativeProbabilitiesRangeDoubleArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeDoubleArguments

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleIntegerArguments, DisplayName: testCumulativeProbabilitiesSingleIntegerArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleIntegerArguments

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeIntegerArguments, DisplayName: testCumulativeProbabilitiesRangeIntegerArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)

19:05:06.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeIntegerArguments

19:05:06.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0

19:05:06.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.general.MinpackTest

19:05:06.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18

19:05:06.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1, DisplayName: testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1

19:05:06.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis, DisplayName: testMinpackBrownDennis(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis

19:05:06.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson, DisplayName: testMinpackJennrichSampson(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson

19:05:06.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok, DisplayName: testMinpackRosenbrok(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok

19:05:06.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional, DisplayName: testMinpackBox3Dimensional(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional

19:05:06.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley, DisplayName: testMinpackHelicalValley(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley

19:05:06.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer, DisplayName: testMinpackMeyer(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer

19:05:06.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank, DisplayName: testMinpackLinearFullRank(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank

19:05:06.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth, DisplayName: testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth

19:05:06.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1, DisplayName: testMinpackOsborne1(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1

19:05:06.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2, DisplayName: testMinpackOsborne2(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2

19:05:06.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson, DisplayName: testMinpackWatson(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson

19:05:06.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne, DisplayName: testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne

19:05:06.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular, DisplayName: testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular

19:05:06.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad, DisplayName: testMinpackChebyquad(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad

19:05:06.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows, DisplayName: testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows

19:05:06.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard, DisplayName: testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard

19:05:06.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear, DisplayName: testMinpackBrownAlmostLinear(org.apache.commons.math.optimization.general.MinpackTest)

19:05:06.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear

19:05:06.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SkewnessTest

19:05:06.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:05:06.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN

19:05:06.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples

19:05:06.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization

19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation

19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency
19:05:06.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode

19:05:06.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency

19:05:06.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial

19:05:06.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy

19:05:06.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation

19:05:06.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

19:05:06.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency

19:05:06.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0

19:05:06.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.BinaryMutationTest

19:05:06.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:06.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.BinaryMutationTest)

19:05:06.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate

19:05:06.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:05:06.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.fitting.GaussianFitterTest

19:05:06.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:06.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01, DisplayName: testFit01(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01

19:05:06.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02, DisplayName: testFit02(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02
19:05:06.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:06.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03, DisplayName: testFit03(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03

19:05:06.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04, DisplayName: testFit04(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04

19:05:06.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05, DisplayName: testFit05(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05

19:05:06.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06, DisplayName: testFit06(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06

19:05:06.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07, DisplayName: testFit07(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07

19:05:06.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519, DisplayName: testMath519(org.apache.commons.math.optimization.fitting.GaussianFitterTest)

19:05:06.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519

19:05:06.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest

19:05:06.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:06.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

19:05:06.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency

19:05:06.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

19:05:06.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone

19:05:06.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)

19:05:06.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization

19:05:06.966 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.RealVectorTest

19:05:06.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:06.968 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testMap, DisplayName: testMap(org.apache.commons.math.linear.RealVectorTest)

19:05:06.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testMap

19:05:06.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.linear.RealVectorTest)

19:05:07.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testClone

19:05:07.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelf, DisplayName: testCombineToSelf(org.apache.commons.math.linear.RealVectorTest)

19:05:07.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelf

19:05:07.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombinePrecondition, DisplayName: testCombinePrecondition(org.apache.commons.math.linear.RealVectorTest)

19:05:07.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombinePrecondition

19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombine, DisplayName: testCombine(org.apache.commons.math.linear.RealVectorTest)

19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombine

19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.RealVectorTest)

19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testSparseIterator
19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelfPrecondition, DisplayName: testCombineToSelfPrecondition(org.apache.commons.math.linear.RealVectorTest)

19:05:07.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelfPrecondition

19:05:07.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.RealVectorTest)

19:05:07.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testIterator

19:05:07.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

19:05:07.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.DimensionMismatchExceptionTest

19:05:07.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:07.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.DimensionMismatchExceptionTest)
19:05:07.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors

19:05:07.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

19:05:07.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.BigRealTest

19:05:07.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:07.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd

19:05:07.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.util.BigRealTest)

19:05:07.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract

19:05:07.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.util.BigRealTest)

19:05:07.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo

19:05:07.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.util.BigRealTest)

19:05:07.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue

19:05:07.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.util.BigRealTest)

19:05:07.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide

19:05:07.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply
19:05:07.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.BigRealTest)

19:05:07.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode

19:05:07.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.BigRealTest)

19:05:07.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial

19:05:07.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue

19:05:07.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.util.BigRealTest)

19:05:07.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor

19:05:07.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.data.LewTest

19:05:07.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:07.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LewTest)

19:05:07.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues

19:05:07.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathConfigurationExceptionTest

19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathConfigurationExceptionTest)

19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause
19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathConfigurationExceptionTest)

19:05:07.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor

19:05:07.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest

19:05:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean

19:05:07.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary

19:05:07.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization

19:05:07.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats

19:05:07.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy

19:05:07.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts

19:05:07.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions

19:05:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection

19:05:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState

19:05:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

19:05:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode

19:05:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest
19:05:07.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:07.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooSmallExceptionTest)

19:05:07.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors

19:05:07.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.PoissonDistributionTest
19:05:07.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:05:07.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability, DisplayName: testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability

19:05:07.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial, DisplayName: testCumulativeProbabilitySpecial(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial

19:05:07.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean

19:05:07.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability, DisplayName: testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability

19:05:07.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PoissonDistributionTest)
* Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts

19:05:07.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability, DisplayName: testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability

19:05:07.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability, DisplayName: testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability

19:05:07.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities

19:05:07.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:07.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling

19:05:07.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)
* Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities

19:05:07.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments

19:05:07.408 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PoissonDistributionTest)

19:05:07.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments

19:05:07.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.events.OverlappingEventsTest

19:05:07.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:05:07.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents0, DisplayName: testOverlappingEvents0(org.apache.commons.math.ode.events.OverlappingEventsTest)

19:05:07.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents0

19:05:07.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents1, DisplayName: testOverlappingEvents1(org.apache.commons.math.ode.events.OverlappingEventsTest)

19:05:07.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents1

19:05:07.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest

19:05:07.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:05:07.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)
19:05:07.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues

19:05:07.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)

19:05:07.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor

19:05:07.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary

19:05:07.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:07.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestBinary)

19:05:07.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test

19:05:07.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest

19:05:07.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:07.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin, DisplayName: testInterpolateSin(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

19:05:07.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin

19:05:07.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

19:05:07.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment

19:05:07.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

19:05:07.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments

19:05:07.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

19:05:07.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear

19:05:07.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)

19:05:07.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment

19:05:07.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest

19:05:07.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28

19:05:07.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat

19:05:07.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals

19:05:07.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSeparator

19:05:07.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseZeroX

19:05:07.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNan

19:05:07.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc

19:05:07.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeX

19:05:07.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeY

19:05:07.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeZ

19:05:07.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeAll

19:05:07.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D

19:05:07.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenPrefix

19:05:07.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSuffix

19:05:07.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeX

19:05:07.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeY

19:05:07.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeZ

19:05:07.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace

19:05:07.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc

19:05:07.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity

19:05:07.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity

19:05:07.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting
19:05:07.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals

19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals
19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testPositiveInfinity
19:05:07.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting

19:05:07.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNan

19:05:07.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity

19:05:07.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)

19:05:07.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals

19:05:07.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.RandomDataTest
19:05:07.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:07.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 29

19:05:07.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomDataTest)

19:05:07.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal

19:05:07.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomDataTest)

19:05:07.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample

19:05:07.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomDataTest)

19:05:07.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues

19:05:07.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomDataTest)

19:05:07.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints

19:05:07.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomDataTest)

19:05:07.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian

19:05:07.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomDataTest)

19:05:07.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF

19:05:07.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomDataTest)

19:05:07.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT

19:05:07.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomDataTest)

19:05:07.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare

19:05:07.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomDataTest)

19:05:07.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong

19:05:07.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomDataTest)

19:05:07.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex

19:05:07.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomDataTest)

19:05:07.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt

19:05:07.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomDataTest)

19:05:09.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency

19:05:09.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomDataTest)

19:05:09.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric

19:05:09.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomDataTest)
* Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues

19:05:09.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomDataTest)

19:05:09.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential

19:05:09.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomDataTest)

19:05:09.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson

19:05:09.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomDataTest)

19:05:09.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform

19:05:09.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomDataTest)

19:05:09.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation

19:05:09.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomDataTest)

19:05:09.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial

19:05:09.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomDataTest)

19:05:09.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig

19:05:09.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomDataTest)

19:05:09.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate

19:05:09.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomDataTest)

19:05:09.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex

19:05:09.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomDataTest)

19:05:09.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt

19:05:09.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomDataTest)

19:05:09.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy

19:05:09.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomDataTest)

19:05:09.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma

19:05:09.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomDataTest)

19:05:09.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull

19:05:09.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomDataTest)

19:05:09.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta

19:05:09.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomDataTest)

19:05:09.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong

19:05:09.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomDataTest)

19:05:09.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf

19:05:09.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 29
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.MaxCountExceededExceptionTest

19:05:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.MaxCountExceededExceptionTest)

19:05:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors

19:05:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.LogisticTest
19:05:09.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:05:09.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues

19:05:09.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1

19:05:09.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2

19:05:09.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3

19:05:09.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5, DisplayName: testGradientComponent5(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5

19:05:09.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1

19:05:09.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2
19:05:09.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid, DisplayName: testCompareDerivativeSigmoid(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid
19:05:09.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid, DisplayName: testCompareSigmoid(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid

19:05:09.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4, DisplayName: testGradientComponent0Component4(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4

19:05:09.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3, DisplayName: testGradientComponent1Component2Component3(org.apache.commons.math.analysis.function.LogisticTest)

19:05:09.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3

19:05:09.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.GaussianRandomGeneratorTest
19:05:09.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:09.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.GaussianRandomGeneratorTest)

19:05:09.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation

19:05:09.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

19:05:09.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest

19:05:09.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

19:05:09.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testVectorialProducts, DisplayName: testVectorialProducts(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testVectorialProducts

19:05:09.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateCrossProduct, DisplayName: testAccurateCrossProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateCrossProduct

19:05:09.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProductCancellation, DisplayName: testCrossProductCancellation(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProductCancellation
19:05:09.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAdd

19:05:09.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceInf, DisplayName: testDistanceInf(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceInf

19:05:09.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testSubtract

19:05:09.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngular, DisplayName: testAngular(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngular

19:05:09.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngle, DisplayName: testAngle(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
19:05:09.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngle

19:05:09.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm1, DisplayName: testNorm1(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm1

19:05:09.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm

19:05:09.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testConstructors

19:05:09.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testScalarProduct, DisplayName: testScalarProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testScalarProduct

19:05:09.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDotProduct, DisplayName: testDotProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDotProduct

19:05:09.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProduct, DisplayName: testCrossProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProduct

19:05:09.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testOrthogonal, DisplayName: testOrthogonal(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testOrthogonal

19:05:09.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngularSeparation, DisplayName: testAngularSeparation(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)

19:05:09.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngularSeparation

19:05:09.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormalize, DisplayName: testNormalize(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormalize
19:05:09.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance

19:05:09.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance1, DisplayName: testDistance1(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance1

19:05:09.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCoordinates, DisplayName: testCoordinates(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCoordinates

19:05:09.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateDotProduct, DisplayName: testAccurateDotProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateDotProduct

19:05:09.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceSq, DisplayName: testDistanceSq(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceSq

19:05:09.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormInf, DisplayName: testNormInf(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormInf

19:05:09.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.HarmonicOscillatorTest

19:05:09.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

19:05:09.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative

19:05:09.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
* Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues
19:05:09.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue

19:05:09.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1

19:05:09.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2

19:05:09.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3

19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4
19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)

19:05:09.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient

19:05:09.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest

19:05:09.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28

19:05:09.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testConstructorSingleFormat

19:05:09.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals

19:05:09.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSeparator

19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseZeroX
19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNan
19:05:09.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc

19:05:09.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeX

19:05:09.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeY

19:05:09.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeZ

19:05:09.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeAll
19:05:09.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testDefaultFormatVector3D

19:05:09.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenPrefix

19:05:09.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSuffix

19:05:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeX

19:05:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeY

19:05:09.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeZ

19:05:09.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace

19:05:09.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
19:05:09.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: tesNegativeInfinity

19:05:09.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeInfinity

19:05:09.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNonDefaultSetting

19:05:09.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleNoDecimals

19:05:09.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.586 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals

19:05:09.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testPositiveInfinity

19:05:09.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNonDefaultSetting

19:05:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNan

19:05:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParsePositiveInfinity
19:05:09.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)

19:05:09.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimals

19:05:09.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.ChiSquareTestTest

19:05:09.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7

19:05:09.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts, DisplayName: testChiSquareDataSetsComparisonEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

19:05:09.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts

19:05:09.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.ChiSquareTestTest)

19:05:09.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence

19:05:09.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts, DisplayName: testChiSquareDataSetsComparisonUnEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

19:05:09.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts

19:05:09.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.ChiSquareTestTest)
* Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount
19:05:09.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.ChiSquareTestTest)
* Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic

19:05:09.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.ChiSquareTestTest)

19:05:09.593 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare

19:05:09.594 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts, DisplayName: testChiSquareDataSetsComparisonBadCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)

19:05:09.594 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts

19:05:09.594 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest

19:05:09.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:09.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck

19:05:09.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward

19:05:09.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps

19:05:09.601 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.602 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent

19:05:09.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep

19:05:09.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative

19:05:09.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck

19:05:09.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents

19:05:09.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler

19:05:09.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)

19:05:09.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance

19:05:09.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.NormalDistributionTest

19:05:09.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

19:05:09.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues, DisplayName: testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues

19:05:09.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions
19:05:09.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

19:05:09.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation, DisplayName: testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation

19:05:09.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles, DisplayName: testQuantiles(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles

19:05:09.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean, DisplayName: testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean

19:05:09.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280, DisplayName: testMath280(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280

19:05:09.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts

19:05:09.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity

19:05:09.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:05:09.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities

19:05:09.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:09.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling

19:05:09.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities

19:05:09.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments

19:05:09.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.NormalDistributionTest)

19:05:09.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency

19:05:09.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15

19:05:09.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.PascalDistributionTest

19:05:09.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:05:09.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts

19:05:09.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0

19:05:09.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1

19:05:09.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities

19:05:09.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:09.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling

19:05:09.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities

19:05:09.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments

19:05:09.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PascalDistributionTest)

19:05:09.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments

19:05:09.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.WeibullDistributionTest

19:05:09.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:09.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha, DisplayName: testAlpha(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha

19:05:09.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta, DisplayName: testBeta(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta

19:05:09.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts

19:05:09.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:05:09.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities

19:05:09.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:09.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling

19:05:09.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities

19:05:09.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments

19:05:09.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.WeibullDistributionTest)

19:05:09.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency

19:05:09.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest

19:05:09.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:05:09.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

19:05:09.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency

19:05:09.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

19:05:09.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization

19:05:09.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.events.EventStateTest

19:05:09.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:09.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents, DisplayName: closeEvents(org.apache.commons.math.ode.events.EventStateTest)

19:05:09.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents

19:05:09.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest

19:05:09.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:09.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage, DisplayName: testLessThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

19:05:09.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage

19:05:09.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine, DisplayName: testSine(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

19:05:09.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine

19:05:09.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples, DisplayName: testTooFewSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

19:05:09.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples

19:05:09.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage, DisplayName: testMoreThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

19:05:09.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage

19:05:09.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples, DisplayName: testUnsortedSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

19:05:09.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples

19:05:09.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.ContinuousOutputModelTest

19:05:09.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:09.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)

19:05:09.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries

19:05:09.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging, DisplayName: testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)

19:05:09.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging

19:05:09.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess, DisplayName: testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)

19:05:09.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess

19:05:09.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions, DisplayName: testErrorConditions(org.apache.commons.math.ode.ContinuousOutputModelTest)

19:05:09.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions

19:05:09.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.util.ArgUtilsTest

19:05:09.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

19:05:09.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten, DisplayName: testFlatten(org.apache.commons.math.exception.util.ArgUtilsTest)

19:05:09.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten

19:05:09.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexTableauTest

19:05:09.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:09.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization, DisplayName: testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)

19:05:09.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization

19:05:09.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars, DisplayName: testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)

19:05:09.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars

19:05:09.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)

19:05:09.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial

19:05:09.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective, DisplayName: testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)

19:05:09.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective

19:05:09.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumLogTest

19:05:09.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11

19:05:09.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

19:05:09.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues

19:05:09.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples

19:05:09.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

19:05:09.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization

19:05:09.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation

19:05:09.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency

19:05:09.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode

19:05:09.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency

19:05:09.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

19:05:09.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial

19:05:09.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy

19:05:09.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation

19:05:09.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency

19:05:09.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.FieldLUDecompositionImplTest

19:05:09.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:05:09.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation

19:05:09.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular

19:05:09.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions

19:05:09.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare

19:05:09.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular

19:05:09.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular

19:05:09.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU

19:05:09.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1

19:05:09.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

19:05:09.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2

19:05:09.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ExponentialDistributionTest

19:05:09.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:05:09.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions

19:05:09.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2, DisplayName: testCumulativeProbability2(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2

19:05:09.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes

19:05:09.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts

19:05:09.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity

19:05:09.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

19:05:09.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors, DisplayName: testMeanAccessors(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors

19:05:09.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities

19:05:09.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:09.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling

19:05:09.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities

19:05:09.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments

19:05:09.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ExponentialDistributionTest)

19:05:09.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency

19:05:09.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.PolynomialFitterTest

19:05:09.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:09.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError, DisplayName: testSmallError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

19:05:09.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError

19:05:09.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable, DisplayName: testRedundantSolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

19:05:09.828 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable

19:05:09.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

19:05:09.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError

19:05:09.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable, DisplayName: testRedundantUnsolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

19:05:09.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable

19:05:09.838 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VarianceTest

19:05:09.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

19:05:09.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN

19:05:09.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance, DisplayName: testWeightedVariance(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance

19:05:09.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation

19:05:09.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples

19:05:09.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization

19:05:09.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation

19:05:09.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency

19:05:09.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode

19:05:09.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency

19:05:09.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial

19:05:09.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy

19:05:09.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation

19:05:09.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

19:05:09.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency

19:05:09.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.HypergeometricDistributionTest

19:05:09.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

19:05:09.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues

19:05:10.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures, DisplayName: testDegenerateNoFailures(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures

19:05:10.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors

19:05:10.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions

19:05:10.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses, DisplayName: testDegenerateNoSuccesses(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses

19:05:10.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample, DisplayName: testDegenerateFullSample(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample

19:05:10.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts

19:05:10.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues, DisplayName: testMoreLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues

19:05:10.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities

19:05:10.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities

19:05:10.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling

19:05:10.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)
* Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities

19:05:10.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments

19:05:10.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

19:05:10.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments

19:05:10.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest

19:05:10.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

19:05:10.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

19:05:10.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters

19:05:10.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

19:05:10.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction

19:05:10.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

19:05:10.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function

19:05:10.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexSolverTest

19:05:10.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 22

19:05:10.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative, DisplayName: testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative

19:05:10.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon, DisplayName: testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon

19:05:10.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution, DisplayName: testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution

19:05:10.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint, DisplayName: testSingleVariableAndConstraint(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint

19:05:10.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver, DisplayName: testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver

19:05:10.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ, DisplayName: testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ

19:05:10.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ, DisplayName: testMath290LEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ

19:05:10.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel, DisplayName: testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel

19:05:10.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution, DisplayName: testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution

19:05:10.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272, DisplayName: testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272

19:05:10.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286, DisplayName: testMath286(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286

19:05:10.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288, DisplayName: testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288

19:05:10.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293, DisplayName: testMath293(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293

19:05:10.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars, DisplayName: testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars

19:05:10.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization, DisplayName: testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization

19:05:10.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2, DisplayName: testMath434PivotRowSelection2(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2

19:05:10.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy, DisplayName: testDegeneracy(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy

19:05:10.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection, DisplayName: testMath434PivotRowSelection(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection

19:05:10.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel, DisplayName: testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel

19:05:10.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable, DisplayName: testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable

19:05:10.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution, DisplayName: testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution

19:05:10.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable, DisplayName: testMath434NegativeVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

19:05:10.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable

19:05:10.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 22
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.univariate.BrentOptimizerTest

19:05:10.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:10.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax, DisplayName: testQuinticMax(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

19:05:10.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax

19:05:10.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

19:05:10.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin

19:05:10.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints, DisplayName: testMinEndpoints(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

19:05:10.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints

19:05:10.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics, DisplayName: testQuinticMinStatistics(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

19:05:10.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics

19:05:10.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

19:05:10.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin

19:05:10.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.RiddersSolverTest

19:05:10.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

19:05:10.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

19:05:10.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters

19:05:10.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

19:05:10.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction

19:05:10.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

19:05:10.799 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function

19:05:10.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

19:05:10.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction

19:05:10.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerTest

19:05:10.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

19:05:10.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)

19:05:10.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries

19:05:10.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd, DisplayName: testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)

19:05:10.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd

19:05:10.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.CholeskyDecompositionImplTest

19:05:10.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

19:05:10.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues

19:05:10.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException, DisplayName: testNotSymmetricMatrixException(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException

19:05:10.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions

19:05:10.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274, DisplayName: testMath274(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274

19:05:10.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite, DisplayName: testNotPositiveDefinite(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed, DisplayName: testLTTransposed(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed

19:05:10.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT, DisplayName: testAEqualLLT(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

19:05:10.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT

19:05:10.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest

19:05:10.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

19:05:10.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean

19:05:10.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary

19:05:10.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts

19:05:10.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions

19:05:10.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection

19:05:10.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState

19:05:10.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

19:05:10.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode

19:05:10.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest

19:05:10.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

19:05:10.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation, DisplayName: testAggregation(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

19:05:10.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation

19:05:10.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues, DisplayName: testAggregateSpecialValues(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

19:05:10.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues

19:05:10.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency, DisplayName: testAggregationConsistency(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

19:05:10.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency

19:05:10.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate, DisplayName: testAggregate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

19:05:10.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate

19:05:10.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate, DisplayName: testAggregateDegenerate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

19:05:10.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate

19:05:10.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
TestResult: 0

19:05:11.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - <<< End subprocess output
19:05:12.331 [main] DEBUG f.i.l.r.n.s.g.GZoltarSuspiciousProgramStatements - Suspicious statements:
GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=3410, Suspiciousness=0.004481377120091212]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=98, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=99, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=101, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=102, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=132, Suspiciousness=0.038124642583151166]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=273, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1294, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=39, Suspiciousness=0.04075695729696112]
GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=40, Suspiciousness=0.04075695729696112]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=268, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
19:05:13.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause started...]
19:05:13.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
19:05:13.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. org.apache.commons.math.ConvergenceExceptionTest#testConstructor started...]
19:05:13.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
19:05:13.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause started...]
19:05:13.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
19:05:13.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. org.apache.commons.math.MathConfigurationExceptionTest#testConstructor started...]
19:05:13.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
19:05:13.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. org.apache.commons.math.MathExceptionTest#testSerialization started...]
19:05:13.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
19:05:13.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. org.apache.commons.math.MathExceptionTest#testConstructorCause started...]
19:05:13.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
19:05:13.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. org.apache.commons.math.MathExceptionTest#testPrintStackTrace started...]
19:05:13.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
19:05:13.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. org.apache.commons.math.MathExceptionTest#testConstructor started...]
19:05:13.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
19:05:13.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes started...]
19:05:13.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
19:05:13.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. org.apache.commons.math.RetryRunnerTest#testRetryFailAlways started...]
19:05:13.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
19:05:13.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. org.apache.commons.math.analysis.FunctionUtilsTest#testCollector started...]
19:05:13.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
19:05:13.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments started...]
19:05:13.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
19:05:13.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. org.apache.commons.math.analysis.FunctionUtilsTest#testAdd started...]
19:05:13.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
19:05:13.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. org.apache.commons.math.analysis.FunctionUtilsTest#testSinc started...]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. org.apache.commons.math.analysis.FunctionUtilsTest#testCombine started...]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. org.apache.commons.math.analysis.FunctionUtilsTest#testCompose started...]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
19:05:13.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply started...]
19:05:13.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
19:05:13.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. org.apache.commons.math.analysis.function.GaussianTest#testDerivative started...]
19:05:13.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
19:05:13.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN started...]
19:05:13.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
19:05:13.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. org.apache.commons.math.analysis.function.GaussianTest#testSomeValues started...]
19:05:13.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
19:05:13.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. org.apache.commons.math.analysis.function.GaussianTest#testParametricValue started...]
19:05:13.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
19:05:13.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. org.apache.commons.math.analysis.function.GaussianTest#testPreconditions started...]
19:05:13.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
19:05:13.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1 started...]
19:05:13.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2 started...]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. SUCCESS]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3 started...]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4 started...]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. SUCCESS]
19:05:13.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5 started...]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6 started...]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. SUCCESS]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments started...]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments started...]
19:05:13.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
19:05:13.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient started...]
19:05:13.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
19:05:13.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative started...]
19:05:13.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
19:05:13.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues started...]
19:05:13.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
19:05:13.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue started...]
19:05:13.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
19:05:13.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1 started...]
19:05:13.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
19:05:13.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2 started...]
19:05:13.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3 started...]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4 started...]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient started...]
19:05:13.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
19:05:13.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. org.apache.commons.math.analysis.function.LogisticTest#testSomeValues started...]
19:05:13.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
19:05:13.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1 started...]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2 started...]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3 started...]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
19:05:13.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4 started...]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5 started...]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6 started...]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5 started...]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
19:05:13.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1 started...]
19:05:13.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
19:05:13.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2 started...]
19:05:13.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
19:05:13.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid started...]
19:05:13.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
19:05:13.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid started...]
19:05:13.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
19:05:13.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4 started...]
19:05:13.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
19:05:13.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3 started...]
19:05:13.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
19:05:13.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. org.apache.commons.math.analysis.function.LogitTest#testDerivative started...]
19:05:13.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
19:05:13.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. org.apache.commons.math.analysis.function.LogitTest#testSomeValues started...]
19:05:13.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
19:05:13.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. org.apache.commons.math.analysis.function.LogitTest#testParametricValue started...]
19:05:13.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
19:05:13.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1 started...]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2 started...]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3 started...]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4 started...]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
19:05:13.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5 started...]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6 started...]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. org.apache.commons.math.analysis.function.LogitTest#testPreconditions1 started...]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. org.apache.commons.math.analysis.function.LogitTest#testPreconditions2 started...]
19:05:13.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments started...]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction started...]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction started...]
19:05:13.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. org.apache.commons.math.analysis.function.SigmoidTest#testDerivative started...]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues started...]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue started...]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1 started...]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
19:05:13.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2 started...]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3 started...]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4 started...]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments started...]
19:05:13.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. SUCCESS]
19:05:13.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues started...]
19:05:13.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. SUCCESS]
19:05:13.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1 started...]
19:05:13.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. SUCCESS]
19:05:13.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2 started...]
19:05:13.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. SUCCESS]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3 started...]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. SUCCESS]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4 started...]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. SUCCESS]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5 started...]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. SUCCESS]
19:05:13.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6 started...]
19:05:13.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. SUCCESS]
19:05:13.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside started...]
19:05:13.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. SUCCESS]
19:05:13.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration started...]
19:05:13.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. SUCCESS]
19:05:13.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction started...]
19:05:13.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. SUCCESS]
19:05:13.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction started...]
19:05:13.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. SUCCESS]
19:05:13.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464 started...]
19:05:13.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. SUCCESS]
19:05:13.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters started...]
19:05:13.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. SUCCESS]
19:05:13.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction started...]
19:05:13.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. SUCCESS]
19:05:13.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction started...]
19:05:13.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. SUCCESS]
19:05:13.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters started...]
19:05:13.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. SUCCESS]
19:05:13.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction started...]
19:05:13.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. SUCCESS]
19:05:13.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction started...]
19:05:13.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. SUCCESS]
19:05:13.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters started...]
19:05:13.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. SUCCESS]
19:05:13.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction started...]
19:05:13.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. SUCCESS]
19:05:13.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction started...]
19:05:13.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. SUCCESS]
19:05:13.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane started...]
19:05:13.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. SUCCESS]
19:05:13.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions started...]
19:05:13.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. SUCCESS]
19:05:13.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid started...]
19:05:13.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. SUCCESS]
19:05:13.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives started...]
19:05:13.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. SUCCESS]
19:05:13.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives started...]
19:05:14.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. SUCCESS]
19:05:14.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane started...]
19:05:14.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. SUCCESS]
19:05:14.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions started...]
19:05:14.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. SUCCESS]
19:05:14.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid started...]
19:05:14.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. SUCCESS]
19:05:14.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters started...]
19:05:14.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. SUCCESS]
19:05:14.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction started...]
19:05:14.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. SUCCESS]
19:05:14.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function started...]
19:05:14.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. SUCCESS]
19:05:14.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
19:05:14.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. SUCCESS]
19:05:14.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments started...]
19:05:14.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. SUCCESS]
19:05:14.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear started...]
19:05:14.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. SUCCESS]
19:05:14.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
19:05:14.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. SUCCESS]
19:05:14.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness started...]
19:05:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. SUCCESS]
19:05:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine started...]
19:05:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. SUCCESS]
19:05:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth started...]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. SUCCESS]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1 started...]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. SUCCESS]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2 started...]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. SUCCESS]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3 started...]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. SUCCESS]
19:05:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4 started...]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. SUCCESS]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5 started...]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. SUCCESS]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6 started...]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. SUCCESS]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints started...]
19:05:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. SUCCESS]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData started...]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. SUCCESS]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1 started...]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. SUCCESS]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2 started...]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. SUCCESS]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint started...]
19:05:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. SUCCESS]
19:05:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1 started...]
19:05:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. SUCCESS]
19:05:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2 started...]
19:05:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. SUCCESS]
19:05:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers started...]
19:05:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. SUCCESS]
19:05:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine started...]
19:05:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. SUCCESS]
19:05:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments started...]
19:05:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. SUCCESS]
19:05:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights started...]
19:05:14.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. SUCCESS]
19:05:14.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D started...]
19:05:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. SUCCESS]
19:05:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D started...]
19:05:14.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. SUCCESS]
19:05:14.295 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters started...]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. SUCCESS]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction started...]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. SUCCESS]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function started...]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. SUCCESS]
19:05:14.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane started...]
19:05:14.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. SUCCESS]
19:05:14.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions started...]
19:05:14.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. SUCCESS]
19:05:14.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid started...]
19:05:14.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. SUCCESS]
19:05:14.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin started...]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. SUCCESS]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. SUCCESS]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments started...]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. SUCCESS]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear started...]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. SUCCESS]
19:05:14.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
19:05:14.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. SUCCESS]
19:05:14.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane started...]
19:05:14.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. SUCCESS]
19:05:14.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave started...]
19:05:14.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. SUCCESS]
19:05:14.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions started...]
19:05:14.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. SUCCESS]
19:05:14.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane started...]
19:05:14.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. SUCCESS]
19:05:14.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave started...]
19:05:14.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. SUCCESS]
19:05:14.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions started...]
19:05:14.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. SUCCESS]
19:05:14.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage started...]
19:05:14.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. SUCCESS]
19:05:14.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine started...]
19:05:14.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. SUCCESS]
19:05:14.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples started...]
19:05:14.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. SUCCESS]
19:05:14.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage started...]
19:05:14.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. SUCCESS]
19:05:14.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples started...]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. SUCCESS]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction started...]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. SUCCESS]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction started...]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. SUCCESS]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters started...]
19:05:14.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. SUCCESS]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction started...]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. SUCCESS]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction started...]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. SUCCESS]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction started...]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. SUCCESS]
19:05:14.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters started...]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. SUCCESS]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction started...]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. SUCCESS]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison started...]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. SUCCESS]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic started...]
19:05:14.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. SUCCESS]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication started...]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. SUCCESS]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition started...]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. SUCCESS]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants started...]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. SUCCESS]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic started...]
19:05:14.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. SUCCESS]
19:05:14.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341 started...]
19:05:14.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. SUCCESS]
19:05:14.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear started...]
19:05:14.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. SUCCESS]
19:05:14.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial started...]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. SUCCESS]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString started...]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. SUCCESS]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction started...]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. SUCCESS]
19:05:14.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues started...]
19:05:14.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. SUCCESS]
19:05:14.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor started...]
19:05:14.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. SUCCESS]
19:05:14.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials started...]
19:05:14.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. SUCCESS]
19:05:14.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre started...]
19:05:14.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. SUCCESS]
19:05:14.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials started...]
19:05:14.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. SUCCESS]
19:05:14.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials started...]
19:05:14.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. SUCCESS]
19:05:14.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds started...]
19:05:14.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. SUCCESS]
19:05:14.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials started...]
19:05:14.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. SUCCESS]
19:05:14.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials started...]
19:05:14.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. SUCCESS]
19:05:14.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials started...]
19:05:14.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. SUCCESS]
19:05:14.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials started...]
19:05:14.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. SUCCESS]
19:05:14.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials started...]
19:05:14.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. SUCCESS]
19:05:14.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369 started...]
19:05:14.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. SUCCESS]
19:05:14.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero started...]
19:05:14.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. SUCCESS]
19:05:14.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero started...]
19:05:14.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. SUCCESS]
19:05:14.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton started...]
19:05:14.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. SUCCESS]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy started...]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. SUCCESS]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1 started...]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. SUCCESS]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2 started...]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. SUCCESS]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3 started...]
19:05:14.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. SUCCESS]
19:05:14.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK started...]
19:05:14.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. SUCCESS]
19:05:14.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide started...]
19:05:14.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. SUCCESS]
19:05:14.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide started...]
19:05:14.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. SUCCESS]
19:05:14.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide started...]
19:05:14.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. SUCCESS]
19:05:14.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide started...]
19:05:14.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. SUCCESS]
19:05:14.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints started...]
19:05:14.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. SUCCESS]
19:05:14.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints started...]
19:05:14.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. SUCCESS]
19:05:14.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero started...]
19:05:14.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. SUCCESS]
19:05:14.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero started...]
19:05:14.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. SUCCESS]
19:05:14.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints started...]
19:05:14.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. SUCCESS]
19:05:14.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess started...]
19:05:14.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. SUCCESS]
19:05:14.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints started...]
19:05:14.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. SUCCESS]
19:05:14.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero started...]
19:05:14.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. SUCCESS]
19:05:14.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero started...]
19:05:14.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. SUCCESS]
19:05:14.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide started...]
19:05:14.483 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. SUCCESS]
19:05:14.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide started...]
19:05:14.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. SUCCESS]
19:05:14.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide started...]
19:05:14.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. SUCCESS]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide started...]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. SUCCESS]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints started...]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. SUCCESS]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints started...]
19:05:14.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. SUCCESS]
19:05:14.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero started...]
19:05:14.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. SUCCESS]
19:05:14.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero started...]
19:05:14.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. SUCCESS]
19:05:14.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction started...]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. SUCCESS]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction started...]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. SUCCESS]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters started...]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. SUCCESS]
19:05:14.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction started...]
19:05:14.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. SUCCESS]
19:05:14.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters started...]
19:05:14.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. SUCCESS]
19:05:14.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction started...]
19:05:14.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. SUCCESS]
19:05:14.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function started...]
19:05:14.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. SUCCESS]
19:05:14.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction started...]
19:05:14.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. SUCCESS]
19:05:14.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters started...]
19:05:14.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. SUCCESS]
19:05:14.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction started...]
19:05:14.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. SUCCESS]
19:05:14.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function started...]
19:05:14.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. SUCCESS]
19:05:14.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction started...]
19:05:14.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. SUCCESS]
19:05:14.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero started...]
19:05:14.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. SUCCESS]
19:05:14.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero started...]
19:05:14.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. SUCCESS]
19:05:14.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide started...]
19:05:14.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. SUCCESS]
19:05:14.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide started...]
19:05:14.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. SUCCESS]
19:05:14.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide started...]
19:05:14.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. SUCCESS]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide started...]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. SUCCESS]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints started...]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. SUCCESS]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints started...]
19:05:14.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. SUCCESS]
19:05:14.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero started...]
19:05:14.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. SUCCESS]
19:05:14.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero started...]
19:05:14.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. SUCCESS]
19:05:14.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631 started...]
19:05:14.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. SUCCESS]
19:05:14.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide started...]
19:05:14.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. SUCCESS]
19:05:14.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide started...]
19:05:14.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. SUCCESS]
19:05:14.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide started...]
19:05:14.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. SUCCESS]
19:05:14.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide started...]
19:05:14.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. SUCCESS]
19:05:14.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints started...]
19:05:14.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. SUCCESS]
19:05:14.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints started...]
19:05:14.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. SUCCESS]
19:05:14.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero started...]
19:05:14.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. SUCCESS]
19:05:14.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero started...]
19:05:14.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. SUCCESS]
19:05:14.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters started...]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. SUCCESS]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction started...]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. SUCCESS]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function started...]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. SUCCESS]
19:05:14.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction started...]
19:05:14.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. SUCCESS]
19:05:14.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide started...]
19:05:14.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. SUCCESS]
19:05:14.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide started...]
19:05:14.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. SUCCESS]
19:05:14.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide started...]
19:05:14.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. SUCCESS]
19:05:14.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide started...]
19:05:14.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. SUCCESS]
19:05:14.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints started...]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. SUCCESS]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints started...]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. SUCCESS]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero started...]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. SUCCESS]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero started...]
19:05:14.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. SUCCESS]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot started...]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. SUCCESS]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin started...]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. SUCCESS]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction started...]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. SUCCESS]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin started...]
19:05:14.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. SUCCESS]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy started...]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. SUCCESS]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc started...]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. SUCCESS]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull started...]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. SUCCESS]
19:05:14.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin started...]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. SUCCESS]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial started...]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. SUCCESS]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations started...]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. SUCCESS]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints started...]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. SUCCESS]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot started...]
19:05:14.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. SUCCESS]
19:05:14.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull started...]
19:05:14.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. SUCCESS]
19:05:14.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints started...]
19:05:14.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. SUCCESS]
19:05:14.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. org.apache.commons.math.complex.ComplexFieldTest#testOne started...]
19:05:14.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. SUCCESS]
19:05:14.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. org.apache.commons.math.complex.ComplexFieldTest#testZero started...]
19:05:14.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. SUCCESS]
19:05:14.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. org.apache.commons.math.complex.ComplexFieldTest#testSerial started...]
19:05:14.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. SUCCESS]
19:05:14.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary started...]
19:05:14.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. SUCCESS]
19:05:14.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat started...]
19:05:14.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. SUCCESS]
19:05:14.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals started...]
19:05:14.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. SUCCESS]
19:05:14.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary started...]
19:05:14.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. SUCCESS]
19:05:14.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar started...]
19:05:14.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. SUCCESS]
19:05:14.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber started...]
19:05:14.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. SUCCESS]
19:05:14.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. org.apache.commons.math.complex.ComplexFormatTest#testNan started...]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. SUCCESS]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. SUCCESS]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat started...]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. SUCCESS]
19:05:14.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth started...]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. SUCCESS]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal started...]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. SUCCESS]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat started...]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. SUCCESS]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:14.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. SUCCESS]
19:05:14.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity started...]
19:05:14.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. SUCCESS]
19:05:14.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary started...]
19:05:14.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. SUCCESS]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity started...]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. SUCCESS]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar started...]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. SUCCESS]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex started...]
19:05:14.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. SUCCESS]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals started...]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. SUCCESS]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. org.apache.commons.math.complex.ComplexFormatTest#testZeroReal started...]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. SUCCESS]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth started...]
19:05:14.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. SUCCESS]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal started...]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. SUCCESS]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary started...]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. SUCCESS]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals started...]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. SUCCESS]
19:05:14.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity started...]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. SUCCESS]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter started...]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. SUCCESS]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal started...]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. SUCCESS]
19:05:14.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. org.apache.commons.math.complex.ComplexFormatTest#testParseNan started...]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. SUCCESS]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary started...]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. SUCCESS]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity started...]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. SUCCESS]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals started...]
19:05:14.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. SUCCESS]
19:05:14.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf started...]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. SUCCESS]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. org.apache.commons.math.complex.ComplexTest#testTanhInf started...]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. SUCCESS]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. org.apache.commons.math.complex.ComplexTest#testTanhNaN started...]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. SUCCESS]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. org.apache.commons.math.complex.ComplexTest#testConjugateNaN started...]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. SUCCESS]
19:05:14.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. org.apache.commons.math.complex.ComplexTest#testScalarDivideInf started...]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. SUCCESS]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN started...]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. SUCCESS]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf started...]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. SUCCESS]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN started...]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. SUCCESS]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. org.apache.commons.math.complex.ComplexTest#testDivideImaginary started...]
19:05:14.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. SUCCESS]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. org.apache.commons.math.complex.ComplexTest#testAcosInf started...]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. SUCCESS]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. org.apache.commons.math.complex.ComplexTest#testAcosNaN started...]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. SUCCESS]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. org.apache.commons.math.complex.ComplexTest#testEqualsClass started...]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. SUCCESS]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. org.apache.commons.math.complex.ComplexTest#testAbs started...]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. SUCCESS]
19:05:14.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. org.apache.commons.math.complex.ComplexTest#testAdd started...]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. SUCCESS]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. org.apache.commons.math.complex.ComplexTest#testCos started...]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. SUCCESS]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. org.apache.commons.math.complex.ComplexTest#testExp started...]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. SUCCESS]
19:05:14.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. org.apache.commons.math.complex.ComplexTest#testLog started...]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. SUCCESS]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. org.apache.commons.math.complex.ComplexTest#testPow started...]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. SUCCESS]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. org.apache.commons.math.complex.ComplexTest#testSin started...]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. SUCCESS]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. org.apache.commons.math.complex.ComplexTest#testTan started...]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. SUCCESS]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. org.apache.commons.math.complex.ComplexTest#testSubtract started...]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. SUCCESS]
19:05:14.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. org.apache.commons.math.complex.ComplexTest#testScalarAdd started...]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. SUCCESS]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. org.apache.commons.math.complex.ComplexTest#testScalarPow started...]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. SUCCESS]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. org.apache.commons.math.complex.ComplexTest#testDivideNaNInf started...]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. SUCCESS]
19:05:14.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:05:14.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. FAILED]
19:05:14.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. org.apache.commons.math.complex.ComplexTest#testAcos started...]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. SUCCESS]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. org.apache.commons.math.complex.ComplexTest#testAsin started...]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. SUCCESS]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. org.apache.commons.math.complex.ComplexTest#testAtan started...]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. SUCCESS]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. org.apache.commons.math.complex.ComplexTest#testCosh started...]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. SUCCESS]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. org.apache.commons.math.complex.ComplexTest#testSinh started...]
19:05:14.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. SUCCESS]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. org.apache.commons.math.complex.ComplexTest#testTanh started...]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. SUCCESS]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. org.apache.commons.math.complex.ComplexTest#testAsinInf started...]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. SUCCESS]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. org.apache.commons.math.complex.ComplexTest#testAsinNaN started...]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. SUCCESS]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. org.apache.commons.math.complex.ComplexTest#testAtanInf started...]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. SUCCESS]
19:05:14.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. org.apache.commons.math.complex.ComplexTest#testAtanNaN started...]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. SUCCESS]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. org.apache.commons.math.complex.ComplexTest#testScalarAddInf started...]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. SUCCESS]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. org.apache.commons.math.complex.ComplexTest#testScalarAddNaN started...]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. SUCCESS]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. org.apache.commons.math.complex.ComplexTest#testScalarPowZero started...]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. SUCCESS]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. org.apache.commons.math.complex.ComplexTest#testScalarDivide started...]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. SUCCESS]
19:05:14.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. org.apache.commons.math.complex.ComplexTest#testDivideInf started...]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. SUCCESS]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. org.apache.commons.math.complex.ComplexTest#testDivideNaN started...]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. SUCCESS]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference started...]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. SUCCESS]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. org.apache.commons.math.complex.ComplexTest#testNegateNaN started...]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. SUCCESS]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. org.apache.commons.math.complex.ComplexTest#testTanhCritical started...]
19:05:14.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. SUCCESS]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. org.apache.commons.math.complex.ComplexTest#testPowZero started...]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. SUCCESS]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. org.apache.commons.math.complex.ComplexTest#testScalarPowInf started...]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. SUCCESS]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. org.apache.commons.math.complex.ComplexTest#testScalarMultiply started...]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. SUCCESS]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero started...]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. SUCCESS]
19:05:14.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive started...]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. SUCCESS]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. org.apache.commons.math.complex.ComplexTest#testEqualsNull started...]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. SUCCESS]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. org.apache.commons.math.complex.ComplexTest#testEqualsSame started...]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. SUCCESS]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. org.apache.commons.math.complex.ComplexTest#testEqualsTrue started...]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. SUCCESS]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN started...]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. SUCCESS]
19:05:14.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative started...]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. SUCCESS]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase started...]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. SUCCESS]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. org.apache.commons.math.complex.ComplexTest#testGetArgument started...]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. SUCCESS]
19:05:14.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. org.apache.commons.math.complex.ComplexTest#testSqrtPolar started...]
19:05:14.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. SUCCESS]
19:05:14.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. org.apache.commons.math.complex.ComplexTest#testMultiplyNaN started...]
19:05:14.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. SUCCESS]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. org.apache.commons.math.complex.ComplexTest#testLogZero started...]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. SUCCESS]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. org.apache.commons.math.complex.ComplexTest#testConjugate started...]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. SUCCESS]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot started...]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. SUCCESS]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf started...]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. SUCCESS]
19:05:14.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference started...]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. SUCCESS]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf started...]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. SUCCESS]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN started...]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. SUCCESS]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. org.apache.commons.math.complex.ComplexTest#testTanCritical started...]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. SUCCESS]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. org.apache.commons.math.complex.ComplexTest#testPowNaNBase started...]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. SUCCESS]
19:05:14.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. org.apache.commons.math.complex.ComplexTest#testMath221 started...]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. SUCCESS]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty started...]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. SUCCESS]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. org.apache.commons.math.complex.ComplexTest#testGetArgumentInf started...]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. SUCCESS]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN started...]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. SUCCESS]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. org.apache.commons.math.complex.ComplexTest#testConstructorNaN started...]
19:05:14.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. SUCCESS]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. org.apache.commons.math.complex.ComplexTest#testCoshInf started...]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. SUCCESS]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. org.apache.commons.math.complex.ComplexTest#testCoshNaN started...]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. SUCCESS]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. org.apache.commons.math.complex.ComplexTest#testPowNaNExponent started...]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. SUCCESS]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. org.apache.commons.math.complex.ComplexTest#testHashCode started...]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. SUCCESS]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. org.apache.commons.math.complex.ComplexTest#testSqrtRealZero started...]
19:05:14.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. SUCCESS]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative started...]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. SUCCESS]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero started...]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. SUCCESS]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. org.apache.commons.math.complex.ComplexTest#testScalarDivideZero started...]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. SUCCESS]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. org.apache.commons.math.complex.ComplexTest#testScalarSubtract started...]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. SUCCESS]
19:05:14.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. org.apache.commons.math.complex.ComplexTest#testAbsNaN started...]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. SUCCESS]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. org.apache.commons.math.complex.ComplexTest#testAddInf started...]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. SUCCESS]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. org.apache.commons.math.complex.ComplexTest#testAddNaN started...]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. SUCCESS]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. org.apache.commons.math.complex.ComplexTest#testCosInf started...]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. SUCCESS]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. org.apache.commons.math.complex.ComplexTest#testCosNaN started...]
19:05:14.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. SUCCESS]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. org.apache.commons.math.complex.ComplexTest#testDivide started...]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. SUCCESS]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. org.apache.commons.math.complex.ComplexTest#testExpInf started...]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. SUCCESS]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. org.apache.commons.math.complex.ComplexTest#testExpNaN started...]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. SUCCESS]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. org.apache.commons.math.complex.ComplexTest#testMultiply started...]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. SUCCESS]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. org.apache.commons.math.complex.ComplexTest#testDivideReal started...]
19:05:14.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. SUCCESS]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. FAILED]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. org.apache.commons.math.complex.ComplexTest#testEqualsNaN started...]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. SUCCESS]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. org.apache.commons.math.complex.ComplexTest#testLogInf started...]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. SUCCESS]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. org.apache.commons.math.complex.ComplexTest#testLogNaN started...]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. SUCCESS]
19:05:14.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. org.apache.commons.math.complex.ComplexTest#testNegate started...]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. SUCCESS]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. org.apache.commons.math.complex.ComplexTest#testPowInf started...]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. SUCCESS]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite started...]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. SUCCESS]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. org.apache.commons.math.complex.ComplexTest#testSinhInf started...]
19:05:14.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. SUCCESS]
19:05:14.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. org.apache.commons.math.complex.ComplexTest#testSinhNaN started...]
19:05:14.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. SUCCESS]
19:05:14.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. org.apache.commons.math.complex.ComplexTest#testSerial started...]
19:05:14.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. SUCCESS]
19:05:14.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. org.apache.commons.math.complex.ComplexTest#testSinInf started...]
19:05:14.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. SUCCESS]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. org.apache.commons.math.complex.ComplexTest#testSinNaN started...]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. SUCCESS]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. org.apache.commons.math.complex.ComplexTest#testSqrt1z started...]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. SUCCESS]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. org.apache.commons.math.complex.ComplexTest#testTanInf started...]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. SUCCESS]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. org.apache.commons.math.complex.ComplexTest#testTanNaN started...]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. SUCCESS]
19:05:14.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot started...]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. SUCCESS]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. org.apache.commons.math.complex.ComplexTest#testpowNull started...]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. SUCCESS]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. org.apache.commons.math.complex.ComplexTest#testSubtractInf started...]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. SUCCESS]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. org.apache.commons.math.complex.ComplexTest#testSubtractNaN started...]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. SUCCESS]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. org.apache.commons.math.complex.ComplexTest#testAbsInfinite started...]
19:05:14.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. SUCCESS]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. org.apache.commons.math.complex.ComplexTest#testSqrtInf started...]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. SUCCESS]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. org.apache.commons.math.complex.ComplexTest#testSqrtNaN started...]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. SUCCESS]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. org.apache.commons.math.complex.ComplexTest#testDivideZeroZero started...]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. SUCCESS]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. org.apache.commons.math.complex.ComplexTest#testConstructor started...]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. SUCCESS]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent started...]
19:05:14.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. SUCCESS]
19:05:14.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf started...]
19:05:14.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. SUCCESS]
19:05:14.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN started...]
19:05:14.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. SUCCESS]
19:05:14.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus started...]
19:05:14.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. SUCCESS]
19:05:14.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex started...]
19:05:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. SUCCESS]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary started...]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. SUCCESS]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat started...]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. SUCCESS]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals started...]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. SUCCESS]
19:05:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary started...]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. SUCCESS]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar started...]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. SUCCESS]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber started...]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. SUCCESS]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. org.apache.commons.math.complex.FrenchComplexFormatTest#testNan started...]
19:05:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. SUCCESS]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. SUCCESS]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat started...]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. SUCCESS]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth started...]
19:05:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. SUCCESS]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal started...]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. SUCCESS]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat started...]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. SUCCESS]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. SUCCESS]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity started...]
19:05:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. SUCCESS]
19:05:14.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary started...]
19:05:14.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. SUCCESS]
19:05:14.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity started...]
19:05:14.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. SUCCESS]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar started...]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. SUCCESS]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex started...]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. SUCCESS]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals started...]
19:05:14.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. SUCCESS]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal started...]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. SUCCESS]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth started...]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. SUCCESS]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal started...]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. SUCCESS]
19:05:14.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary started...]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. SUCCESS]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals started...]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. SUCCESS]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity started...]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. SUCCESS]
19:05:14.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter started...]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. SUCCESS]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal started...]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. SUCCESS]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan started...]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. SUCCESS]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary started...]
19:05:14.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. SUCCESS]
19:05:14.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity started...]
19:05:14.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. SUCCESS]
19:05:14.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals started...]
19:05:14.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. SUCCESS]
19:05:14.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy started...]
19:05:14.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. SUCCESS]
19:05:14.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta started...]
19:05:15.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. SUCCESS]
19:05:15.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3 started...]
19:05:15.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. SUCCESS]
19:05:15.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK started...]
19:05:15.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. SUCCESS]
19:05:15.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. org.apache.commons.math.dfp.DfpDecTest#testRound started...]
19:05:15.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. SUCCESS]
19:05:15.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10 started...]
19:05:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. SUCCESS]
19:05:15.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. org.apache.commons.math.dfp.DfpDecTest#testNextAfter started...]
19:05:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. SUCCESS]
19:05:15.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. org.apache.commons.math.dfp.DfpMathTest#testPow started...]
19:05:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. SUCCESS]
19:05:15.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. org.apache.commons.math.dfp.DfpMathTest#testSin started...]
19:05:15.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. SUCCESS]
19:05:15.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. org.apache.commons.math.dfp.DfpTest#testAdd started...]
19:05:15.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. SUCCESS]
19:05:15.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. org.apache.commons.math.dfp.DfpTest#testFloor started...]
19:05:15.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. SUCCESS]
19:05:15.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. org.apache.commons.math.dfp.DfpTest#testLog10 started...]
19:05:15.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. SUCCESS]
19:05:15.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. org.apache.commons.math.dfp.DfpTest#testRound started...]
19:05:15.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. SUCCESS]
19:05:15.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. org.apache.commons.math.dfp.DfpTest#testCeil started...]
19:05:15.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. SUCCESS]
19:05:15.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. org.apache.commons.math.dfp.DfpTest#testRint started...]
19:05:15.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. SUCCESS]
19:05:15.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. org.apache.commons.math.dfp.DfpTest#testSqrt started...]
19:05:15.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. SUCCESS]
19:05:15.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. org.apache.commons.math.dfp.DfpTest#testToString started...]
19:05:15.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. SUCCESS]
19:05:15.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. org.apache.commons.math.dfp.DfpTest#testDivideInt started...]
19:05:15.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. SUCCESS]
19:05:15.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. org.apache.commons.math.dfp.DfpTest#testSignPredicates started...]
19:05:15.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. SUCCESS]
19:05:15.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. org.apache.commons.math.dfp.DfpTest#testPower10 started...]
19:05:15.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. SUCCESS]
19:05:15.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. org.apache.commons.math.dfp.DfpTest#testCopySign started...]
19:05:15.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. SUCCESS]
19:05:15.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. org.apache.commons.math.dfp.DfpTest#testCompare started...]
19:05:15.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. SUCCESS]
19:05:15.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. org.apache.commons.math.dfp.DfpTest#testByteConstructor started...]
19:05:15.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. SUCCESS]
19:05:15.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. org.apache.commons.math.dfp.DfpTest#testIntValue started...]
19:05:15.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. SUCCESS]
19:05:15.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. org.apache.commons.math.dfp.DfpTest#testDivide started...]
19:05:15.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. SUCCESS]
19:05:15.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. org.apache.commons.math.dfp.DfpTest#testMultiply started...]
19:05:15.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. SUCCESS]
19:05:15.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
19:05:15.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. SUCCESS]
19:05:15.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. org.apache.commons.math.dfp.DfpTest#testIsZero started...]
19:05:15.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. SUCCESS]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. org.apache.commons.math.dfp.DfpTest#testIntConstructor started...]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. SUCCESS]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. org.apache.commons.math.dfp.DfpTest#testLog10K started...]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. SUCCESS]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. org.apache.commons.math.dfp.DfpTest#testRemainder started...]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. SUCCESS]
19:05:15.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. org.apache.commons.math.dfp.DfpTest#testPower10K started...]
19:05:15.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. SUCCESS]
19:05:15.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. org.apache.commons.math.dfp.DfpTest#testLongConstructor started...]
19:05:15.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. SUCCESS]
19:05:15.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. org.apache.commons.math.dfp.DfpTest#testNextAfter started...]
19:05:15.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. SUCCESS]
19:05:15.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments started...]
19:05:15.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. SUCCESS]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments started...]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. SUCCESS]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments started...]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. SUCCESS]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments started...]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. SUCCESS]
19:05:15.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. org.apache.commons.math.distribution.BetaDistributionTest#testMomonts started...]
19:05:15.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. SUCCESS]
19:05:15.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. org.apache.commons.math.distribution.BetaDistributionTest#testCumulative started...]
19:05:15.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. SUCCESS]
19:05:15.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. org.apache.commons.math.distribution.BetaDistributionTest#testDensity started...]
19:05:15.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. SUCCESS]
19:05:15.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts started...]
19:05:15.418 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. SUCCESS]
19:05:15.418 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0 started...]
19:05:15.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. SUCCESS]
19:05:15.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1 started...]
19:05:15.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. SUCCESS]
19:05:15.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. org.apache.commons.math.distribution.BinomialDistributionTest#testDensities started...]
19:05:15.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. SUCCESS]
19:05:15.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. SUCCESS]
19:05:15.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. org.apache.commons.math.distribution.BinomialDistributionTest#testSampling started...]
19:05:15.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. SUCCESS]
19:05:15.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities started...]
19:05:15.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. SUCCESS]
19:05:15.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments started...]
19:05:15.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. SUCCESS]
19:05:15.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments started...]
19:05:15.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. SUCCESS]
19:05:15.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. org.apache.commons.math.distribution.CauchyDistributionTest#testScale started...]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. SUCCESS]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions started...]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. SUCCESS]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts started...]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. SUCCESS]
19:05:15.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. org.apache.commons.math.distribution.CauchyDistributionTest#testMedian started...]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. SUCCESS]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. SUCCESS]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. org.apache.commons.math.distribution.CauchyDistributionTest#testDensities started...]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. SUCCESS]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. SUCCESS]
19:05:15.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. org.apache.commons.math.distribution.CauchyDistributionTest#testSampling started...]
19:05:15.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. SUCCESS]
19:05:15.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities started...]
19:05:15.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. SUCCESS]
19:05:15.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments started...]
19:05:15.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. SUCCESS]
19:05:15.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency started...]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. SUCCESS]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts started...]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. SUCCESS]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity started...]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. SUCCESS]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors started...]
19:05:15.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. SUCCESS]
19:05:15.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf started...]
19:05:15.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. SUCCESS]
19:05:15.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities started...]
19:05:15.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. SUCCESS]
19:05:15.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. SUCCESS]
19:05:15.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling started...]
19:05:15.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. SUCCESS]
19:05:15.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities started...]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. SUCCESS]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments started...]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. SUCCESS]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency started...]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. SUCCESS]
19:05:15.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions started...]
19:05:15.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. SUCCESS]
19:05:15.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2 started...]
19:05:15.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. SUCCESS]
19:05:15.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes started...]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. SUCCESS]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts started...]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. SUCCESS]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity started...]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. SUCCESS]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. SUCCESS]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors started...]
19:05:15.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. SUCCESS]
19:05:15.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities started...]
19:05:15.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. SUCCESS]
19:05:15.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. SUCCESS]
19:05:15.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling started...]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. SUCCESS]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities started...]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. SUCCESS]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments started...]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. SUCCESS]
19:05:15.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency started...]
19:05:15.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. SUCCESS]
19:05:15.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom started...]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. SUCCESS]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. org.apache.commons.math.distribution.FDistributionTest#testPreconditions started...]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. SUCCESS]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes started...]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. SUCCESS]
19:05:15.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom started...]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. SUCCESS]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. org.apache.commons.math.distribution.FDistributionTest#testMomonts started...]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. SUCCESS]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. org.apache.commons.math.distribution.FDistributionTest#testDfAccessors started...]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. SUCCESS]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. SUCCESS]
19:05:15.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. org.apache.commons.math.distribution.FDistributionTest#testDensities started...]
19:05:15.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. SUCCESS]
19:05:15.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. SUCCESS]
19:05:15.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. org.apache.commons.math.distribution.FDistributionTest#testSampling started...]
19:05:15.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. SUCCESS]
19:05:15.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities started...]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. SUCCESS]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments started...]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. SUCCESS]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. org.apache.commons.math.distribution.FDistributionTest#testConsistency started...]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. SUCCESS]
19:05:15.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities started...]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. SUCCESS]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions started...]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. SUCCESS]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors started...]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. SUCCESS]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. org.apache.commons.math.distribution.GammaDistributionTest#testMomonts started...]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. SUCCESS]
19:05:15.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. org.apache.commons.math.distribution.GammaDistributionTest#testDensity started...]
19:05:15.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. SUCCESS]
19:05:15.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:15.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. SUCCESS]
19:05:15.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. org.apache.commons.math.distribution.GammaDistributionTest#testValues started...]
19:05:15.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. SUCCESS]
19:05:15.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. org.apache.commons.math.distribution.GammaDistributionTest#testDensities started...]
19:05:15.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. SUCCESS]
19:05:15.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities started...]
19:05:15.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. SUCCESS]
19:05:15.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. org.apache.commons.math.distribution.GammaDistributionTest#testSampling started...]
19:05:15.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. SUCCESS]
19:05:15.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities started...]
19:05:15.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. SUCCESS]
19:05:15.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments started...]
19:05:15.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. SUCCESS]
19:05:15.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. org.apache.commons.math.distribution.GammaDistributionTest#testConsistency started...]
19:05:15.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. SUCCESS]
19:05:15.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues started...]
19:05:15.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. SUCCESS]
19:05:15.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures started...]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. SUCCESS]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors started...]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. SUCCESS]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions started...]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. SUCCESS]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses started...]
19:05:15.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. SUCCESS]
19:05:15.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample started...]
19:05:15.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. SUCCESS]
19:05:15.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts started...]
19:05:15.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. SUCCESS]
19:05:15.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues started...]
19:05:16.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. SUCCESS]
19:05:16.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities started...]
19:05:16.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. SUCCESS]
19:05:16.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. SUCCESS]
19:05:16.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling started...]
19:05:16.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. SUCCESS]
19:05:16.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities started...]
19:05:16.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. SUCCESS]
19:05:16.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments started...]
19:05:16.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. SUCCESS]
19:05:16.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments started...]
19:05:16.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. SUCCESS]
19:05:16.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction started...]
19:05:16.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. SUCCESS]
19:05:16.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues started...]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. SUCCESS]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions started...]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. SUCCESS]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation started...]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. SUCCESS]
19:05:16.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles started...]
19:05:16.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. SUCCESS]
19:05:16.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. org.apache.commons.math.distribution.NormalDistributionTest#testGetMean started...]
19:05:16.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. SUCCESS]
19:05:16.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. org.apache.commons.math.distribution.NormalDistributionTest#testMath280 started...]
19:05:16.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. SUCCESS]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. org.apache.commons.math.distribution.NormalDistributionTest#testMomonts started...]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. SUCCESS]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. org.apache.commons.math.distribution.NormalDistributionTest#testDensity started...]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. SUCCESS]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. SUCCESS]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. org.apache.commons.math.distribution.NormalDistributionTest#testDensities started...]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. SUCCESS]
19:05:16.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. SUCCESS]
19:05:16.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. org.apache.commons.math.distribution.NormalDistributionTest#testSampling started...]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. SUCCESS]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities started...]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. SUCCESS]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments started...]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. SUCCESS]
19:05:16.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. org.apache.commons.math.distribution.NormalDistributionTest#testConsistency started...]
19:05:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. SUCCESS]
19:05:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. org.apache.commons.math.distribution.PascalDistributionTest#testMomonts started...]
19:05:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. SUCCESS]
19:05:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0 started...]
19:05:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. SUCCESS]
19:05:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1 started...]
19:05:16.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. SUCCESS]
19:05:16.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. org.apache.commons.math.distribution.PascalDistributionTest#testDensities started...]
19:05:16.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. SUCCESS]
19:05:16.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.198 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. SUCCESS]
19:05:16.198 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. org.apache.commons.math.distribution.PascalDistributionTest#testSampling started...]
19:05:16.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. SUCCESS]
19:05:16.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities started...]
19:05:16.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. SUCCESS]
19:05:16.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments started...]
19:05:16.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. SUCCESS]
19:05:16.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments started...]
19:05:16.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. SUCCESS]
19:05:16.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability started...]
19:05:16.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. SUCCESS]
19:05:16.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial started...]
19:05:16.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. SUCCESS]
19:05:16.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. org.apache.commons.math.distribution.PoissonDistributionTest#testMean started...]
19:05:16.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. SUCCESS]
19:05:16.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability started...]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. SUCCESS]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts started...]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. SUCCESS]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability started...]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. SUCCESS]
19:05:16.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability started...]
19:05:16.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. SUCCESS]
19:05:16.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. org.apache.commons.math.distribution.PoissonDistributionTest#testDensities started...]
19:05:16.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. SUCCESS]
19:05:16.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. SUCCESS]
19:05:16.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. org.apache.commons.math.distribution.PoissonDistributionTest#testSampling started...]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. SUCCESS]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities started...]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. SUCCESS]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments started...]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. SUCCESS]
19:05:16.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments started...]
19:05:16.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. SUCCESS]
19:05:16.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow started...]
19:05:16.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. SUCCESS]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. org.apache.commons.math.distribution.TDistributionTest#testPreconditions started...]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. SUCCESS]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. org.apache.commons.math.distribution.TDistributionTest#nistData started...]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. SUCCESS]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. org.apache.commons.math.distribution.TDistributionTest#testMomonts started...]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. SUCCESS]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. org.apache.commons.math.distribution.TDistributionTest#testDfAccessors started...]
19:05:16.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. SUCCESS]
19:05:16.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:16.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. SUCCESS]
19:05:16.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. org.apache.commons.math.distribution.TDistributionTest#testSmallDf started...]
19:05:16.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. SUCCESS]
19:05:16.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. org.apache.commons.math.distribution.TDistributionTest#testDensities started...]
19:05:16.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. SUCCESS]
19:05:16.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. SUCCESS]
19:05:16.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. org.apache.commons.math.distribution.TDistributionTest#testSampling started...]
19:05:16.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. SUCCESS]
19:05:16.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities started...]
19:05:16.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. SUCCESS]
19:05:16.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments started...]
19:05:16.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. SUCCESS]
19:05:16.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. org.apache.commons.math.distribution.TDistributionTest#testConsistency started...]
19:05:16.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. SUCCESS]
19:05:16.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha started...]
19:05:16.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. SUCCESS]
19:05:16.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. org.apache.commons.math.distribution.WeibullDistributionTest#testBeta started...]
19:05:16.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. SUCCESS]
19:05:16.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts started...]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. SUCCESS]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes started...]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. SUCCESS]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. org.apache.commons.math.distribution.WeibullDistributionTest#testDensities started...]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. SUCCESS]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. SUCCESS]
19:05:16.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. org.apache.commons.math.distribution.WeibullDistributionTest#testSampling started...]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. SUCCESS]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities started...]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. SUCCESS]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments started...]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. SUCCESS]
19:05:16.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency started...]
19:05:16.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. SUCCESS]
19:05:16.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions started...]
19:05:16.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. SUCCESS]
19:05:16.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts started...]
19:05:16.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. SUCCESS]
19:05:16.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. org.apache.commons.math.distribution.ZipfDistributionTest#testDensities started...]
19:05:16.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. SUCCESS]
19:05:16.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities started...]
19:05:16.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. SUCCESS]
19:05:16.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. org.apache.commons.math.distribution.ZipfDistributionTest#testSampling started...]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. SUCCESS]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities started...]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. SUCCESS]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments started...]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. SUCCESS]
19:05:16.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments started...]
19:05:16.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. SUCCESS]
19:05:16.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors started...]
19:05:16.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. SUCCESS]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors started...]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. SUCCESS]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest#testAccessors started...]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. SUCCESS]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors started...]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. SUCCESS]
19:05:16.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors started...]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. SUCCESS]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors started...]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. SUCCESS]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors started...]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. SUCCESS]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors started...]
19:05:16.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. SUCCESS]
19:05:16.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage started...]
19:05:16.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. SUCCESS]
19:05:16.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten started...]
19:05:16.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. SUCCESS]
19:05:16.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage started...]
19:05:16.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. SUCCESS]
19:05:16.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable started...]
19:05:16.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. SUCCESS]
19:05:16.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain started...]
19:05:16.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. SUCCESS]
19:05:16.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize started...]
19:05:16.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. SUCCESS]
19:05:16.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. org.apache.commons.math.exception.util.ExceptionContextTest#testContext started...]
19:05:16.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. SUCCESS]
19:05:16.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. org.apache.commons.math.filter.KalmanFilterTest#testConstant started...]
19:05:16.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. SUCCESS]
19:05:16.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. org.apache.commons.math.fraction.BigFractionFieldTest#testOne started...]
19:05:16.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. SUCCESS]
19:05:16.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. org.apache.commons.math.fraction.BigFractionFieldTest#testZero started...]
19:05:16.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. SUCCESS]
19:05:16.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. org.apache.commons.math.fraction.BigFractionFieldTest#testSerial started...]
19:05:16.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. SUCCESS]
19:05:16.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat started...]
19:05:16.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. SUCCESS]
19:05:16.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative started...]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. SUCCESS]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat started...]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. SUCCESS]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper started...]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. SUCCESS]
19:05:16.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper started...]
19:05:16.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. SUCCESS]
19:05:16.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative started...]
19:05:16.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. SUCCESS]
19:05:16.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. org.apache.commons.math.fraction.BigFractionFormatTest#testParse started...]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. SUCCESS]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat started...]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. SUCCESS]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero started...]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. SUCCESS]
19:05:16.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative started...]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. SUCCESS]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator started...]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. SUCCESS]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat started...]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. SUCCESS]
19:05:16.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus started...]
19:05:16.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. SUCCESS]
19:05:16.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger started...]
19:05:16.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. SUCCESS]
19:05:16.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid started...]
19:05:16.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. SUCCESS]
19:05:16.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. org.apache.commons.math.fraction.BigFractionFormatTest#testFormat started...]
19:05:16.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. SUCCESS]
19:05:16.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat started...]
19:05:16.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. SUCCESS]
19:05:16.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig started...]
19:05:16.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. SUCCESS]
19:05:16.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative started...]
19:05:16.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. SUCCESS]
19:05:16.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. org.apache.commons.math.fraction.BigFractionTest#testFloatValue started...]
19:05:16.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. SUCCESS]
19:05:16.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. org.apache.commons.math.fraction.BigFractionTest#testAbs started...]
19:05:16.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. SUCCESS]
19:05:16.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. org.apache.commons.math.fraction.BigFractionTest#testAdd started...]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. SUCCESS]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. org.apache.commons.math.fraction.BigFractionTest#testPow started...]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. SUCCESS]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. org.apache.commons.math.fraction.BigFractionTest#testSubtract started...]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. SUCCESS]
19:05:16.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. org.apache.commons.math.fraction.BigFractionTest#testReciprocal started...]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. SUCCESS]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor started...]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. SUCCESS]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction started...]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. SUCCESS]
19:05:16.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble started...]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. SUCCESS]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. org.apache.commons.math.fraction.BigFractionTest#testCompareTo started...]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. SUCCESS]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor started...]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. SUCCESS]
19:05:16.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue started...]
19:05:16.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. SUCCESS]
19:05:16.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. org.apache.commons.math.fraction.BigFractionTest#testMath340 started...]
19:05:16.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. SUCCESS]
19:05:16.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. org.apache.commons.math.fraction.BigFractionTest#testLongValue started...]
19:05:16.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. SUCCESS]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor started...]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. SUCCESS]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. org.apache.commons.math.fraction.BigFractionTest#testIntValue started...]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. SUCCESS]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. org.apache.commons.math.fraction.BigFractionTest#testDivide started...]
19:05:16.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. SUCCESS]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. org.apache.commons.math.fraction.BigFractionTest#testMultiply started...]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. SUCCESS]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode started...]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. SUCCESS]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. org.apache.commons.math.fraction.BigFractionTest#testNegate started...]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. SUCCESS]
19:05:16.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. org.apache.commons.math.fraction.BigFractionTest#testSerial started...]
19:05:16.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. SUCCESS]
19:05:16.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio started...]
19:05:16.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. SUCCESS]
19:05:16.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. org.apache.commons.math.fraction.BigFractionTest#testDoubleValue started...]
19:05:16.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. SUCCESS]
19:05:16.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. org.apache.commons.math.fraction.BigFractionTest#testConstructor started...]
19:05:16.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. SUCCESS]
19:05:16.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. org.apache.commons.math.fraction.FractionFieldTest#testOne started...]
19:05:16.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. SUCCESS]
19:05:16.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. org.apache.commons.math.fraction.FractionFieldTest#testZero started...]
19:05:16.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. SUCCESS]
19:05:16.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. org.apache.commons.math.fraction.FractionFieldTest#testSerial started...]
19:05:16.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. SUCCESS]
19:05:16.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat started...]
19:05:16.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. SUCCESS]
19:05:16.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative started...]
19:05:16.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. SUCCESS]
19:05:16.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. org.apache.commons.math.fraction.FractionFormatTest#testLongFormat started...]
19:05:16.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. SUCCESS]
19:05:16.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper started...]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. SUCCESS]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. org.apache.commons.math.fraction.FractionFormatTest#testParseProper started...]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. SUCCESS]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative started...]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. SUCCESS]
19:05:16.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. org.apache.commons.math.fraction.FractionFormatTest#testParse started...]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. SUCCESS]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat started...]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. SUCCESS]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. org.apache.commons.math.fraction.FractionFormatTest#testFormatZero started...]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. SUCCESS]
19:05:16.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative started...]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. SUCCESS]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator started...]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. SUCCESS]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat started...]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. SUCCESS]
19:05:16.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus started...]
19:05:16.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. SUCCESS]
19:05:16.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. org.apache.commons.math.fraction.FractionFormatTest#testParseInteger started...]
19:05:16.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. SUCCESS]
19:05:16.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid started...]
19:05:16.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. SUCCESS]
19:05:16.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. org.apache.commons.math.fraction.FractionFormatTest#testFormat started...]
19:05:16.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. SUCCESS]
19:05:16.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat started...]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. SUCCESS]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. org.apache.commons.math.fraction.FractionFormatTest#testParseNegative started...]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. SUCCESS]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. org.apache.commons.math.fraction.FractionTest#testFloatValue started...]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. SUCCESS]
19:05:16.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. org.apache.commons.math.fraction.FractionTest#testAbs started...]
19:05:16.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. SUCCESS]
19:05:16.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. org.apache.commons.math.fraction.FractionTest#testAdd started...]
19:05:16.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. SUCCESS]
19:05:16.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. org.apache.commons.math.fraction.FractionTest#testSubtract started...]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. SUCCESS]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. org.apache.commons.math.fraction.FractionTest#testToString started...]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. SUCCESS]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. org.apache.commons.math.fraction.FractionTest#testReciprocal started...]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. SUCCESS]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor started...]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. SUCCESS]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. org.apache.commons.math.fraction.FractionTest#testGetReducedFraction started...]
19:05:16.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. SUCCESS]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. org.apache.commons.math.fraction.FractionTest#testConstructorDouble started...]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. SUCCESS]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. org.apache.commons.math.fraction.FractionTest#testCompareTo started...]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. SUCCESS]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. org.apache.commons.math.fraction.FractionTest#testDoubleConstructor started...]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. SUCCESS]
19:05:16.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. org.apache.commons.math.fraction.FractionTest#testLongValue started...]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. SUCCESS]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor started...]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. SUCCESS]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. org.apache.commons.math.fraction.FractionTest#testIntValue started...]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. SUCCESS]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. org.apache.commons.math.fraction.FractionTest#testDivide started...]
19:05:16.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. SUCCESS]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. org.apache.commons.math.fraction.FractionTest#testMultiply started...]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. SUCCESS]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode started...]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. SUCCESS]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. org.apache.commons.math.fraction.FractionTest#testNegate started...]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. SUCCESS]
19:05:16.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. org.apache.commons.math.fraction.FractionTest#testSerial started...]
19:05:16.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. SUCCESS]
19:05:16.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. org.apache.commons.math.fraction.FractionTest#testGoldenRatio started...]
19:05:16.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. SUCCESS]
19:05:16.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. org.apache.commons.math.fraction.FractionTest#testIntegerOverflow started...]
19:05:16.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. SUCCESS]
19:05:16.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. org.apache.commons.math.fraction.FractionTest#testDoubleValue started...]
19:05:16.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. SUCCESS]
19:05:16.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. org.apache.commons.math.fraction.FractionTest#testConstructor started...]
19:05:16.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. SUCCESS]
19:05:16.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor started...]
19:05:16.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. SUCCESS]
19:05:16.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame started...]
19:05:16.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. SUCCESS]
19:05:16.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor started...]
19:05:16.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. SUCCESS]
19:05:16.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. org.apache.commons.math.genetics.BinaryMutationTest#testMutate started...]
19:05:16.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. SUCCESS]
19:05:16.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome started...]
19:05:16.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. SUCCESS]
19:05:16.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. org.apache.commons.math.genetics.ChromosomeTest#testCompareTo started...]
19:05:16.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. SUCCESS]
19:05:16.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration started...]
19:05:16.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. SUCCESS]
19:05:16.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching started...]
19:05:16.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. SUCCESS]
19:05:16.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied started...]
19:05:16.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. SUCCESS]
19:05:16.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test started...]
19:05:16.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. SUCCESS]
19:05:16.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test started...]
19:05:16.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. SUCCESS]
19:05:16.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome started...]
19:05:16.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. SUCCESS]
19:05:16.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover started...]
19:05:16.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. SUCCESS]
19:05:16.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate started...]
19:05:16.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. SUCCESS]
19:05:16.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation started...]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. SUCCESS]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation started...]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. SUCCESS]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation started...]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. SUCCESS]
19:05:16.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. org.apache.commons.math.genetics.RandomKeyTest#testConstructor1 started...]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. SUCCESS]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. org.apache.commons.math.genetics.RandomKeyTest#testConstructor2 started...]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. SUCCESS]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation started...]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. SUCCESS]
19:05:16.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation started...]
19:05:16.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. SUCCESS]
19:05:16.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. org.apache.commons.math.genetics.RandomKeyTest#testDecode started...]
19:05:16.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. SUCCESS]
19:05:16.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. org.apache.commons.math.genetics.RandomKeyTest#testIsSame started...]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. SUCCESS]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr started...]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. SUCCESS]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. org.apache.commons.math.genetics.TournamentSelectionTest#testSelect started...]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. SUCCESS]
19:05:16.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite started...]
19:05:16.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. SUCCESS]
19:05:16.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval started...]
19:05:16.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. SUCCESS]
19:05:16.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple started...]
19:05:16.914 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. SUCCESS]
19:05:16.914 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat started...]
19:05:16.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. SUCCESS]
19:05:16.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals started...]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. SUCCESS]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator started...]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. SUCCESS]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX started...]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. SUCCESS]
19:05:16.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan started...]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. SUCCESS]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. SUCCESS]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX started...]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. SUCCESS]
19:05:16.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY started...]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. SUCCESS]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ started...]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. SUCCESS]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll started...]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. SUCCESS]
19:05:16.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D started...]
19:05:16.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. SUCCESS]
19:05:16.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix started...]
19:05:16.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. SUCCESS]
19:05:16.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix started...]
19:05:16.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. SUCCESS]
19:05:16.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX started...]
19:05:16.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. SUCCESS]
19:05:16.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY started...]
19:05:16.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. SUCCESS]
19:05:16.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ started...]
19:05:16.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. SUCCESS]
19:05:16.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace started...]
19:05:16.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. SUCCESS]
19:05:16.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:16.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. SUCCESS]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity started...]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. SUCCESS]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity started...]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. SUCCESS]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting started...]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. SUCCESS]
19:05:16.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals started...]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. SUCCESS]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals started...]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. SUCCESS]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity started...]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. SUCCESS]
19:05:16.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting started...]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. SUCCESS]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan started...]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. SUCCESS]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity started...]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. SUCCESS]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals started...]
19:05:16.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. SUCCESS]
19:05:16.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains started...]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. SUCCESS]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance started...]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. SUCCESS]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest started...]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. SUCCESS]
19:05:16.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection started...]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. SUCCESS]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar started...]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. SUCCESS]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance started...]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. SUCCESS]
19:05:16.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2 started...]
19:05:16.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. SUCCESS]
19:05:16.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3 started...]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. SUCCESS]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint started...]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. SUCCESS]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints started...]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. SUCCESS]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains started...]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. SUCCESS]
19:05:16.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection started...]
19:05:16.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. SUCCESS]
19:05:16.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset started...]
19:05:16.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. SUCCESS]
19:05:16.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate started...]
19:05:16.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. SUCCESS]
19:05:16.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar started...]
19:05:16.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. SUCCESS]
19:05:16.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate started...]
19:05:16.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. SUCCESS]
19:05:16.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox started...]
19:05:16.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. SUCCESS]
19:05:16.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross started...]
19:05:17.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. SUCCESS]
19:05:17.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox started...]
19:05:17.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. SUCCESS]
19:05:17.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron started...]
19:05:17.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. SUCCESS]
19:05:17.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry started...]
19:05:17.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. SUCCESS]
19:05:17.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName started...]
19:05:17.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. SUCCESS]
19:05:17.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle started...]
19:05:17.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. SUCCESS]
19:05:17.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs started...]
19:05:17.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. SUCCESS]
19:05:17.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose started...]
19:05:17.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. SUCCESS]
19:05:17.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity started...]
19:05:17.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. SUCCESS]
19:05:17.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse started...]
19:05:17.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. SUCCESS]
19:05:17.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo started...]
19:05:17.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. SUCCESS]
19:05:17.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles started...]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. SUCCESS]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair started...]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. SUCCESS]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639 started...]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. SUCCESS]
19:05:17.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix started...]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. SUCCESS]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert started...]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. SUCCESS]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities started...]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. SUCCESS]
19:05:17.259 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion started...]
19:05:17.260 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. SUCCESS]
19:05:17.260 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints started...]
19:05:17.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. SUCCESS]
19:05:17.261 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints started...]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. SUCCESS]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside started...]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. SUCCESS]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary started...]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. SUCCESS]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside started...]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. SUCCESS]
19:05:17.262 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside started...]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. SUCCESS]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments started...]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. SUCCESS]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg started...]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. SUCCESS]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos started...]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. SUCCESS]
19:05:17.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside started...]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. SUCCESS]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments started...]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. SUCCESS]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary started...]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. SUCCESS]
19:05:17.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat started...]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. SUCCESS]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals started...]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. SUCCESS]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator started...]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. SUCCESS]
19:05:17.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX started...]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. SUCCESS]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan started...]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. SUCCESS]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. SUCCESS]
19:05:17.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX started...]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. SUCCESS]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY started...]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. SUCCESS]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ started...]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. SUCCESS]
19:05:17.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll started...]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. SUCCESS]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D started...]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. SUCCESS]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix started...]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. SUCCESS]
19:05:17.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix started...]
19:05:17.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. SUCCESS]
19:05:17.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX started...]
19:05:17.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. SUCCESS]
19:05:17.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY started...]
19:05:17.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. SUCCESS]
19:05:17.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ started...]
19:05:17.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. SUCCESS]
19:05:17.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace started...]
19:05:17.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. SUCCESS]
19:05:17.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. SUCCESS]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity started...]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. SUCCESS]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity started...]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. SUCCESS]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting started...]
19:05:17.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. SUCCESS]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals started...]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. SUCCESS]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals started...]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. SUCCESS]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity started...]
19:05:17.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. SUCCESS]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting started...]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. SUCCESS]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan started...]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. SUCCESS]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity started...]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. SUCCESS]
19:05:17.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals started...]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. SUCCESS]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts started...]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. SUCCESS]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct started...]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. SUCCESS]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation started...]
19:05:17.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. SUCCESS]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd started...]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. SUCCESS]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf started...]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. SUCCESS]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract started...]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. SUCCESS]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular started...]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. SUCCESS]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle started...]
19:05:17.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. SUCCESS]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1 started...]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. SUCCESS]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm started...]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. SUCCESS]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors started...]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. SUCCESS]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct started...]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. SUCCESS]
19:05:17.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct started...]
19:05:17.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. SUCCESS]
19:05:17.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct started...]
19:05:17.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. SUCCESS]
19:05:17.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal started...]
19:05:17.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. SUCCESS]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation started...]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. SUCCESS]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize started...]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. SUCCESS]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance started...]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. SUCCESS]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1 started...]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. SUCCESS]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates started...]
19:05:17.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. SUCCESS]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct started...]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. SUCCESS]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq started...]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. SUCCESS]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf started...]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. SUCCESS]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa started...]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. SUCCESS]
19:05:17.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset started...]
19:05:17.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. SUCCESS]
19:05:17.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt started...]
19:05:17.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. SUCCESS]
19:05:17.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains started...]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. SUCCESS]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection started...]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. SUCCESS]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset started...]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. SUCCESS]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform started...]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. SUCCESS]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel started...]
19:05:17.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. SUCCESS]
19:05:17.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes started...]
19:05:17.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. SUCCESS]
19:05:17.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons started...]
19:05:17.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. SUCCESS]
19:05:17.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference started...]
19:05:17.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. SUCCESS]
19:05:17.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor started...]
19:05:17.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. SUCCESS]
19:05:17.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520 started...]
19:05:17.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. SUCCESS]
19:05:17.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003 started...]
19:05:17.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. SUCCESS]
19:05:17.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair started...]
19:05:17.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. SUCCESS]
19:05:17.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion started...]
19:05:17.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. SUCCESS]
19:05:17.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole started...]
19:05:17.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. SUCCESS]
19:05:17.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon started...]
19:05:17.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. SUCCESS]
19:05:17.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection started...]
19:05:17.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. SUCCESS]
19:05:17.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference started...]
19:05:17.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. SUCCESS]
19:05:17.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection started...]
19:05:17.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. SUCCESS]
19:05:17.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane started...]
19:05:17.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. SUCCESS]
19:05:17.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric started...]
19:05:17.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. SUCCESS]
19:05:17.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint started...]
19:05:17.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. SUCCESS]
19:05:17.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected started...]
19:05:17.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. SUCCESS]
19:05:17.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints started...]
19:05:17.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. SUCCESS]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints started...]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. SUCCESS]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside started...]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. SUCCESS]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary started...]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. SUCCESS]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside started...]
19:05:17.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. SUCCESS]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside started...]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. SUCCESS]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments started...]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. SUCCESS]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg started...]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. SUCCESS]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos started...]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. SUCCESS]
19:05:17.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside started...]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. SUCCESS]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments started...]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. SUCCESS]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary started...]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. SUCCESS]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition started...]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. SUCCESS]
19:05:17.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation started...]
19:05:17.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. SUCCESS]
19:05:17.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1 started...]
19:05:17.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. SUCCESS]
19:05:17.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert started...]
19:05:17.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. SUCCESS]
19:05:17.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch started...]
19:05:17.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. SUCCESS]
19:05:17.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm started...]
19:05:17.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. SUCCESS]
19:05:17.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate started...]
19:05:17.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. SUCCESS]
19:05:17.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples started...]
19:05:17.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. SUCCESS]
19:05:17.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry started...]
19:05:17.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. SUCCESS]
19:05:17.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail started...]
19:05:17.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. SUCCESS]
19:05:17.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd started...]
19:05:17.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. SUCCESS]
19:05:17.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd started...]
19:05:17.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. SUCCESS]
19:05:17.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower started...]
19:05:17.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. SUCCESS]
19:05:17.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace started...]
19:05:17.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. SUCCESS]
19:05:17.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm started...]
19:05:17.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. SUCCESS]
19:05:17.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk started...]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. SUCCESS]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString started...]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. SUCCESS]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix started...]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. SUCCESS]
19:05:17.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus started...]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. SUCCESS]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector started...]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. SUCCESS]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2 started...]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. SUCCESS]
19:05:17.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions started...]
19:05:17.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. SUCCESS]
19:05:17.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix started...]
19:05:17.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. SUCCESS]
19:05:17.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector started...]
19:05:17.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. SUCCESS]
19:05:17.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions started...]
19:05:17.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. SUCCESS]
19:05:17.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix started...]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. SUCCESS]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209 started...]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. SUCCESS]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors started...]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. SUCCESS]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn started...]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. SUCCESS]
19:05:17.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix started...]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. SUCCESS]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn started...]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. SUCCESS]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector started...]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. SUCCESS]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply started...]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. SUCCESS]
19:05:17.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow started...]
19:05:17.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. SUCCESS]
19:05:17.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode started...]
19:05:17.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. SUCCESS]
19:05:17.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial started...]
19:05:17.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. SUCCESS]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow started...]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. SUCCESS]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose started...]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. SUCCESS]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix started...]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. SUCCESS]
19:05:17.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply started...]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. SUCCESS]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix started...]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. SUCCESS]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector started...]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. SUCCESS]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix started...]
19:05:17.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. SUCCESS]
19:05:17.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector started...]
19:05:17.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. SUCCESS]
19:05:17.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors started...]
19:05:17.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. SUCCESS]
19:05:17.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc started...]
19:05:17.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. SUCCESS]
19:05:17.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors started...]
19:05:17.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. SUCCESS]
19:05:17.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions started...]
19:05:17.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. SUCCESS]
19:05:17.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut started...]
19:05:17.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. SUCCESS]
19:05:17.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions started...]
19:05:17.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. SUCCESS]
19:05:17.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct started...]
19:05:17.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. SUCCESS]
19:05:17.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial started...]
19:05:17.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. SUCCESS]
19:05:17.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes started...]
19:05:17.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. SUCCESS]
19:05:17.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors started...]
19:05:17.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. SUCCESS]
19:05:17.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. org.apache.commons.math.linear.ArrayRealVectorTest#testMisc started...]
19:05:17.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. SUCCESS]
19:05:17.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors started...]
19:05:17.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. SUCCESS]
19:05:17.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType started...]
19:05:17.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. SUCCESS]
19:05:17.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions started...]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. SUCCESS]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType started...]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. SUCCESS]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType started...]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. SUCCESS]
19:05:17.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut started...]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. SUCCESS]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates started...]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. SUCCESS]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes started...]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. SUCCESS]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType started...]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. SUCCESS]
19:05:17.397 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions started...]
19:05:17.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. SUCCESS]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. org.apache.commons.math.linear.ArrayRealVectorTest#testCosine started...]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. SUCCESS]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1 started...]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. SUCCESS]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2 started...]
19:05:17.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. SUCCESS]
19:05:17.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3 started...]
19:05:17.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. SUCCESS]
19:05:17.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax started...]
19:05:17.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. SUCCESS]
19:05:17.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType started...]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. SUCCESS]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct started...]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. SUCCESS]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType started...]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. SUCCESS]
19:05:17.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. org.apache.commons.math.linear.ArrayRealVectorTest#testSerial started...]
19:05:17.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. SUCCESS]
19:05:17.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal started...]
19:05:17.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. SUCCESS]
19:05:17.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower started...]
19:05:17.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. SUCCESS]
19:05:17.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal started...]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. SUCCESS]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix started...]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. SUCCESS]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues started...]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. SUCCESS]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions started...]
19:05:17.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. SUCCESS]
19:05:17.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt started...]
19:05:17.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. SUCCESS]
19:05:17.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal started...]
19:05:17.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. SUCCESS]
19:05:17.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge started...]
19:05:17.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. SUCCESS]
19:05:17.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge started...]
19:05:17.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. SUCCESS]
19:05:17.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate started...]
19:05:17.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. SUCCESS]
19:05:17.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples started...]
19:05:17.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. SUCCESS]
19:05:17.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry started...]
19:05:17.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. SUCCESS]
19:05:17.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail started...]
19:05:17.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. SUCCESS]
19:05:17.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge started...]
19:05:17.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. SUCCESS]
19:05:17.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd started...]
19:05:17.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. SUCCESS]
19:05:17.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd started...]
19:05:17.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. SUCCESS]
19:05:17.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace started...]
19:05:17.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. SUCCESS]
19:05:17.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk started...]
19:05:17.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. SUCCESS]
19:05:17.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. org.apache.commons.math.linear.BlockFieldMatrixTest#testToString started...]
19:05:17.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. SUCCESS]
19:05:17.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge started...]
19:05:17.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. SUCCESS]
19:05:17.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge started...]
19:05:17.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. SUCCESS]
19:05:17.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix started...]
19:05:17.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. SUCCESS]
19:05:17.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks started...]
19:05:18.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. SUCCESS]
19:05:18.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus started...]
19:05:18.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. SUCCESS]
19:05:18.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector started...]
19:05:18.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. SUCCESS]
19:05:18.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2 started...]
19:05:18.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. SUCCESS]
19:05:18.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions started...]
19:05:18.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. SUCCESS]
19:05:18.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix started...]
19:05:18.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. SUCCESS]
19:05:18.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge started...]
19:05:18.179 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. SUCCESS]
19:05:18.179 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector started...]
19:05:18.180 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. SUCCESS]
19:05:18.180 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions started...]
19:05:18.181 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. SUCCESS]
19:05:18.181 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix started...]
19:05:18.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. SUCCESS]
19:05:18.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209 started...]
19:05:18.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. SUCCESS]
19:05:18.182 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge started...]
19:05:18.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. SUCCESS]
19:05:18.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors started...]
19:05:18.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. SUCCESS]
19:05:18.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge started...]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. SUCCESS]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn started...]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. SUCCESS]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix started...]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. SUCCESS]
19:05:18.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn started...]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. SUCCESS]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector started...]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. SUCCESS]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply started...]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. SUCCESS]
19:05:18.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow started...]
19:05:18.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. SUCCESS]
19:05:18.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode started...]
19:05:18.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. SUCCESS]
19:05:18.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge started...]
19:05:18.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. SUCCESS]
19:05:18.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial started...]
19:05:18.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. SUCCESS]
19:05:18.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow started...]
19:05:18.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. SUCCESS]
19:05:18.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose started...]
19:05:18.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. SUCCESS]
19:05:18.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix started...]
19:05:18.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. SUCCESS]
19:05:18.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply started...]
19:05:18.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. SUCCESS]
19:05:18.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix started...]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. SUCCESS]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector started...]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. SUCCESS]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix started...]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. SUCCESS]
19:05:18.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector started...]
19:05:18.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. SUCCESS]
19:05:18.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge started...]
19:05:18.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. SUCCESS]
19:05:18.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge started...]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. SUCCESS]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm started...]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. SUCCESS]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. org.apache.commons.math.linear.BlockRealMatrixTest#testOperate started...]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. SUCCESS]
19:05:18.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. org.apache.commons.math.linear.BlockRealMatrixTest#testExamples started...]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. SUCCESS]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry started...]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. SUCCESS]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail started...]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. SUCCESS]
19:05:18.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge started...]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. SUCCESS]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. org.apache.commons.math.linear.BlockRealMatrixTest#testAdd started...]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. SUCCESS]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd started...]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. SUCCESS]
19:05:18.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. org.apache.commons.math.linear.BlockRealMatrixTest#testTrace started...]
19:05:18.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. SUCCESS]
19:05:18.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. org.apache.commons.math.linear.BlockRealMatrixTest#testNorm started...]
19:05:18.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. SUCCESS]
19:05:18.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. org.apache.commons.math.linear.BlockRealMatrixTest#testWalk started...]
19:05:18.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. SUCCESS]
19:05:18.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. org.apache.commons.math.linear.BlockRealMatrixTest#testToString started...]
19:05:18.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. SUCCESS]
19:05:18.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge started...]
19:05:18.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. SUCCESS]
19:05:18.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge started...]
19:05:18.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. SUCCESS]
19:05:18.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix started...]
19:05:18.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. SUCCESS]
19:05:18.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks started...]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. SUCCESS]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus started...]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. SUCCESS]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector started...]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. SUCCESS]
19:05:18.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2 started...]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. SUCCESS]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions started...]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. SUCCESS]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix started...]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. SUCCESS]
19:05:18.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge started...]
19:05:18.426 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. SUCCESS]
19:05:18.426 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector started...]
19:05:18.426 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. SUCCESS]
19:05:18.426 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions started...]
19:05:18.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. SUCCESS]
19:05:18.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix started...]
19:05:18.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. SUCCESS]
19:05:18.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. org.apache.commons.math.linear.BlockRealMatrixTest#testMath209 started...]
19:05:18.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. SUCCESS]
19:05:18.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge started...]
19:05:18.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. SUCCESS]
19:05:18.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors started...]
19:05:18.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. SUCCESS]
19:05:18.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge started...]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. SUCCESS]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn started...]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. SUCCESS]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix started...]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. SUCCESS]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn started...]
19:05:18.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. SUCCESS]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector started...]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. SUCCESS]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply started...]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. SUCCESS]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow started...]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. SUCCESS]
19:05:18.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode started...]
19:05:18.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. SUCCESS]
19:05:18.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge started...]
19:05:18.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. SUCCESS]
19:05:18.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. org.apache.commons.math.linear.BlockRealMatrixTest#testSerial started...]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. SUCCESS]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow started...]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. SUCCESS]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose started...]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. SUCCESS]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix started...]
19:05:18.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. SUCCESS]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply started...]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. SUCCESS]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix started...]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. SUCCESS]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector started...]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. SUCCESS]
19:05:18.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix started...]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. SUCCESS]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector started...]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. SUCCESS]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues started...]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. SUCCESS]
19:05:18.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException started...]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. SUCCESS]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions started...]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. SUCCESS]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274 started...]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. SUCCESS]
19:05:18.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare started...]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. SUCCESS]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite started...]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. SUCCESS]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular started...]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. SUCCESS]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed started...]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. SUCCESS]
19:05:18.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT started...]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. SUCCESS]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. org.apache.commons.math.linear.CholeskySolverTest#testSolve started...]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. SUCCESS]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. org.apache.commons.math.linear.CholeskySolverTest#testDeterminant started...]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. SUCCESS]
19:05:18.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors started...]
19:05:18.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. SUCCESS]
19:05:18.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit started...]
19:05:18.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. SUCCESS]
19:05:18.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors started...]
19:05:18.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. SUCCESS]
19:05:18.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal started...]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. SUCCESS]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1 started...]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. SUCCESS]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2 started...]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. SUCCESS]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3 started...]
19:05:18.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. SUCCESS]
19:05:18.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions started...]
19:05:18.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. SUCCESS]
19:05:18.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues started...]
19:05:18.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. SUCCESS]
19:05:18.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue started...]
19:05:18.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. SUCCESS]
19:05:18.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt started...]
19:05:18.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. SUCCESS]
19:05:18.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308 started...]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. SUCCESS]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal started...]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. SUCCESS]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues started...]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. SUCCESS]
19:05:18.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal started...]
19:05:18.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. SUCCESS]
19:05:18.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot started...]
19:05:18.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. SUCCESS]
19:05:18.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02 started...]
19:05:18.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. SUCCESS]
19:05:18.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03 started...]
19:05:18.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. SUCCESS]
19:05:18.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix started...]
19:05:18.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. SUCCESS]
19:05:18.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit started...]
19:05:18.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. SUCCESS]
19:05:18.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide started...]
19:05:18.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. SUCCESS]
19:05:18.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. org.apache.commons.math.linear.EigenSolverTest#testSolve started...]
19:05:18.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. SUCCESS]
19:05:18.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors started...]
19:05:18.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. SUCCESS]
19:05:18.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. org.apache.commons.math.linear.EigenSolverTest#testNonInvertible started...]
19:05:18.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. SUCCESS]
19:05:18.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. org.apache.commons.math.linear.EigenSolverTest#testInvertible started...]
19:05:18.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. SUCCESS]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation started...]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. SUCCESS]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular started...]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. SUCCESS]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions started...]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. SUCCESS]
19:05:18.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare started...]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. SUCCESS]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular started...]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. SUCCESS]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular started...]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. SUCCESS]
19:05:18.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU started...]
19:05:18.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. SUCCESS]
19:05:18.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1 started...]
19:05:18.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. SUCCESS]
19:05:18.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2 started...]
19:05:18.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. SUCCESS]
19:05:18.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. org.apache.commons.math.linear.FieldMatrixImplTest#testOperate started...]
19:05:18.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. SUCCESS]
19:05:18.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. org.apache.commons.math.linear.FieldMatrixImplTest#testExamples started...]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. SUCCESS]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry started...]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. SUCCESS]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail started...]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. SUCCESS]
19:05:18.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. org.apache.commons.math.linear.FieldMatrixImplTest#testAdd started...]
19:05:18.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. SUCCESS]
19:05:18.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd started...]
19:05:18.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. SUCCESS]
19:05:18.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. org.apache.commons.math.linear.FieldMatrixImplTest#testPower started...]
19:05:18.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. SUCCESS]
19:05:18.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. org.apache.commons.math.linear.FieldMatrixImplTest#testTrace started...]
19:05:18.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. SUCCESS]
19:05:18.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. org.apache.commons.math.linear.FieldMatrixImplTest#testWalk started...]
19:05:18.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. SUCCESS]
19:05:18.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. org.apache.commons.math.linear.FieldMatrixImplTest#testToString started...]
19:05:18.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. SUCCESS]
19:05:18.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix started...]
19:05:18.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. SUCCESS]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus started...]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. SUCCESS]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector started...]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. SUCCESS]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2 started...]
19:05:18.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. SUCCESS]
19:05:18.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions started...]
19:05:18.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. SUCCESS]
19:05:18.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix started...]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. SUCCESS]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector started...]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. SUCCESS]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions started...]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. SUCCESS]
19:05:18.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix started...]
19:05:18.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. SUCCESS]
19:05:18.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. org.apache.commons.math.linear.FieldMatrixImplTest#testMath209 started...]
19:05:18.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. SUCCESS]
19:05:18.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors started...]
19:05:18.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. SUCCESS]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn started...]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. SUCCESS]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix started...]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. SUCCESS]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn started...]
19:05:18.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. SUCCESS]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector started...]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. SUCCESS]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply started...]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. SUCCESS]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow started...]
19:05:18.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. SUCCESS]
19:05:18.948 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode started...]
19:05:18.948 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. SUCCESS]
19:05:18.948 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. org.apache.commons.math.linear.FieldMatrixImplTest#testSerial started...]
19:05:18.949 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. SUCCESS]
19:05:18.949 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow started...]
19:05:18.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. SUCCESS]
19:05:18.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose started...]
19:05:18.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. SUCCESS]
19:05:18.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix started...]
19:05:18.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. SUCCESS]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply started...]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. SUCCESS]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix started...]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. SUCCESS]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector started...]
19:05:18.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. SUCCESS]
19:05:18.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix started...]
19:05:18.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. SUCCESS]
19:05:18.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector started...]
19:05:18.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. SUCCESS]
19:05:18.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat started...]
19:05:18.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. SUCCESS]
19:05:18.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals started...]
19:05:18.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. SUCCESS]
19:05:18.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator started...]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. SUCCESS]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX started...]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. SUCCESS]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan started...]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. SUCCESS]
19:05:18.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. SUCCESS]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX started...]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. SUCCESS]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY started...]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. SUCCESS]
19:05:18.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ started...]
19:05:18.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. SUCCESS]
19:05:18.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll started...]
19:05:18.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. SUCCESS]
19:05:18.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix started...]
19:05:18.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. SUCCESS]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix started...]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. SUCCESS]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX started...]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. SUCCESS]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY started...]
19:05:18.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. SUCCESS]
19:05:18.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ started...]
19:05:18.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. SUCCESS]
19:05:18.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace started...]
19:05:18.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. SUCCESS]
19:05:18.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:18.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. SUCCESS]
19:05:18.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents started...]
19:05:18.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. SUCCESS]
19:05:18.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents started...]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. SUCCESS]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity started...]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. SUCCESS]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. SUCCESS]
19:05:18.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity started...]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. SUCCESS]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting started...]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. SUCCESS]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals started...]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. SUCCESS]
19:05:18.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals started...]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. SUCCESS]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity started...]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. SUCCESS]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting started...]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. SUCCESS]
19:05:18.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan started...]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. SUCCESS]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity started...]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. SUCCESS]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals started...]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. SUCCESS]
19:05:18.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation started...]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. SUCCESS]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular started...]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. SUCCESS]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions started...]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. SUCCESS]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare started...]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. SUCCESS]
19:05:18.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. org.apache.commons.math.linear.LUDecompositionImplTest#testSingular started...]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. SUCCESS]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular started...]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. SUCCESS]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU started...]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. SUCCESS]
19:05:18.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1 started...]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. SUCCESS]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2 started...]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. SUCCESS]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. org.apache.commons.math.linear.LUSolverTest#testSolve started...]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. SUCCESS]
19:05:18.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. org.apache.commons.math.linear.LUSolverTest#testThreshold started...]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. SUCCESS]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. org.apache.commons.math.linear.LUSolverTest#testDeterminant started...]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. SUCCESS]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors started...]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. SUCCESS]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors started...]
19:05:18.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. SUCCESS]
19:05:18.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. org.apache.commons.math.linear.LUSolverTest#testSingular started...]
19:05:18.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. SUCCESS]
19:05:18.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors started...]
19:05:18.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. SUCCESS]
19:05:18.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter started...]
19:05:18.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. SUCCESS]
19:05:18.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix started...]
19:05:18.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. SUCCESS]
19:05:18.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix started...]
19:05:18.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. SUCCESS]
19:05:18.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix started...]
19:05:18.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. SUCCESS]
19:05:18.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix started...]
19:05:18.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. SUCCESS]
19:05:18.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter started...]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. SUCCESS]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem started...]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. SUCCESS]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix started...]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. SUCCESS]
19:05:18.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix started...]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. SUCCESS]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix started...]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. SUCCESS]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix started...]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. SUCCESS]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem started...]
19:05:18.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. SUCCESS]
19:05:18.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR started...]
19:05:19.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. SUCCESS]
19:05:19.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues started...]
19:05:19.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. SUCCESS]
19:05:19.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions started...]
19:05:19.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. SUCCESS]
19:05:19.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular started...]
19:05:19.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. SUCCESS]
19:05:19.059 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal started...]
19:05:19.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. SUCCESS]
19:05:19.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal started...]
19:05:19.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. SUCCESS]
19:05:19.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. org.apache.commons.math.linear.QRSolverTest#testOverdetermined started...]
19:05:19.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. SUCCESS]
19:05:19.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. org.apache.commons.math.linear.QRSolverTest#testSolve started...]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. SUCCESS]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. org.apache.commons.math.linear.QRSolverTest#testRank started...]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. SUCCESS]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors started...]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. SUCCESS]
19:05:19.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors started...]
19:05:19.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. SUCCESS]
19:05:19.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. org.apache.commons.math.linear.QRSolverTest#testUnderdetermined started...]
19:05:19.168 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. SUCCESS]
19:05:19.168 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat started...]
19:05:19.168 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. SUCCESS]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals started...]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. SUCCESS]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator started...]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. SUCCESS]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX started...]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. SUCCESS]
19:05:19.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. org.apache.commons.math.linear.RealVectorFormatTest#testNan started...]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. SUCCESS]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. SUCCESS]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX started...]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. SUCCESS]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY started...]
19:05:19.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. SUCCESS]
19:05:19.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ started...]
19:05:19.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. SUCCESS]
19:05:19.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll started...]
19:05:19.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. SUCCESS]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix started...]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. SUCCESS]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix started...]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. SUCCESS]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX started...]
19:05:19.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. SUCCESS]
19:05:19.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY started...]
19:05:19.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. SUCCESS]
19:05:19.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ started...]
19:05:19.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. SUCCESS]
19:05:19.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace started...]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. SUCCESS]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. SUCCESS]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents started...]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. SUCCESS]
19:05:19.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents started...]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. SUCCESS]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity started...]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. SUCCESS]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. SUCCESS]
19:05:19.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity started...]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. SUCCESS]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting started...]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. SUCCESS]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals started...]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. SUCCESS]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals started...]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. SUCCESS]
19:05:19.176 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity started...]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. SUCCESS]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting started...]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. SUCCESS]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. org.apache.commons.math.linear.RealVectorFormatTest#testParseNan started...]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. SUCCESS]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity started...]
19:05:19.177 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. SUCCESS]
19:05:19.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals started...]
19:05:19.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. SUCCESS]
19:05:19.178 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. org.apache.commons.math.linear.RealVectorTest#testMap started...]
19:05:19.179 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. SUCCESS]
19:05:19.179 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. org.apache.commons.math.linear.RealVectorTest#testClone started...]
19:05:19.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. SUCCESS]
19:05:19.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. org.apache.commons.math.linear.RealVectorTest#testCombineToSelf started...]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. SUCCESS]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition started...]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. SUCCESS]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. org.apache.commons.math.linear.RealVectorTest#testCombine started...]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. SUCCESS]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. org.apache.commons.math.linear.RealVectorTest#testSparseIterator started...]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. SUCCESS]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition started...]
19:05:19.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. SUCCESS]
19:05:19.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. org.apache.commons.math.linear.RealVectorTest#testIterator started...]
19:05:19.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. SUCCESS]
19:05:19.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal started...]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. SUCCESS]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testRank started...]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. SUCCESS]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns started...]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. SUCCESS]
19:05:19.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions started...]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. SUCCESS]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber started...]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. SUCCESS]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt started...]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. SUCCESS]
19:05:19.271 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testStability1 started...]
19:05:19.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. SUCCESS]
19:05:19.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testStability2 started...]
19:05:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. SUCCESS]
19:05:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testInverseConditionNumber started...]
19:05:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. SUCCESS]
19:05:19.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard started...]
19:05:19.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. SUCCESS]
19:05:19.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows started...]
19:05:19.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. SUCCESS]
19:05:19.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal started...]
19:05:19.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. SUCCESS]
19:05:19.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. org.apache.commons.math.linear.SingularValueSolverTest#testSolve started...]
19:05:19.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. SUCCESS]
19:05:19.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors started...]
19:05:19.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. SUCCESS]
19:05:19.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber started...]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. SUCCESS]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve started...]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. SUCCESS]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. org.apache.commons.math.linear.SingularValueSolverTest#testMath320B started...]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. SUCCESS]
19:05:19.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate started...]
19:05:19.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. SUCCESS]
19:05:19.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples started...]
19:05:19.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. SUCCESS]
19:05:19.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry started...]
19:05:19.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. SUCCESS]
19:05:19.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail started...]
19:05:19.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. SUCCESS]
19:05:19.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd started...]
19:05:19.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. SUCCESS]
19:05:19.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd started...]
19:05:19.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. SUCCESS]
19:05:19.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace started...]
19:05:19.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. SUCCESS]
19:05:19.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus started...]
19:05:19.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. SUCCESS]
19:05:19.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2 started...]
19:05:19.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. SUCCESS]
19:05:19.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions started...]
19:05:19.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. SUCCESS]
19:05:19.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix started...]
19:05:19.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. SUCCESS]
19:05:19.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector started...]
19:05:19.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. SUCCESS]
19:05:19.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions started...]
19:05:19.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. SUCCESS]
19:05:19.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209 started...]
19:05:19.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. SUCCESS]
19:05:19.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors started...]
19:05:19.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. SUCCESS]
19:05:19.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix started...]
19:05:19.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. SUCCESS]
19:05:19.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector started...]
19:05:19.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. SUCCESS]
19:05:19.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply started...]
19:05:19.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. SUCCESS]
19:05:19.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode started...]
19:05:19.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. SUCCESS]
19:05:19.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose started...]
19:05:19.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. SUCCESS]
19:05:19.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply started...]
19:05:19.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. SUCCESS]
19:05:19.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix started...]
19:05:19.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. SUCCESS]
19:05:19.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix started...]
19:05:19.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. SUCCESS]
19:05:19.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector started...]
19:05:19.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. SUCCESS]
19:05:19.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. org.apache.commons.math.linear.SparseFieldVectorTest#testMisc started...]
19:05:19.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. SUCCESS]
19:05:19.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions started...]
19:05:19.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. SUCCESS]
19:05:19.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates started...]
19:05:19.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. SUCCESS]
19:05:19.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions started...]
19:05:19.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. SUCCESS]
19:05:19.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct started...]
19:05:19.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. SUCCESS]
19:05:19.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. org.apache.commons.math.linear.SparseRealMatrixTest#testOperate started...]
19:05:19.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. SUCCESS]
19:05:19.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. org.apache.commons.math.linear.SparseRealMatrixTest#testExamples started...]
19:05:19.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. SUCCESS]
19:05:19.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry started...]
19:05:19.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. SUCCESS]
19:05:19.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail started...]
19:05:19.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. SUCCESS]
19:05:19.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. org.apache.commons.math.linear.SparseRealMatrixTest#testAdd started...]
19:05:19.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. SUCCESS]
19:05:19.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd started...]
19:05:19.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. SUCCESS]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. org.apache.commons.math.linear.SparseRealMatrixTest#testTrace started...]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. SUCCESS]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. org.apache.commons.math.linear.SparseRealMatrixTest#testNorm started...]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. SUCCESS]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. org.apache.commons.math.linear.SparseRealMatrixTest#testToString started...]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. SUCCESS]
19:05:19.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus started...]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. SUCCESS]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2 started...]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. SUCCESS]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions started...]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. SUCCESS]
19:05:19.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix started...]
19:05:19.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. SUCCESS]
19:05:19.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector started...]
19:05:19.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. SUCCESS]
19:05:19.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions started...]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. SUCCESS]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. org.apache.commons.math.linear.SparseRealMatrixTest#testMath209 started...]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. SUCCESS]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors started...]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. SUCCESS]
19:05:19.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix started...]
19:05:19.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. SUCCESS]
19:05:19.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector started...]
19:05:19.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. SUCCESS]
19:05:19.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply started...]
19:05:19.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. SUCCESS]
19:05:19.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode started...]
19:05:19.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. SUCCESS]
19:05:19.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. org.apache.commons.math.linear.SparseRealMatrixTest#testSerial started...]
19:05:19.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. SUCCESS]
19:05:19.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose started...]
19:05:19.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. SUCCESS]
19:05:19.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply started...]
19:05:19.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. SUCCESS]
19:05:19.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix started...]
19:05:19.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. SUCCESS]
19:05:19.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix started...]
19:05:19.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. SUCCESS]
19:05:19.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector started...]
19:05:19.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. SUCCESS]
19:05:19.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. org.apache.commons.math.linear.SparseRealVectorTest#testMisc started...]
19:05:19.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. SUCCESS]
19:05:19.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. org.apache.commons.math.linear.SparseRealVectorTest#testConstructors started...]
19:05:19.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. SUCCESS]
19:05:19.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions started...]
19:05:19.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. SUCCESS]
19:05:19.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut started...]
19:05:19.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. SUCCESS]
19:05:19.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. org.apache.commons.math.linear.SparseRealVectorTest#testPredicates started...]
19:05:19.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. SUCCESS]
19:05:19.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification started...]
19:05:19.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. SUCCESS]
19:05:19.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions started...]
19:05:19.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. SUCCESS]
19:05:19.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct started...]
19:05:19.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. SUCCESS]
19:05:19.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. org.apache.commons.math.linear.SparseRealVectorTest#testSerial started...]
19:05:19.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. SUCCESS]
19:05:19.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt started...]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. SUCCESS]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal started...]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. SUCCESS]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare started...]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. SUCCESS]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal started...]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. SUCCESS]
19:05:19.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal started...]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. SUCCESS]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal started...]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. SUCCESS]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3 started...]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. SUCCESS]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5 started...]
19:05:19.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. SUCCESS]
19:05:19.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector started...]
19:05:19.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. SUCCESS]
19:05:19.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry started...]
19:05:19.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. SUCCESS]
19:05:19.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded started...]
19:05:19.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. SUCCESS]
19:05:19.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector started...]
19:05:19.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. SUCCESS]
19:05:19.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator started...]
19:05:19.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. SUCCESS]
19:05:19.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator started...]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. SUCCESS]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry started...]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. SUCCESS]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector started...]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. SUCCESS]
19:05:19.966 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry started...]
19:05:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. SUCCESS]
19:05:19.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded started...]
19:05:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. SUCCESS]
19:05:20.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector started...]
19:05:20.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. SUCCESS]
19:05:20.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator started...]
19:05:20.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. SUCCESS]
19:05:20.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator started...]
19:05:20.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. SUCCESS]
19:05:20.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry started...]
19:05:20.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. SUCCESS]
19:05:20.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries started...]
19:05:20.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. SUCCESS]
19:05:20.159 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging started...]
19:05:20.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. SUCCESS]
19:05:20.163 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess started...]
19:05:20.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. SUCCESS]
19:05:20.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions started...]
19:05:20.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. SUCCESS]
19:05:20.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep started...]
19:05:20.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. SUCCESS]
19:05:20.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps started...]
19:05:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. SUCCESS]
19:05:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep started...]
19:05:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. SUCCESS]
19:05:20.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension started...]
19:05:20.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. SUCCESS]
19:05:20.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. org.apache.commons.math.ode.events.EventStateTest#closeEvents started...]
19:05:20.282 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. SUCCESS]
19:05:20.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0 started...]
19:05:20.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. SUCCESS]
19:05:20.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1 started...]
19:05:20.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. SUCCESS]
19:05:20.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial started...]
19:05:20.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. SUCCESS]
19:05:20.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck started...]
19:05:20.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. SUCCESS]
19:05:20.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep started...]
19:05:20.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. SUCCESS]
19:05:20.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations started...]
19:05:20.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. SUCCESS]
19:05:20.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance started...]
19:05:20.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. SUCCESS]
19:05:20.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward started...]
19:05:20.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. SUCCESS]
19:05:20.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial started...]
19:05:20.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. SUCCESS]
19:05:20.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck started...]
19:05:20.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. SUCCESS]
19:05:20.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep started...]
19:05:20.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. SUCCESS]
19:05:20.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations started...]
19:05:20.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. SUCCESS]
19:05:20.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance started...]
19:05:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. SUCCESS]
19:05:20.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward started...]
19:05:20.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. SUCCESS]
19:05:20.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward started...]
19:05:20.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. SUCCESS]
19:05:20.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent started...]
19:05:20.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. SUCCESS]
19:05:20.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep started...]
19:05:20.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. SUCCESS]
19:05:20.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps started...]
19:05:20.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. SUCCESS]
19:05:20.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep started...]
19:05:20.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. SUCCESS]
19:05:20.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler started...]
19:05:20.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. SUCCESS]
19:05:20.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks started...]
19:05:20.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. SUCCESS]
19:05:20.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize started...]
19:05:20.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. SUCCESS]
19:05:20.731 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency started...]
19:05:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. SUCCESS]
19:05:20.742 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization started...]
19:05:20.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. SUCCESS]
19:05:20.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep started...]
19:05:20.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. SUCCESS]
19:05:20.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck started...]
19:05:20.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. SUCCESS]
19:05:20.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward started...]
19:05:20.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. SUCCESS]
19:05:20.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps started...]
19:05:20.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. SUCCESS]
19:05:20.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep started...]
19:05:20.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. SUCCESS]
19:05:20.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents started...]
19:05:20.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. SUCCESS]
19:05:20.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler started...]
19:05:20.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. SUCCESS]
19:05:20.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance started...]
19:05:20.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. SUCCESS]
19:05:20.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency started...]
19:05:20.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. SUCCESS]
19:05:20.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone started...]
19:05:21.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. SUCCESS]
19:05:21.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization started...]
19:05:21.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. SUCCESS]
19:05:21.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck started...]
19:05:21.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. SUCCESS]
19:05:21.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward started...]
19:05:21.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. SUCCESS]
19:05:21.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps started...]
19:05:21.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. SUCCESS]
19:05:21.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent started...]
19:05:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. SUCCESS]
19:05:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep started...]
19:05:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. SUCCESS]
19:05:21.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative started...]
19:05:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. SUCCESS]
19:05:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck started...]
19:05:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. SUCCESS]
19:05:21.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents started...]
19:05:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. SUCCESS]
19:05:21.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler started...]
19:05:21.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. SUCCESS]
19:05:21.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance started...]
19:05:21.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. SUCCESS]
19:05:21.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency started...]
19:05:21.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. SUCCESS]
19:05:21.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone started...]
19:05:21.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. SUCCESS]
19:05:21.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization started...]
19:05:21.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. SUCCESS]
19:05:21.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck started...]
19:05:21.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. SUCCESS]
19:05:21.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward started...]
19:05:21.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. SUCCESS]
19:05:21.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep started...]
19:05:21.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. SUCCESS]
19:05:21.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps started...]
19:05:21.155 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. SUCCESS]
19:05:21.156 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep started...]
19:05:21.156 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. SUCCESS]
19:05:21.156 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize started...]
19:05:21.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. SUCCESS]
19:05:21.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds started...]
19:05:21.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. SUCCESS]
19:05:21.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency started...]
19:05:21.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. SUCCESS]
19:05:21.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside started...]
19:05:21.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. SUCCESS]
19:05:21.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization started...]
19:05:21.198 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. SUCCESS]
19:05:21.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset started...]
19:05:21.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. SUCCESS]
19:05:21.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck started...]
19:05:21.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. SUCCESS]
19:05:21.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward started...]
19:05:21.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. SUCCESS]
19:05:21.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep started...]
19:05:21.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. SUCCESS]
19:05:21.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps started...]
19:05:21.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. SUCCESS]
19:05:21.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep started...]
19:05:21.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. SUCCESS]
19:05:21.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative started...]
19:05:21.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. SUCCESS]
19:05:21.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler started...]
19:05:21.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. SUCCESS]
19:05:21.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize started...]
19:05:21.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. SUCCESS]
19:05:21.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency started...]
19:05:21.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. SUCCESS]
19:05:21.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization started...]
19:05:21.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. SUCCESS]
19:05:21.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck started...]
19:05:21.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. SUCCESS]
19:05:21.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward started...]
19:05:21.418 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. SUCCESS]
19:05:21.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps started...]
19:05:21.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. SUCCESS]
19:05:21.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls started...]
19:05:21.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. SUCCESS]
19:05:21.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep started...]
19:05:21.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. SUCCESS]
19:05:21.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative started...]
19:05:21.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. SUCCESS]
19:05:21.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck started...]
19:05:21.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. SUCCESS]
19:05:21.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents started...]
19:05:21.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. SUCCESS]
19:05:21.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596 started...]
19:05:21.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. SUCCESS]
19:05:21.677 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler started...]
19:05:21.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. SUCCESS]
19:05:21.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance started...]
19:05:21.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. SUCCESS]
19:05:21.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency started...]
19:05:21.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. SUCCESS]
19:05:21.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone started...]
19:05:21.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. SUCCESS]
19:05:21.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization started...]
19:05:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. SUCCESS]
19:05:21.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward started...]
19:05:21.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. SUCCESS]
19:05:21.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative started...]
19:05:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. SUCCESS]
19:05:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep started...]
19:05:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. SUCCESS]
19:05:21.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents started...]
19:05:21.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. SUCCESS]
19:05:21.737 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors started...]
19:05:21.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. SUCCESS]
19:05:21.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler started...]
19:05:21.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. SUCCESS]
19:05:21.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance started...]
19:05:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. SUCCESS]
19:05:21.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence started...]
19:05:21.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. SUCCESS]
19:05:21.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks started...]
19:05:21.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. SUCCESS]
19:05:21.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency started...]
19:05:21.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. SUCCESS]
19:05:21.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone started...]
19:05:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. SUCCESS]
19:05:21.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization started...]
19:05:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. SUCCESS]
19:05:21.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck started...]
19:05:21.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. SUCCESS]
19:05:21.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward started...]
19:05:21.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. SUCCESS]
19:05:21.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep started...]
19:05:21.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. SUCCESS]
19:05:21.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps started...]
19:05:22.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. SUCCESS]
19:05:22.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep started...]
19:05:22.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. SUCCESS]
19:05:22.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize started...]
19:05:22.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. SUCCESS]
19:05:22.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency started...]
19:05:22.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. SUCCESS]
19:05:22.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization started...]
19:05:22.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. SUCCESS]
19:05:22.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck started...]
19:05:22.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. SUCCESS]
19:05:22.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward started...]
19:05:22.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. SUCCESS]
19:05:22.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep started...]
19:05:22.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. SUCCESS]
19:05:22.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps started...]
19:05:22.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. SUCCESS]
19:05:22.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep started...]
19:05:22.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. SUCCESS]
19:05:22.183 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler started...]
19:05:22.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. SUCCESS]
19:05:22.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize started...]
19:05:22.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. SUCCESS]
19:05:22.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency started...]
19:05:22.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. SUCCESS]
19:05:22.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization started...]
19:05:22.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. SUCCESS]
19:05:22.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization started...]
19:05:22.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. SUCCESS]
19:05:22.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization started...]
19:05:22.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. SUCCESS]
19:05:22.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState started...]
19:05:22.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. SUCCESS]
19:05:22.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset started...]
19:05:22.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. SUCCESS]
19:05:22.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency started...]
19:05:22.234 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. SUCCESS]
19:05:22.234 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization started...]
19:05:22.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. SUCCESS]
19:05:22.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev started...]
19:05:22.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. SUCCESS]
19:05:22.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither started...]
19:05:22.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. SUCCESS]
19:05:22.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev started...]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. SUCCESS]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev started...]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. SUCCESS]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev started...]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. SUCCESS]
19:05:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst started...]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. SUCCESS]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth started...]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. SUCCESS]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast started...]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. SUCCESS]
19:05:22.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither started...]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. SUCCESS]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev started...]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. SUCCESS]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst started...]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. SUCCESS]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev started...]
19:05:22.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. SUCCESS]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev started...]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. SUCCESS]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth started...]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. SUCCESS]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast started...]
19:05:22.250 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. SUCCESS]
19:05:22.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev started...]
19:05:22.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. SUCCESS]
19:05:22.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev started...]
19:05:22.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. SUCCESS]
19:05:22.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither started...]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. SUCCESS]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev started...]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. SUCCESS]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev started...]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. SUCCESS]
19:05:22.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev started...]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. SUCCESS]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst started...]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. SUCCESS]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth started...]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. SUCCESS]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast started...]
19:05:22.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. SUCCESS]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither started...]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. SUCCESS]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev started...]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. SUCCESS]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst started...]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. SUCCESS]
19:05:22.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev started...]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. SUCCESS]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev started...]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. SUCCESS]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth started...]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. SUCCESS]
19:05:22.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast started...]
19:05:22.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. SUCCESS]
19:05:22.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev started...]
19:05:22.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. SUCCESS]
19:05:22.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries started...]
19:05:22.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. SUCCESS]
19:05:22.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd started...]
19:05:22.260 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. SUCCESS]
19:05:22.260 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting started...]
19:05:22.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. SUCCESS]
19:05:22.274 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial started...]
19:05:22.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. SUCCESS]
19:05:22.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum started...]
19:05:22.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. SUCCESS]
19:05:22.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock started...]
19:05:22.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. SUCCESS]
19:05:22.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
19:05:23.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. SUCCESS]
19:05:23.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated END
19:05:25.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. SUCCESS]
19:05:25.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli END
19:05:25.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. SUCCESS]
19:05:25.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
19:05:25.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. SUCCESS]
19:05:25.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes END
19:05:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. SUCCESS]
19:05:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
19:05:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. SUCCESS]
19:05:25.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar END
19:05:25.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. SUCCESS]
19:05:25.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
19:05:25.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. SUCCESS]
19:05:25.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin END
19:05:25.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. SUCCESS]
19:05:25.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow END
19:05:25.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. SUCCESS]
19:05:25.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
19:05:25.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. SUCCESS]
19:05:25.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley started...]
19:05:25.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. SUCCESS]
19:05:25.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab END
19:05:25.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. SUCCESS]
19:05:25.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow started...]
19:05:25.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. SUCCESS]
19:05:25.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
19:05:25.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. SUCCESS]
19:05:25.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere END
19:05:25.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. SUCCESS]
19:05:25.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet END
19:05:25.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. SUCCESS]
19:05:25.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
19:05:25.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. SUCCESS]
19:05:25.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen started...]
19:05:26.431 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. SUCCESS]
19:05:26.431 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated started...]
19:05:26.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. SUCCESS]
19:05:26.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse started...]
19:05:27.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. SUCCESS]
19:05:27.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes started...]
19:05:28.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. SUCCESS]
19:05:28.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar started...]
19:05:28.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. SUCCESS]
19:05:28.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen started...]
19:05:28.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. SUCCESS]
19:05:28.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds started...]
19:05:28.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. SUCCESS]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange started...]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. SUCCESS]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative started...]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. SUCCESS]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch started...]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. SUCCESS]
19:05:28.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData started...]
19:05:28.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. SUCCESS]
19:05:28.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin started...]
19:05:30.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. SUCCESS]
19:05:30.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen started...]
19:05:31.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. SUCCESS]
19:05:31.270 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow started...]
19:05:31.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. SUCCESS]
19:05:31.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize started...]
19:05:31.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. SUCCESS]
19:05:31.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley started...]
19:05:32.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. SUCCESS]
19:05:32.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab started...]
19:05:32.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. SUCCESS]
19:05:32.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow started...]
19:05:32.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. SUCCESS]
19:05:32.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch started...]
19:05:32.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. SUCCESS]
19:05:32.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere started...]
19:05:32.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. SUCCESS]
19:05:32.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet started...]
19:05:33.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. SUCCESS]
19:05:33.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic started...]
19:05:33.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. SUCCESS]
19:05:33.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic started...]
19:05:33.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. SUCCESS]
19:05:33.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc started...]
19:05:33.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. SUCCESS]
19:05:33.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283 started...]
19:05:33.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. SUCCESS]
19:05:33.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1 started...]
19:05:33.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. SUCCESS]
19:05:33.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2 started...]
19:05:33.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. SUCCESS]
19:05:33.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock started...]
19:05:33.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. SUCCESS]
19:05:33.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1 started...]
19:05:33.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. SUCCESS]
19:05:33.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2 started...]
19:05:33.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. SUCCESS]
19:05:33.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell started...]
19:05:33.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. SUCCESS]
19:05:33.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations started...]
19:05:33.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. SUCCESS]
19:05:33.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1 started...]
19:05:33.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. SUCCESS]
19:05:33.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2 started...]
19:05:33.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. SUCCESS]
19:05:33.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock started...]
19:05:33.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. SUCCESS]
19:05:33.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1 started...]
19:05:33.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. SUCCESS]
19:05:33.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2 started...]
19:05:33.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. SUCCESS]
19:05:33.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3 started...]
19:05:33.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. SUCCESS]
19:05:33.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1 started...]
19:05:33.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. SUCCESS]
19:05:33.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2 started...]
19:05:33.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. SUCCESS]
19:05:33.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell started...]
19:05:33.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. SUCCESS]
19:05:33.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303 started...]
19:05:33.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. SUCCESS]
19:05:33.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304 started...]
19:05:33.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. SUCCESS]
19:05:33.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372 started...]
19:05:33.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. SUCCESS]
19:05:33.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01 started...]
19:05:33.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. SUCCESS]
19:05:33.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02 started...]
19:05:33.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. SUCCESS]
19:05:33.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03 started...]
19:05:33.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. SUCCESS]
19:05:33.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04 started...]
19:05:33.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. SUCCESS]
19:05:33.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05 started...]
19:05:33.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. SUCCESS]
19:05:33.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06 started...]
19:05:33.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. SUCCESS]
19:05:33.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07 started...]
19:05:33.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. SUCCESS]
19:05:33.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519 started...]
19:05:33.398 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. SUCCESS]
19:05:33.398 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError started...]
19:05:33.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. SUCCESS]
19:05:33.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData started...]
19:05:33.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. SUCCESS]
19:05:33.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1 started...]
19:05:33.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. SUCCESS]
19:05:33.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess started...]
19:05:33.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. SUCCESS]
19:05:33.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted started...]
19:05:33.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. SUCCESS]
19:05:33.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError started...]
19:05:33.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. SUCCESS]
19:05:33.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError started...]
19:05:33.432 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. SUCCESS]
19:05:33.432 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable started...]
19:05:33.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. SUCCESS]
19:05:33.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError started...]
19:05:33.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. SUCCESS]
19:05:33.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable started...]
19:05:33.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. SUCCESS]
19:05:33.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit started...]
19:05:33.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. SUCCESS]
19:05:33.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency started...]
19:05:33.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. SUCCESS]
19:05:33.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations started...]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. SUCCESS]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial started...]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. SUCCESS]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1 started...]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. SUCCESS]
19:05:33.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2 started...]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. SUCCESS]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets started...]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. SUCCESS]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple started...]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. SUCCESS]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted started...]
19:05:33.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. SUCCESS]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned started...]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. SUCCESS]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation started...]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. SUCCESS]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible started...]
19:05:33.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. SUCCESS]
19:05:33.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations started...]
19:05:33.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. SUCCESS]
19:05:33.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting started...]
19:05:33.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. SUCCESS]
19:05:33.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet started...]
19:05:33.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. SUCCESS]
19:05:33.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations started...]
19:05:33.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. SUCCESS]
19:05:33.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit started...]
19:05:33.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. SUCCESS]
19:05:33.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency started...]
19:05:33.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. SUCCESS]
19:05:33.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes started...]
19:05:33.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. SUCCESS]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations started...]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. SUCCESS]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial started...]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. SUCCESS]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation started...]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. SUCCESS]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets started...]
19:05:33.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. SUCCESS]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple started...]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. SUCCESS]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted started...]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. SUCCESS]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned started...]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. SUCCESS]
19:05:33.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199 started...]
19:05:33.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. SUCCESS]
19:05:33.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible started...]
19:05:33.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. SUCCESS]
19:05:33.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations started...]
19:05:33.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. SUCCESS]
19:05:33.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting started...]
19:05:33.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. SUCCESS]
19:05:33.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters started...]
19:05:33.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. SUCCESS]
19:05:33.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet started...]
19:05:33.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. SUCCESS]
19:05:33.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit started...]
19:05:33.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. SUCCESS]
19:05:33.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1 started...]
19:05:33.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. SUCCESS]
19:05:33.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis started...]
19:05:33.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. SUCCESS]
19:05:33.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson started...]
19:05:33.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. SUCCESS]
19:05:33.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok started...]
19:05:33.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. SUCCESS]
19:05:33.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional started...]
19:05:33.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. SUCCESS]
19:05:33.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley started...]
19:05:33.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. SUCCESS]
19:05:33.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer started...]
19:05:33.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. SUCCESS]
19:05:33.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank started...]
19:05:33.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. SUCCESS]
19:05:33.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth started...]
19:05:33.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. SUCCESS]
19:05:33.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1 started...]
19:05:33.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. SUCCESS]
19:05:33.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2 started...]
19:05:33.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. SUCCESS]
19:05:33.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson started...]
19:05:33.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. SUCCESS]
19:05:33.674 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne started...]
19:05:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. SUCCESS]
19:05:33.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular started...]
19:05:33.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. SUCCESS]
19:05:33.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad started...]
19:05:33.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. SUCCESS]
19:05:33.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows started...]
19:05:33.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. SUCCESS]
19:05:33.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard started...]
19:05:33.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. SUCCESS]
19:05:33.725 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear started...]
19:05:33.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. SUCCESS]
19:05:33.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency started...]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. SUCCESS]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations started...]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. SUCCESS]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial started...]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. SUCCESS]
19:05:33.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets started...]
19:05:33.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. SUCCESS]
19:05:33.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple started...]
19:05:33.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. SUCCESS]
19:05:33.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted started...]
19:05:33.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. SUCCESS]
19:05:33.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned started...]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. SUCCESS]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation started...]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. SUCCESS]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible started...]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. SUCCESS]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations started...]
19:05:33.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. SUCCESS]
19:05:33.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting started...]
19:05:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. SUCCESS]
19:05:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet started...]
19:05:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. SUCCESS]
19:05:33.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative started...]
19:05:33.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. SUCCESS]
19:05:33.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon started...]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. SUCCESS]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution started...]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. SUCCESS]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint started...]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. SUCCESS]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver started...]
19:05:33.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. SUCCESS]
19:05:33.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ started...]
19:05:33.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. SUCCESS]
19:05:33.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ started...]
19:05:33.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. SUCCESS]
19:05:33.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel started...]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. SUCCESS]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution started...]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. SUCCESS]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272 started...]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. SUCCESS]
19:05:33.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286 started...]
19:05:33.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. SUCCESS]
19:05:33.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288 started...]
19:05:33.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. SUCCESS]
19:05:33.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293 started...]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. SUCCESS]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars started...]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. SUCCESS]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization started...]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. SUCCESS]
19:05:33.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2 started...]
19:05:33.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. SUCCESS]
19:05:33.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy started...]
19:05:33.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. SUCCESS]
19:05:33.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection started...]
19:05:33.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. SUCCESS]
19:05:33.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel started...]
19:05:34.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. SUCCESS]
19:05:34.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable started...]
19:05:34.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. SUCCESS]
19:05:34.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution started...]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. SUCCESS]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable started...]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. SUCCESS]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization started...]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. SUCCESS]
19:05:34.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars started...]
19:05:34.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. SUCCESS]
19:05:34.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial started...]
19:05:34.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. SUCCESS]
19:05:34.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective started...]
19:05:34.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. SUCCESS]
19:05:34.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary started...]
19:05:34.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. SUCCESS]
19:05:34.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax started...]
19:05:34.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. SUCCESS]
19:05:34.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin started...]
19:05:34.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. SUCCESS]
19:05:34.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering started...]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. SUCCESS]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax started...]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. SUCCESS]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin started...]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. SUCCESS]
19:05:34.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints started...]
19:05:34.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. SUCCESS]
19:05:34.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics started...]
19:05:34.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. SUCCESS]
19:05:34.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin started...]
19:05:34.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. SUCCESS]
19:05:34.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin started...]
19:05:34.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. SUCCESS]
19:05:34.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction started...]
19:05:34.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. SUCCESS]
19:05:34.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin started...]
19:05:34.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. SUCCESS]
19:05:34.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect started...]
19:05:34.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. SUCCESS]
19:05:34.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect started...]
19:05:34.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. SUCCESS]
19:05:34.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect started...]
19:05:34.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. SUCCESS]
19:05:34.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect started...]
19:05:34.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. SUCCESS]
19:05:34.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2 started...]
19:05:34.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. SUCCESS]
19:05:34.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect started...]
19:05:34.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. SUCCESS]
19:05:34.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect started...]
19:05:34.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. SUCCESS]
19:05:34.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2 started...]
19:05:34.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. SUCCESS]
19:05:34.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE started...]
19:05:34.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. SUCCESS]
19:05:34.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg started...]
19:05:34.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. SUCCESS]
19:05:34.692 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes started...]
19:05:34.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. SUCCESS]
19:05:34.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2 started...]
19:05:34.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. SUCCESS]
19:05:34.730 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal started...]
19:05:34.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. SUCCESS]
19:05:34.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample started...]
19:05:34.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. SUCCESS]
19:05:34.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues started...]
19:05:34.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. SUCCESS]
19:05:34.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints started...]
19:05:34.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. SUCCESS]
19:05:34.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian started...]
19:05:34.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. SUCCESS]
19:05:34.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF started...]
19:05:34.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. SUCCESS]
19:05:34.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT started...]
19:05:34.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. SUCCESS]
19:05:34.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare started...]
19:05:34.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. SUCCESS]
19:05:34.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong started...]
19:05:34.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. SUCCESS]
19:05:34.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex started...]
19:05:34.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. SUCCESS]
19:05:34.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt started...]
19:05:34.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. SUCCESS]
19:05:34.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency started...]
19:05:36.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. SUCCESS]
19:05:36.280 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric started...]
19:05:36.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. SUCCESS]
19:05:36.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues started...]
19:05:36.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. SUCCESS]
19:05:36.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential started...]
19:05:36.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. SUCCESS]
19:05:36.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson started...]
19:05:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. SUCCESS]
19:05:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform started...]
19:05:36.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. SUCCESS]
19:05:36.297 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation started...]
19:05:36.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. SUCCESS]
19:05:36.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial started...]
19:05:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. SUCCESS]
19:05:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig started...]
19:05:36.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. SUCCESS]
19:05:36.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate started...]
19:05:36.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. SUCCESS]
19:05:36.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex started...]
19:05:36.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. SUCCESS]
19:05:36.363 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt started...]
19:05:36.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. SUCCESS]
19:05:36.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy started...]
19:05:36.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. SUCCESS]
19:05:36.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma started...]
19:05:36.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. SUCCESS]
19:05:36.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull started...]
19:05:36.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. SUCCESS]
19:05:36.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta started...]
19:05:36.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. SUCCESS]
19:05:36.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong started...]
19:05:36.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. SUCCESS]
19:05:36.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf started...]
19:05:36.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. SUCCESS]
19:05:36.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect started...]
19:05:37.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. SUCCESS]
19:05:37.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect started...]
19:05:37.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. SUCCESS]
19:05:37.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect started...]
19:05:37.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. SUCCESS]
19:05:37.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect started...]
19:05:37.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. SUCCESS]
19:05:37.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2 started...]
19:05:37.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. SUCCESS]
19:05:37.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect started...]
19:05:37.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. SUCCESS]
19:05:37.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect started...]
19:05:37.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. SUCCESS]
19:05:37.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2 started...]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. SUCCESS]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE started...]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. SUCCESS]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg started...]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. SUCCESS]
19:05:37.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes started...]
19:05:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. SUCCESS]
19:05:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2 started...]
19:05:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. SUCCESS]
19:05:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal started...]
19:05:37.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. SUCCESS]
19:05:37.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample started...]
19:05:37.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. SUCCESS]
19:05:37.174 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues started...]
19:05:37.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. SUCCESS]
19:05:37.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints started...]
19:05:37.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. SUCCESS]
19:05:37.175 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian started...]
19:05:37.179 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. SUCCESS]
19:05:37.180 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF started...]
19:05:37.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. SUCCESS]
19:05:37.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT started...]
19:05:37.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. SUCCESS]
19:05:37.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare started...]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. SUCCESS]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureLong started...]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. SUCCESS]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureHex started...]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. SUCCESS]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureInt started...]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. SUCCESS]
19:05:37.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency started...]
19:05:38.724 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. SUCCESS]
19:05:38.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric started...]
19:05:38.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. SUCCESS]
19:05:38.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues started...]
19:05:38.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. SUCCESS]
19:05:38.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential started...]
19:05:38.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. SUCCESS]
19:05:38.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson started...]
19:05:38.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. SUCCESS]
19:05:38.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform started...]
19:05:38.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. SUCCESS]
19:05:38.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation started...]
19:05:38.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. SUCCESS]
19:05:38.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial started...]
19:05:38.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. SUCCESS]
19:05:38.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig started...]
19:05:38.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. SUCCESS]
19:05:38.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate started...]
19:05:38.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. SUCCESS]
19:05:38.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex started...]
19:05:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. SUCCESS]
19:05:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt started...]
19:05:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. SUCCESS]
19:05:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy started...]
19:05:38.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. SUCCESS]
19:05:38.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma started...]
19:05:38.810 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. SUCCESS]
19:05:38.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull started...]
19:05:38.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. SUCCESS]
19:05:38.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta started...]
19:05:38.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. SUCCESS]
19:05:38.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong started...]
19:05:38.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. SUCCESS]
19:05:38.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf started...]
19:05:38.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. SUCCESS]
19:05:38.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank started...]
19:05:38.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. SUCCESS]
19:05:38.841 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance started...]
19:05:38.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. SUCCESS]
19:05:38.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226 started...]
19:05:38.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. SUCCESS]
19:05:38.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix started...]
19:05:38.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. SUCCESS]
19:05:38.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow started...]
19:05:38.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. SUCCESS]
19:05:38.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization started...]
19:05:38.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. SUCCESS]
19:05:38.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. org.apache.commons.math.random.EmpiricalDistributionTest#testLoad started...]
19:05:38.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. SUCCESS]
19:05:38.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. org.apache.commons.math.random.EmpiricalDistributionTest#testNext started...]
19:05:38.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. SUCCESS]
19:05:38.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray started...]
19:05:38.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. SUCCESS]
19:05:38.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig started...]
19:05:38.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. SUCCESS]
19:05:38.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat started...]
19:05:38.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. SUCCESS]
19:05:38.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad started...]
19:05:38.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. SUCCESS]
19:05:38.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine started...]
19:05:39.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. SUCCESS]
19:05:39.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile started...]
19:05:39.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. SUCCESS]
19:05:39.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds started...]
19:05:39.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. SUCCESS]
19:05:39.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL started...]
19:05:39.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. SUCCESS]
19:05:39.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail started...]
19:05:39.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. SUCCESS]
19:05:39.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed started...]
19:05:39.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. SUCCESS]
19:05:39.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation started...]
19:05:39.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. SUCCESS]
19:05:39.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura started...]
19:05:39.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. SUCCESS]
19:05:39.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect started...]
19:05:39.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. SUCCESS]
19:05:39.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect started...]
19:05:39.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. SUCCESS]
19:05:39.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect started...]
19:05:39.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. SUCCESS]
19:05:39.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect started...]
19:05:39.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. SUCCESS]
19:05:39.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2 started...]
19:05:39.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. SUCCESS]
19:05:39.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect started...]
19:05:39.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. SUCCESS]
19:05:39.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect started...]
19:05:39.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. SUCCESS]
19:05:39.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. org.apache.commons.math.random.MersenneTwisterTest#testNextLong2 started...]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. SUCCESS]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE started...]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. SUCCESS]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg started...]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. SUCCESS]
19:05:39.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. org.apache.commons.math.random.MersenneTwisterTest#testNexBytes started...]
19:05:39.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. SUCCESS]
19:05:39.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. org.apache.commons.math.random.MersenneTwisterTest#testNextInt2 started...]
19:05:39.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. SUCCESS]
19:05:39.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. org.apache.commons.math.random.MersenneTwisterTest#testNextPascal started...]
19:05:39.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. SUCCESS]
19:05:39.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. org.apache.commons.math.random.MersenneTwisterTest#testNextSample started...]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. SUCCESS]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues started...]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. SUCCESS]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints started...]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. SUCCESS]
19:05:39.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian started...]
19:05:39.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. SUCCESS]
19:05:39.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. org.apache.commons.math.random.MersenneTwisterTest#testNextF started...]
19:05:39.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. SUCCESS]
19:05:39.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. org.apache.commons.math.random.MersenneTwisterTest#testNextT started...]
19:05:39.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. SUCCESS]
19:05:39.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare started...]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. SUCCESS]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureLong started...]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. SUCCESS]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureHex started...]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. SUCCESS]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureInt started...]
19:05:39.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. SUCCESS]
19:05:39.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency started...]
19:05:41.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. SUCCESS]
19:05:41.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric started...]
19:05:41.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. SUCCESS]
19:05:41.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues started...]
19:05:41.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. SUCCESS]
19:05:41.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. org.apache.commons.math.random.MersenneTwisterTest#testNextExponential started...]
19:05:41.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. SUCCESS]
19:05:41.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson started...]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. SUCCESS]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. org.apache.commons.math.random.MersenneTwisterTest#testNextUniform started...]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. SUCCESS]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation started...]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. SUCCESS]
19:05:41.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial started...]
19:05:41.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. SUCCESS]
19:05:41.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. org.apache.commons.math.random.MersenneTwisterTest#testConfig started...]
19:05:41.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. SUCCESS]
19:05:41.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate started...]
19:05:41.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. SUCCESS]
19:05:41.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. org.apache.commons.math.random.MersenneTwisterTest#testNextHex started...]
19:05:41.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. SUCCESS]
19:05:41.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. org.apache.commons.math.random.MersenneTwisterTest#testNextInt started...]
19:05:41.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. SUCCESS]
19:05:41.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy started...]
19:05:41.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. SUCCESS]
19:05:41.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. org.apache.commons.math.random.MersenneTwisterTest#testNextGamma started...]
19:05:41.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. SUCCESS]
19:05:41.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull started...]
19:05:41.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. SUCCESS]
19:05:41.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. org.apache.commons.math.random.MersenneTwisterTest#testNextBeta started...]
19:05:41.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. SUCCESS]
19:05:41.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. org.apache.commons.math.random.MersenneTwisterTest#testNextLong started...]
19:05:41.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. SUCCESS]
19:05:41.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. org.apache.commons.math.random.MersenneTwisterTest#testNextZipf started...]
19:05:41.154 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. SUCCESS]
19:05:41.154 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. org.apache.commons.math.random.RandomAdaptorTest#testAdaptor started...]
19:05:41.154 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. SUCCESS]
19:05:41.155 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. org.apache.commons.math.random.RandomDataTest#testNextPascal started...]
19:05:41.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. SUCCESS]
19:05:41.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. org.apache.commons.math.random.RandomDataTest#testNextSample started...]
19:05:41.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. SUCCESS]
19:05:41.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues started...]
19:05:41.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. SUCCESS]
19:05:41.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints started...]
19:05:41.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. SUCCESS]
19:05:41.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. org.apache.commons.math.random.RandomDataTest#testNextGaussian started...]
19:05:41.198 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. SUCCESS]
19:05:41.198 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. org.apache.commons.math.random.RandomDataTest#testNextF started...]
19:05:41.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. SUCCESS]
19:05:41.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. org.apache.commons.math.random.RandomDataTest#testNextT started...]
19:05:41.231 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. SUCCESS]
19:05:41.231 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. org.apache.commons.math.random.RandomDataTest#testNextChiSquare started...]
19:05:41.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. SUCCESS]
19:05:41.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. org.apache.commons.math.random.RandomDataTest#testNextSecureLong started...]
19:05:41.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. SUCCESS]
19:05:41.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. org.apache.commons.math.random.RandomDataTest#testNextSecureHex started...]
19:05:41.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. SUCCESS]
19:05:41.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. org.apache.commons.math.random.RandomDataTest#testNextSecureInt started...]
19:05:41.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. SUCCESS]
19:05:41.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency started...]
19:05:42.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. SUCCESS]
19:05:42.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. org.apache.commons.math.random.RandomDataTest#testNextHypergeometric started...]
19:05:42.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. SUCCESS]
19:05:42.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues started...]
19:05:42.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. SUCCESS]
19:05:42.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. org.apache.commons.math.random.RandomDataTest#testNextExponential started...]
19:05:42.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. SUCCESS]
19:05:42.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. org.apache.commons.math.random.RandomDataTest#testNextPoisson started...]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. SUCCESS]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. org.apache.commons.math.random.RandomDataTest#testNextUniform started...]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. SUCCESS]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. org.apache.commons.math.random.RandomDataTest#testNextPermutation started...]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. SUCCESS]
19:05:42.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. org.apache.commons.math.random.RandomDataTest#testNextBinomial started...]
19:05:42.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. SUCCESS]
19:05:42.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. org.apache.commons.math.random.RandomDataTest#testConfig started...]
19:05:42.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. SUCCESS]
19:05:42.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate started...]
19:05:42.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. SUCCESS]
19:05:42.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. org.apache.commons.math.random.RandomDataTest#testNextHex started...]
19:05:42.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. SUCCESS]
19:05:42.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. org.apache.commons.math.random.RandomDataTest#testNextInt started...]
19:05:42.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. SUCCESS]
19:05:42.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. org.apache.commons.math.random.RandomDataTest#testNextCauchy started...]
19:05:42.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. SUCCESS]
19:05:42.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. org.apache.commons.math.random.RandomDataTest#testNextGamma started...]
19:05:42.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. SUCCESS]
19:05:42.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. org.apache.commons.math.random.RandomDataTest#testNextWeibull started...]
19:05:42.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. SUCCESS]
19:05:42.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. org.apache.commons.math.random.RandomDataTest#testNextBeta started...]
19:05:42.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. SUCCESS]
19:05:42.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. org.apache.commons.math.random.RandomDataTest#testNextLong started...]
19:05:42.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. SUCCESS]
19:05:42.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. org.apache.commons.math.random.RandomDataTest#testNextZipf started...]
19:05:42.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. SUCCESS]
19:05:42.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation started...]
19:05:42.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. SUCCESS]
19:05:42.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation started...]
19:05:42.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. SUCCESS]
19:05:42.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. org.apache.commons.math.random.ValueServerTest#testProperties started...]
19:05:42.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. SUCCESS]
19:05:42.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. org.apache.commons.math.random.ValueServerTest#testModes started...]
19:05:42.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. SUCCESS]
19:05:42.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. org.apache.commons.math.random.ValueServerTest#testFill started...]
19:05:42.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. SUCCESS]
19:05:42.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile started...]
19:05:42.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. SUCCESS]
19:05:42.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile started...]
19:05:42.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. SUCCESS]
19:05:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. org.apache.commons.math.random.ValueServerTest#testNextDigestFail started...]
19:05:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. SUCCESS]
19:05:42.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. org.apache.commons.math.random.ValueServerTest#testFixedSeed started...]
19:05:42.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. SUCCESS]
19:05:42.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. org.apache.commons.math.random.ValueServerTest#testReplay started...]
19:05:42.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. SUCCESS]
19:05:42.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. org.apache.commons.math.random.ValueServerTest#testNextDigest started...]
19:05:43.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. SUCCESS]
19:05:43.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. org.apache.commons.math.random.Well1024aTest#testReferenceCode started...]
19:05:43.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. SUCCESS]
19:05:43.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. org.apache.commons.math.random.Well1024aTest#testNextIntDirect started...]
19:05:43.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. SUCCESS]
19:05:43.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. org.apache.commons.math.random.Well1024aTest#testNextFloatDirect started...]
19:05:43.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. SUCCESS]
19:05:43.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect started...]
19:05:43.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. SUCCESS]
19:05:43.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. org.apache.commons.math.random.Well1024aTest#testNextLongDirect started...]
19:05:43.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. SUCCESS]
19:05:43.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. org.apache.commons.math.random.Well1024aTest#testNexBoolean2 started...]
19:05:43.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. SUCCESS]
19:05:43.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. org.apache.commons.math.random.Well1024aTest#testFloatDirect started...]
19:05:43.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. SUCCESS]
19:05:43.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. org.apache.commons.math.random.Well1024aTest#testDoubleDirect started...]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. SUCCESS]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. org.apache.commons.math.random.Well1024aTest#testNextLong2 started...]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. SUCCESS]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. org.apache.commons.math.random.Well1024aTest#testNextIntIAE started...]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. SUCCESS]
19:05:43.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. org.apache.commons.math.random.Well1024aTest#testNextIntNeg started...]
19:05:43.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. SUCCESS]
19:05:43.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. org.apache.commons.math.random.Well1024aTest#testNexBytes started...]
19:05:43.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. SUCCESS]
19:05:43.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. org.apache.commons.math.random.Well1024aTest#testNextInt2 started...]
19:05:43.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. SUCCESS]
19:05:43.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. org.apache.commons.math.random.Well1024aTest#testNextPascal started...]
19:05:43.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. SUCCESS]
19:05:43.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. org.apache.commons.math.random.Well1024aTest#testNextSample started...]
19:05:43.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. SUCCESS]
19:05:43.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues started...]
19:05:43.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. SUCCESS]
19:05:43.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints started...]
19:05:43.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. SUCCESS]
19:05:43.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. org.apache.commons.math.random.Well1024aTest#testNextGaussian started...]
19:05:43.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. SUCCESS]
19:05:43.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. org.apache.commons.math.random.Well1024aTest#testNextF started...]
19:05:43.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. SUCCESS]
19:05:43.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. org.apache.commons.math.random.Well1024aTest#testNextT started...]
19:05:43.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. SUCCESS]
19:05:43.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. org.apache.commons.math.random.Well1024aTest#testNextChiSquare started...]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. SUCCESS]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. org.apache.commons.math.random.Well1024aTest#testNextSecureLong started...]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. SUCCESS]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. org.apache.commons.math.random.Well1024aTest#testNextSecureHex started...]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. SUCCESS]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. org.apache.commons.math.random.Well1024aTest#testNextSecureInt started...]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. SUCCESS]
19:05:43.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency started...]
19:05:45.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. SUCCESS]
19:05:45.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. org.apache.commons.math.random.Well1024aTest#testNextHypergeometric started...]
19:05:45.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. SUCCESS]
19:05:45.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues started...]
19:05:45.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. SUCCESS]
19:05:45.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. org.apache.commons.math.random.Well1024aTest#testNextExponential started...]
19:05:45.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. SUCCESS]
19:05:45.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. org.apache.commons.math.random.Well1024aTest#testNextPoisson started...]
19:05:45.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. SUCCESS]
19:05:45.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. org.apache.commons.math.random.Well1024aTest#testNextUniform started...]
19:05:45.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. SUCCESS]
19:05:45.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. org.apache.commons.math.random.Well1024aTest#testNextPermutation started...]
19:05:45.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. SUCCESS]
19:05:45.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. org.apache.commons.math.random.Well1024aTest#testNextBinomial started...]
19:05:45.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. SUCCESS]
19:05:45.056 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. org.apache.commons.math.random.Well1024aTest#testConfig started...]
19:05:45.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. SUCCESS]
19:05:45.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate started...]
19:05:45.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. SUCCESS]
19:05:45.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. org.apache.commons.math.random.Well1024aTest#testNextHex started...]
19:05:45.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. SUCCESS]
19:05:45.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. org.apache.commons.math.random.Well1024aTest#testNextInt started...]
19:05:45.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. SUCCESS]
19:05:45.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. org.apache.commons.math.random.Well1024aTest#testNextCauchy started...]
19:05:45.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. SUCCESS]
19:05:45.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. org.apache.commons.math.random.Well1024aTest#testNextGamma started...]
19:05:45.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. SUCCESS]
19:05:45.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. org.apache.commons.math.random.Well1024aTest#testNextWeibull started...]
19:05:45.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. SUCCESS]
19:05:45.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. org.apache.commons.math.random.Well1024aTest#testNextBeta started...]
19:05:45.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. SUCCESS]
19:05:45.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. org.apache.commons.math.random.Well1024aTest#testNextLong started...]
19:05:45.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. SUCCESS]
19:05:45.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. org.apache.commons.math.random.Well1024aTest#testNextZipf started...]
19:05:45.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. SUCCESS]
19:05:45.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. org.apache.commons.math.random.Well19937aTest#testReferenceCode started...]
19:05:45.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. SUCCESS]
19:05:45.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. org.apache.commons.math.random.Well19937aTest#testNextIntDirect started...]
19:05:45.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. SUCCESS]
19:05:45.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. org.apache.commons.math.random.Well19937aTest#testNextFloatDirect started...]
19:05:45.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. SUCCESS]
19:05:45.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect started...]
19:05:45.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. SUCCESS]
19:05:45.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. org.apache.commons.math.random.Well19937aTest#testNextLongDirect started...]
19:05:45.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. SUCCESS]
19:05:45.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. org.apache.commons.math.random.Well19937aTest#testNexBoolean2 started...]
19:05:45.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. SUCCESS]
19:05:45.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. org.apache.commons.math.random.Well19937aTest#testFloatDirect started...]
19:05:45.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. SUCCESS]
19:05:45.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. org.apache.commons.math.random.Well19937aTest#testDoubleDirect started...]
19:05:45.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. SUCCESS]
19:05:45.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. org.apache.commons.math.random.Well19937aTest#testNextLong2 started...]
19:05:45.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. SUCCESS]
19:05:45.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. org.apache.commons.math.random.Well19937aTest#testNextIntIAE started...]
19:05:45.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. SUCCESS]
19:05:45.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. org.apache.commons.math.random.Well19937aTest#testNextIntNeg started...]
19:05:45.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. SUCCESS]
19:05:45.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. org.apache.commons.math.random.Well19937aTest#testNexBytes started...]
19:05:45.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. SUCCESS]
19:05:45.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. org.apache.commons.math.random.Well19937aTest#testNextInt2 started...]
19:05:45.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. SUCCESS]
19:05:45.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. org.apache.commons.math.random.Well19937aTest#testNextPascal started...]
19:05:45.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. SUCCESS]
19:05:45.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. org.apache.commons.math.random.Well19937aTest#testNextSample started...]
19:05:45.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. SUCCESS]
19:05:45.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues started...]
19:05:45.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. SUCCESS]
19:05:45.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints started...]
19:05:45.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. SUCCESS]
19:05:45.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. org.apache.commons.math.random.Well19937aTest#testNextGaussian started...]
19:05:45.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. SUCCESS]
19:05:45.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. org.apache.commons.math.random.Well19937aTest#testNextF started...]
19:05:45.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. SUCCESS]
19:05:45.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. org.apache.commons.math.random.Well19937aTest#testNextT started...]
19:05:45.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. SUCCESS]
19:05:45.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. org.apache.commons.math.random.Well19937aTest#testNextChiSquare started...]
19:05:45.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. SUCCESS]
19:05:45.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. org.apache.commons.math.random.Well19937aTest#testNextSecureLong started...]
19:05:45.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. SUCCESS]
19:05:45.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. org.apache.commons.math.random.Well19937aTest#testNextSecureHex started...]
19:05:45.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. SUCCESS]
19:05:45.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. org.apache.commons.math.random.Well19937aTest#testNextSecureInt started...]
19:05:45.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. SUCCESS]
19:05:45.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency started...]
19:05:47.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. SUCCESS]
19:05:47.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. org.apache.commons.math.random.Well19937aTest#testNextHypergeometric started...]
19:05:47.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. SUCCESS]
19:05:47.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues started...]
19:05:47.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. SUCCESS]
19:05:47.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. org.apache.commons.math.random.Well19937aTest#testNextExponential started...]
19:05:47.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. SUCCESS]
19:05:47.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. org.apache.commons.math.random.Well19937aTest#testNextPoisson started...]
19:05:47.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. SUCCESS]
19:05:47.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. org.apache.commons.math.random.Well19937aTest#testNextUniform started...]
19:05:47.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. SUCCESS]
19:05:47.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. org.apache.commons.math.random.Well19937aTest#testNextPermutation started...]
19:05:47.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. SUCCESS]
19:05:47.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. org.apache.commons.math.random.Well19937aTest#testNextBinomial started...]
19:05:47.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. SUCCESS]
19:05:47.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. org.apache.commons.math.random.Well19937aTest#testConfig started...]
19:05:47.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. SUCCESS]
19:05:47.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate started...]
19:05:47.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. SUCCESS]
19:05:47.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. org.apache.commons.math.random.Well19937aTest#testNextHex started...]
19:05:47.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. SUCCESS]
19:05:47.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. org.apache.commons.math.random.Well19937aTest#testNextInt started...]
19:05:47.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. SUCCESS]
19:05:47.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. org.apache.commons.math.random.Well19937aTest#testNextCauchy started...]
19:05:47.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. SUCCESS]
19:05:47.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. org.apache.commons.math.random.Well19937aTest#testNextGamma started...]
19:05:47.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. SUCCESS]
19:05:47.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. org.apache.commons.math.random.Well19937aTest#testNextWeibull started...]
19:05:47.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. SUCCESS]
19:05:47.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. org.apache.commons.math.random.Well19937aTest#testNextBeta started...]
19:05:47.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. SUCCESS]
19:05:47.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. org.apache.commons.math.random.Well19937aTest#testNextLong started...]
19:05:47.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. SUCCESS]
19:05:47.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. org.apache.commons.math.random.Well19937aTest#testNextZipf started...]
19:05:47.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. SUCCESS]
19:05:47.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. org.apache.commons.math.random.Well19937cTest#testReferenceCode started...]
19:05:47.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. SUCCESS]
19:05:47.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. org.apache.commons.math.random.Well19937cTest#testNextIntDirect started...]
19:05:48.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. SUCCESS]
19:05:48.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. org.apache.commons.math.random.Well19937cTest#testNextFloatDirect started...]
19:05:48.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. SUCCESS]
19:05:48.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect started...]
19:05:48.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. SUCCESS]
19:05:48.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. org.apache.commons.math.random.Well19937cTest#testNextLongDirect started...]
19:05:48.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. SUCCESS]
19:05:48.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. org.apache.commons.math.random.Well19937cTest#testNexBoolean2 started...]
19:05:48.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. SUCCESS]
19:05:48.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. org.apache.commons.math.random.Well19937cTest#testFloatDirect started...]
19:05:48.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. SUCCESS]
19:05:48.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. org.apache.commons.math.random.Well19937cTest#testDoubleDirect started...]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. SUCCESS]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. org.apache.commons.math.random.Well19937cTest#testNextLong2 started...]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. SUCCESS]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. org.apache.commons.math.random.Well19937cTest#testNextIntIAE started...]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. SUCCESS]
19:05:48.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. org.apache.commons.math.random.Well19937cTest#testNextIntNeg started...]
19:05:48.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. SUCCESS]
19:05:48.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. org.apache.commons.math.random.Well19937cTest#testNexBytes started...]
19:05:48.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. SUCCESS]
19:05:48.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. org.apache.commons.math.random.Well19937cTest#testNextInt2 started...]
19:05:48.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. SUCCESS]
19:05:48.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. org.apache.commons.math.random.Well19937cTest#testNextPascal started...]
19:05:48.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. SUCCESS]
19:05:48.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. org.apache.commons.math.random.Well19937cTest#testNextSample started...]
19:05:48.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. SUCCESS]
19:05:48.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues started...]
19:05:48.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. SUCCESS]
19:05:48.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints started...]
19:05:48.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. SUCCESS]
19:05:48.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. org.apache.commons.math.random.Well19937cTest#testNextGaussian started...]
19:05:48.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. SUCCESS]
19:05:48.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. org.apache.commons.math.random.Well19937cTest#testNextF started...]
19:05:48.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. SUCCESS]
19:05:48.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. org.apache.commons.math.random.Well19937cTest#testNextT started...]
19:05:48.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. SUCCESS]
19:05:48.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. org.apache.commons.math.random.Well19937cTest#testNextChiSquare started...]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. SUCCESS]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. org.apache.commons.math.random.Well19937cTest#testNextSecureLong started...]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. SUCCESS]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. org.apache.commons.math.random.Well19937cTest#testNextSecureHex started...]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. SUCCESS]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. org.apache.commons.math.random.Well19937cTest#testNextSecureInt started...]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. SUCCESS]
19:05:48.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency started...]
19:05:49.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. SUCCESS]
19:05:49.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. org.apache.commons.math.random.Well19937cTest#testNextHypergeometric started...]
19:05:49.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. SUCCESS]
19:05:49.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues started...]
19:05:49.715 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. SUCCESS]
19:05:49.716 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. org.apache.commons.math.random.Well19937cTest#testNextExponential started...]
19:05:49.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. SUCCESS]
19:05:49.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. org.apache.commons.math.random.Well19937cTest#testNextPoisson started...]
19:05:49.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. SUCCESS]
19:05:49.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. org.apache.commons.math.random.Well19937cTest#testNextUniform started...]
19:05:49.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. SUCCESS]
19:05:49.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. org.apache.commons.math.random.Well19937cTest#testNextPermutation started...]
19:05:49.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. SUCCESS]
19:05:49.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. org.apache.commons.math.random.Well19937cTest#testNextBinomial started...]
19:05:49.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. SUCCESS]
19:05:49.732 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. org.apache.commons.math.random.Well19937cTest#testConfig started...]
19:05:49.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. SUCCESS]
19:05:49.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate started...]
19:05:49.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. SUCCESS]
19:05:49.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. org.apache.commons.math.random.Well19937cTest#testNextHex started...]
19:05:49.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. SUCCESS]
19:05:49.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. org.apache.commons.math.random.Well19937cTest#testNextInt started...]
19:05:49.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. SUCCESS]
19:05:49.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. org.apache.commons.math.random.Well19937cTest#testNextCauchy started...]
19:05:49.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. SUCCESS]
19:05:49.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. org.apache.commons.math.random.Well19937cTest#testNextGamma started...]
19:05:49.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. SUCCESS]
19:05:49.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. org.apache.commons.math.random.Well19937cTest#testNextWeibull started...]
19:05:49.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. SUCCESS]
19:05:49.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. org.apache.commons.math.random.Well19937cTest#testNextBeta started...]
19:05:49.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. SUCCESS]
19:05:49.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. org.apache.commons.math.random.Well19937cTest#testNextLong started...]
19:05:49.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. SUCCESS]
19:05:49.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. org.apache.commons.math.random.Well19937cTest#testNextZipf started...]
19:05:49.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. SUCCESS]
19:05:49.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. org.apache.commons.math.random.Well44497aTest#testReferenceCode started...]
19:05:49.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. SUCCESS]
19:05:49.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. org.apache.commons.math.random.Well44497aTest#testNextIntDirect started...]
19:05:50.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. SUCCESS]
19:05:50.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. org.apache.commons.math.random.Well44497aTest#testNextFloatDirect started...]
19:05:50.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. SUCCESS]
19:05:50.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect started...]
19:05:50.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. SUCCESS]
19:05:50.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. org.apache.commons.math.random.Well44497aTest#testNextLongDirect started...]
19:05:50.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. SUCCESS]
19:05:50.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. org.apache.commons.math.random.Well44497aTest#testNexBoolean2 started...]
19:05:50.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. SUCCESS]
19:05:50.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. org.apache.commons.math.random.Well44497aTest#testFloatDirect started...]
19:05:50.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. SUCCESS]
19:05:50.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. org.apache.commons.math.random.Well44497aTest#testDoubleDirect started...]
19:05:50.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. SUCCESS]
19:05:50.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. org.apache.commons.math.random.Well44497aTest#testNextLong2 started...]
19:05:50.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. SUCCESS]
19:05:50.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. org.apache.commons.math.random.Well44497aTest#testNextIntIAE started...]
19:05:50.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. SUCCESS]
19:05:50.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. org.apache.commons.math.random.Well44497aTest#testNextIntNeg started...]
19:05:50.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. SUCCESS]
19:05:50.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. org.apache.commons.math.random.Well44497aTest#testNexBytes started...]
19:05:50.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. SUCCESS]
19:05:50.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. org.apache.commons.math.random.Well44497aTest#testNextInt2 started...]
19:05:50.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. SUCCESS]
19:05:50.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. org.apache.commons.math.random.Well44497aTest#testNextPascal started...]
19:05:50.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. SUCCESS]
19:05:50.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. org.apache.commons.math.random.Well44497aTest#testNextSample started...]
19:05:50.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. SUCCESS]
19:05:50.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues started...]
19:05:50.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. SUCCESS]
19:05:50.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints started...]
19:05:50.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. SUCCESS]
19:05:50.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. org.apache.commons.math.random.Well44497aTest#testNextGaussian started...]
19:05:50.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. SUCCESS]
19:05:50.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. org.apache.commons.math.random.Well44497aTest#testNextF started...]
19:05:50.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. SUCCESS]
19:05:50.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. org.apache.commons.math.random.Well44497aTest#testNextT started...]
19:05:50.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. SUCCESS]
19:05:50.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. org.apache.commons.math.random.Well44497aTest#testNextChiSquare started...]
19:05:50.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. SUCCESS]
19:05:50.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. org.apache.commons.math.random.Well44497aTest#testNextSecureLong started...]
19:05:50.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. SUCCESS]
19:05:50.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. org.apache.commons.math.random.Well44497aTest#testNextSecureHex started...]
19:05:50.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. SUCCESS]
19:05:50.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. org.apache.commons.math.random.Well44497aTest#testNextSecureInt started...]
19:05:50.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. SUCCESS]
19:05:50.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency started...]
19:05:51.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. SUCCESS]
19:05:51.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. org.apache.commons.math.random.Well44497aTest#testNextHypergeometric started...]
19:05:51.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. SUCCESS]
19:05:51.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues started...]
19:05:51.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. SUCCESS]
19:05:51.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. org.apache.commons.math.random.Well44497aTest#testNextExponential started...]
19:05:51.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. SUCCESS]
19:05:51.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. org.apache.commons.math.random.Well44497aTest#testNextPoisson started...]
19:05:51.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. SUCCESS]
19:05:51.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. org.apache.commons.math.random.Well44497aTest#testNextUniform started...]
19:05:51.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. SUCCESS]
19:05:51.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. org.apache.commons.math.random.Well44497aTest#testNextPermutation started...]
19:05:51.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. SUCCESS]
19:05:51.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. org.apache.commons.math.random.Well44497aTest#testNextBinomial started...]
19:05:51.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. SUCCESS]
19:05:51.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. org.apache.commons.math.random.Well44497aTest#testConfig started...]
19:05:51.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. SUCCESS]
19:05:51.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate started...]
19:05:51.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. SUCCESS]
19:05:51.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. org.apache.commons.math.random.Well44497aTest#testNextHex started...]
19:05:51.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. SUCCESS]
19:05:51.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. org.apache.commons.math.random.Well44497aTest#testNextInt started...]
19:05:51.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. SUCCESS]
19:05:51.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. org.apache.commons.math.random.Well44497aTest#testNextCauchy started...]
19:05:51.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. SUCCESS]
19:05:51.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. org.apache.commons.math.random.Well44497aTest#testNextGamma started...]
19:05:51.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. SUCCESS]
19:05:51.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. org.apache.commons.math.random.Well44497aTest#testNextWeibull started...]
19:05:51.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. SUCCESS]
19:05:51.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. org.apache.commons.math.random.Well44497aTest#testNextBeta started...]
19:05:51.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. SUCCESS]
19:05:51.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. org.apache.commons.math.random.Well44497aTest#testNextLong started...]
19:05:51.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. SUCCESS]
19:05:51.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. org.apache.commons.math.random.Well44497aTest#testNextZipf started...]
19:05:51.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. SUCCESS]
19:05:51.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. org.apache.commons.math.random.Well44497bTest#testReferenceCode started...]
19:05:51.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. SUCCESS]
19:05:51.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. org.apache.commons.math.random.Well44497bTest#testNextIntDirect started...]
19:05:52.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. SUCCESS]
19:05:52.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. org.apache.commons.math.random.Well44497bTest#testNextFloatDirect started...]
19:05:52.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. SUCCESS]
19:05:52.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect started...]
19:05:52.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. SUCCESS]
19:05:52.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. org.apache.commons.math.random.Well44497bTest#testNextLongDirect started...]
19:05:52.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. SUCCESS]
19:05:52.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. org.apache.commons.math.random.Well44497bTest#testNexBoolean2 started...]
19:05:52.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. SUCCESS]
19:05:52.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. org.apache.commons.math.random.Well44497bTest#testFloatDirect started...]
19:05:52.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. SUCCESS]
19:05:52.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. org.apache.commons.math.random.Well44497bTest#testDoubleDirect started...]
19:05:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. SUCCESS]
19:05:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. org.apache.commons.math.random.Well44497bTest#testNextLong2 started...]
19:05:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. SUCCESS]
19:05:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. org.apache.commons.math.random.Well44497bTest#testNextIntIAE started...]
19:05:52.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. SUCCESS]
19:05:52.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. org.apache.commons.math.random.Well44497bTest#testNextIntNeg started...]
19:05:52.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. SUCCESS]
19:05:52.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. org.apache.commons.math.random.Well44497bTest#testNexBytes started...]
19:05:52.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. SUCCESS]
19:05:52.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. org.apache.commons.math.random.Well44497bTest#testNextInt2 started...]
19:05:52.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. SUCCESS]
19:05:52.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. org.apache.commons.math.random.Well44497bTest#testNextPascal started...]
19:05:52.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. SUCCESS]
19:05:52.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. org.apache.commons.math.random.Well44497bTest#testNextSample started...]
19:05:52.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. SUCCESS]
19:05:52.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues started...]
19:05:52.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. SUCCESS]
19:05:52.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints started...]
19:05:52.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. SUCCESS]
19:05:52.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. org.apache.commons.math.random.Well44497bTest#testNextGaussian started...]
19:05:52.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. SUCCESS]
19:05:52.712 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. org.apache.commons.math.random.Well44497bTest#testNextF started...]
19:05:52.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. SUCCESS]
19:05:52.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. org.apache.commons.math.random.Well44497bTest#testNextT started...]
19:05:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. SUCCESS]
19:05:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. org.apache.commons.math.random.Well44497bTest#testNextChiSquare started...]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. SUCCESS]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. org.apache.commons.math.random.Well44497bTest#testNextSecureLong started...]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. SUCCESS]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. org.apache.commons.math.random.Well44497bTest#testNextSecureHex started...]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. SUCCESS]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. org.apache.commons.math.random.Well44497bTest#testNextSecureInt started...]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. SUCCESS]
19:05:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency started...]
19:05:54.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. SUCCESS]
19:05:54.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. org.apache.commons.math.random.Well44497bTest#testNextHypergeometric started...]
19:05:54.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. SUCCESS]
19:05:54.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues started...]
19:05:54.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. SUCCESS]
19:05:54.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. org.apache.commons.math.random.Well44497bTest#testNextExponential started...]
19:05:54.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. SUCCESS]
19:05:54.336 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. org.apache.commons.math.random.Well44497bTest#testNextPoisson started...]
19:05:54.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. SUCCESS]
19:05:54.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. org.apache.commons.math.random.Well44497bTest#testNextUniform started...]
19:05:54.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. SUCCESS]
19:05:54.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. org.apache.commons.math.random.Well44497bTest#testNextPermutation started...]
19:05:54.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. SUCCESS]
19:05:54.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. org.apache.commons.math.random.Well44497bTest#testNextBinomial started...]
19:05:54.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. SUCCESS]
19:05:54.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. org.apache.commons.math.random.Well44497bTest#testConfig started...]
19:05:54.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. SUCCESS]
19:05:54.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate started...]
19:05:54.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. SUCCESS]
19:05:54.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. org.apache.commons.math.random.Well44497bTest#testNextHex started...]
19:05:54.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. SUCCESS]
19:05:54.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. org.apache.commons.math.random.Well44497bTest#testNextInt started...]
19:05:54.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. SUCCESS]
19:05:54.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. org.apache.commons.math.random.Well44497bTest#testNextCauchy started...]
19:05:54.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. SUCCESS]
19:05:54.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. org.apache.commons.math.random.Well44497bTest#testNextGamma started...]
19:05:54.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. SUCCESS]
19:05:54.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. org.apache.commons.math.random.Well44497bTest#testNextWeibull started...]
19:05:54.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. SUCCESS]
19:05:54.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. org.apache.commons.math.random.Well44497bTest#testNextBeta started...]
19:05:54.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. SUCCESS]
19:05:54.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. org.apache.commons.math.random.Well44497bTest#testNextLong started...]
19:05:54.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. SUCCESS]
19:05:54.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. org.apache.commons.math.random.Well44497bTest#testNextZipf started...]
19:05:54.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. SUCCESS]
19:05:54.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. org.apache.commons.math.random.Well512aTest#testReferenceCode started...]
19:05:54.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. SUCCESS]
19:05:54.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. org.apache.commons.math.random.Well512aTest#testNextIntDirect started...]
19:05:54.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. SUCCESS]
19:05:54.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. org.apache.commons.math.random.Well512aTest#testNextFloatDirect started...]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. SUCCESS]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. org.apache.commons.math.random.Well512aTest#testNextBooleanDirect started...]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. SUCCESS]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. org.apache.commons.math.random.Well512aTest#testNextLongDirect started...]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. SUCCESS]
19:05:54.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. org.apache.commons.math.random.Well512aTest#testNexBoolean2 started...]
19:05:54.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. SUCCESS]
19:05:54.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. org.apache.commons.math.random.Well512aTest#testFloatDirect started...]
19:05:54.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. SUCCESS]
19:05:54.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. org.apache.commons.math.random.Well512aTest#testDoubleDirect started...]
19:05:54.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. SUCCESS]
19:05:54.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. org.apache.commons.math.random.Well512aTest#testNextLong2 started...]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. SUCCESS]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. org.apache.commons.math.random.Well512aTest#testNextIntIAE started...]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. SUCCESS]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. org.apache.commons.math.random.Well512aTest#testNextIntNeg started...]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. SUCCESS]
19:05:54.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. org.apache.commons.math.random.Well512aTest#testNexBytes started...]
19:05:54.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. SUCCESS]
19:05:54.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. org.apache.commons.math.random.Well512aTest#testNextInt2 started...]
19:05:54.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. SUCCESS]
19:05:54.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. org.apache.commons.math.random.Well512aTest#testNextPascal started...]
19:05:55.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. SUCCESS]
19:05:55.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. org.apache.commons.math.random.Well512aTest#testNextSample started...]
19:05:55.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. SUCCESS]
19:05:55.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues started...]
19:05:55.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. SUCCESS]
19:05:55.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints started...]
19:05:55.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. SUCCESS]
19:05:55.006 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. org.apache.commons.math.random.Well512aTest#testNextGaussian started...]
19:05:55.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. SUCCESS]
19:05:55.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. org.apache.commons.math.random.Well512aTest#testNextF started...]
19:05:55.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. SUCCESS]
19:05:55.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. org.apache.commons.math.random.Well512aTest#testNextT started...]
19:05:55.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. SUCCESS]
19:05:55.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. org.apache.commons.math.random.Well512aTest#testNextChiSquare started...]
19:05:55.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. SUCCESS]
19:05:55.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. org.apache.commons.math.random.Well512aTest#testNextSecureLong started...]
19:05:55.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. SUCCESS]
19:05:55.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. org.apache.commons.math.random.Well512aTest#testNextSecureHex started...]
19:05:55.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. SUCCESS]
19:05:55.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. org.apache.commons.math.random.Well512aTest#testNextSecureInt started...]
19:05:55.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. SUCCESS]
19:05:55.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency started...]
19:05:56.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. SUCCESS]
19:05:56.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. org.apache.commons.math.random.Well512aTest#testNextHypergeometric started...]
19:05:56.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. SUCCESS]
19:05:56.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues started...]
19:05:56.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. SUCCESS]
19:05:56.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. org.apache.commons.math.random.Well512aTest#testNextExponential started...]
19:05:56.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. SUCCESS]
19:05:56.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. org.apache.commons.math.random.Well512aTest#testNextPoisson started...]
19:05:56.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. SUCCESS]
19:05:56.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. org.apache.commons.math.random.Well512aTest#testNextUniform started...]
19:05:56.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. SUCCESS]
19:05:56.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. org.apache.commons.math.random.Well512aTest#testNextPermutation started...]
19:05:56.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. SUCCESS]
19:05:56.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. org.apache.commons.math.random.Well512aTest#testNextBinomial started...]
19:05:56.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. SUCCESS]
19:05:56.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. org.apache.commons.math.random.Well512aTest#testConfig started...]
19:05:56.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. SUCCESS]
19:05:56.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. org.apache.commons.math.random.Well512aTest#testNextInversionDeviate started...]
19:05:56.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. SUCCESS]
19:05:56.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. org.apache.commons.math.random.Well512aTest#testNextHex started...]
19:05:56.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. SUCCESS]
19:05:56.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. org.apache.commons.math.random.Well512aTest#testNextInt started...]
19:05:56.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. SUCCESS]
19:05:56.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. org.apache.commons.math.random.Well512aTest#testNextCauchy started...]
19:05:56.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. SUCCESS]
19:05:56.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. org.apache.commons.math.random.Well512aTest#testNextGamma started...]
19:05:56.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. SUCCESS]
19:05:56.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. org.apache.commons.math.random.Well512aTest#testNextWeibull started...]
19:05:56.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. SUCCESS]
19:05:56.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. org.apache.commons.math.random.Well512aTest#testNextBeta started...]
19:05:56.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. SUCCESS]
19:05:56.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. org.apache.commons.math.random.Well512aTest#testNextLong started...]
19:05:56.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. SUCCESS]
19:05:56.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. org.apache.commons.math.random.Well512aTest#testNextZipf started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. SUCCESS]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. SUCCESS]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. SUCCESS]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. SUCCESS]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. SUCCESS]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive started...]
19:05:56.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. SUCCESS]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive started...]
19:05:56.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. SUCCESS]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. org.apache.commons.math.special.BetaTest#testLogBetaNanPositive started...]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. SUCCESS]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive started...]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. SUCCESS]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero started...]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. SUCCESS]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive started...]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. SUCCESS]
19:05:56.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. org.apache.commons.math.special.ErfTest#testLargeValues started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. org.apache.commons.math.special.ErfTest#testErf1960 started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. org.apache.commons.math.special.ErfTest#testErf2576 started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. org.apache.commons.math.special.ErfTest#testErf2807 started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. org.apache.commons.math.special.ErfTest#testErf3291 started...]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. SUCCESS]
19:05:56.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. org.apache.commons.math.special.ErfTest#testErfcGnu started...]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. SUCCESS]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. org.apache.commons.math.special.ErfTest#testErfcMaple started...]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. SUCCESS]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. org.apache.commons.math.special.ErfTest#testErf0 started...]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. SUCCESS]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. org.apache.commons.math.special.ErfTest#testTwoArgumentErf started...]
19:05:56.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. SUCCESS]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. org.apache.commons.math.special.ErfTest#testErfGnu started...]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. SUCCESS]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. org.apache.commons.math.special.GammaTest#testTrigamma started...]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. SUCCESS]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. org.apache.commons.math.special.GammaTest#testLogGammaPositive started...]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. SUCCESS]
19:05:56.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. org.apache.commons.math.special.GammaTest#testLogGammaNegative started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. org.apache.commons.math.special.GammaTest#testLogGammaNan started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. org.apache.commons.math.special.GammaTest#testDigammaLargeArgs started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. SUCCESS]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive started...]
19:05:56.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. SUCCESS]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. org.apache.commons.math.special.GammaTest#testLogGammaZero started...]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. SUCCESS]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. org.apache.commons.math.special.GammaTest#testDigammaSmallArgs started...]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. SUCCESS]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive started...]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. SUCCESS]
19:05:56.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan started...]
19:05:56.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. SUCCESS]
19:05:56.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero started...]
19:05:56.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. SUCCESS]
19:05:56.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics started...]
19:05:56.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. SUCCESS]
19:05:56.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics started...]
19:05:56.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. SUCCESS]
19:05:56.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. org.apache.commons.math.stat.FrequencyTest#testEmptyTable started...]
19:05:56.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. SUCCESS]
19:05:56.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. org.apache.commons.math.stat.FrequencyTest#testAdd started...]
19:05:56.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. SUCCESS]
19:05:56.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. org.apache.commons.math.stat.FrequencyTest#testPcts started...]
19:05:56.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. SUCCESS]
19:05:56.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. org.apache.commons.math.stat.FrequencyTest#testToString started...]
19:05:56.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. SUCCESS]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount started...]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. SUCCESS]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. org.apache.commons.math.stat.FrequencyTest#testIntegerValues started...]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. SUCCESS]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. org.apache.commons.math.stat.FrequencyTest#testCounts started...]
19:05:56.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. SUCCESS]
19:05:56.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. org.apache.commons.math.stat.FrequencyTest#testSerial started...]
19:05:56.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. SUCCESS]
19:05:56.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. org.apache.commons.math.stat.StatUtilsTest#testNormalize1 started...]
19:05:56.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. SUCCESS]
19:05:56.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. org.apache.commons.math.stat.StatUtilsTest#testNormalize2 started...]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. SUCCESS]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats started...]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. SUCCESS]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. org.apache.commons.math.stat.StatUtilsTest#testPercentile started...]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. SUCCESS]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions started...]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. SUCCESS]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. org.apache.commons.math.stat.StatUtilsTest#testMax started...]
19:05:56.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. org.apache.commons.math.stat.StatUtilsTest#testMin started...]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. org.apache.commons.math.stat.StatUtilsTest#testStats started...]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. org.apache.commons.math.stat.StatUtilsTest#testSumSq started...]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. org.apache.commons.math.stat.StatUtilsTest#testMean started...]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions started...]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. SUCCESS]
19:05:56.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. org.apache.commons.math.stat.StatUtilsTest#testProduct started...]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. SUCCESS]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. org.apache.commons.math.stat.StatUtilsTest#testGeometricMean started...]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. SUCCESS]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. org.apache.commons.math.stat.StatUtilsTest#testVariance started...]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. SUCCESS]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. org.apache.commons.math.stat.StatUtilsTest#testSumLog started...]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. SUCCESS]
19:05:56.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid started...]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. SUCCESS]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance started...]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. SUCCESS]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference started...]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. SUCCESS]
19:05:56.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial started...]
19:05:56.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. SUCCESS]
19:05:56.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate started...]
19:05:56.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. SUCCESS]
19:05:56.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace started...]
19:05:56.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. SUCCESS]
19:05:56.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters started...]
19:05:56.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. SUCCESS]
19:05:56.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances started...]
19:05:56.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. SUCCESS]
19:05:56.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2 started...]
19:05:56.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. SUCCESS]
19:05:56.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData started...]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. SUCCESS]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility started...]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. SUCCESS]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. org.apache.commons.math.stat.correlation.CovarianceTest#testConstant started...]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. SUCCESS]
19:05:56.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency started...]
19:05:56.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. SUCCESS]
19:05:56.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. org.apache.commons.math.stat.correlation.CovarianceTest#testLongly started...]
19:05:56.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. SUCCESS]
19:05:56.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData started...]
19:05:56.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. SUCCESS]
19:05:56.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency started...]
19:05:56.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. SUCCESS]
19:05:56.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility started...]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. SUCCESS]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero started...]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. SUCCESS]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant started...]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. SUCCESS]
19:05:56.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency started...]
19:05:56.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. SUCCESS]
19:05:56.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency started...]
19:05:56.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. SUCCESS]
19:05:56.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly started...]
19:05:56.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. SUCCESS]
19:05:56.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData started...]
19:05:56.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. SUCCESS]
19:05:56.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency started...]
19:05:56.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. SUCCESS]
19:05:56.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss started...]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. SUCCESS]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant started...]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. SUCCESS]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency started...]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. SUCCESS]
19:05:56.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency started...]
19:05:56.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. SUCCESS]
19:05:56.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly started...]
19:05:56.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. SUCCESS]
19:05:56.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility started...]
19:05:56.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. SUCCESS]
19:05:56.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero started...]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. SUCCESS]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov started...]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. SUCCESS]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar started...]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. SUCCESS]
19:05:56.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry started...]
19:05:56.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. SUCCESS]
19:05:56.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry started...]
19:05:56.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. SUCCESS]
19:05:56.763 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow started...]
19:05:56.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. SUCCESS]
19:05:56.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow started...]
19:05:56.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. SUCCESS]
19:05:56.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. org.apache.commons.math.stat.data.LewTest#testCertifiedValues started...]
19:05:56.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. SUCCESS]
19:05:56.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues started...]
19:05:56.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. SUCCESS]
19:05:56.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive started...]
19:05:56.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. SUCCESS]
19:05:56.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative started...]
19:05:56.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. SUCCESS]
19:05:56.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation started...]
19:05:56.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. SUCCESS]
19:05:56.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues started...]
19:05:56.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. SUCCESS]
19:05:56.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency started...]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. SUCCESS]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate started...]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. SUCCESS]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate started...]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. SUCCESS]
19:05:56.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter started...]
19:05:56.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. SUCCESS]
19:05:56.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720 started...]
19:05:56.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. SUCCESS]
19:05:56.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy started...]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. SUCCESS]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString started...]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. SUCCESS]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics started...]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. SUCCESS]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection started...]
19:05:56.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. SUCCESS]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval started...]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. SUCCESS]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize started...]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. SUCCESS]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues started...]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. SUCCESS]
19:05:56.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction started...]
19:05:56.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. SUCCESS]
19:05:56.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean started...]
19:05:56.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. SUCCESS]
19:05:56.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization started...]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. SUCCESS]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats started...]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. SUCCESS]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions started...]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. SUCCESS]
19:05:56.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis started...]
19:05:56.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. SUCCESS]
19:05:56.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean started...]
19:05:56.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. SUCCESS]
19:05:56.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats started...]
19:05:56.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. SUCCESS]
19:05:56.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions started...]
19:05:56.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. SUCCESS]
19:05:56.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis started...]
19:05:56.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. SUCCESS]
19:05:56.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization started...]
19:05:56.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. SUCCESS]
19:05:56.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats started...]
19:05:56.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. SUCCESS]
19:05:56.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString started...]
19:05:56.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. SUCCESS]
19:05:56.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts started...]
19:05:56.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. SUCCESS]
19:05:56.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
19:05:56.791 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. SUCCESS]
19:05:56.792 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics started...]
19:05:56.792 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. SUCCESS]
19:05:56.792 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension started...]
19:05:56.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. SUCCESS]
19:05:56.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection started...]
19:05:56.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. SUCCESS]
19:05:56.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState started...]
19:05:56.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. SUCCESS]
19:05:56.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
19:05:56.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. SUCCESS]
19:05:56.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization started...]
19:05:56.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. SUCCESS]
19:05:56.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString started...]
19:05:56.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. SUCCESS]
19:05:56.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode started...]
19:05:56.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. SUCCESS]
19:05:56.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean started...]
19:05:56.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. SUCCESS]
19:05:56.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary started...]
19:05:56.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. SUCCESS]
19:05:56.797 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization started...]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. SUCCESS]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats started...]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. SUCCESS]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy started...]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. SUCCESS]
19:05:56.801 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts started...]
19:05:56.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. SUCCESS]
19:05:56.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions started...]
19:05:56.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. SUCCESS]
19:05:56.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection started...]
19:05:56.802 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. SUCCESS]
19:05:56.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState started...]
19:05:56.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. SUCCESS]
19:05:56.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode started...]
19:05:56.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. SUCCESS]
19:05:56.803 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter started...]
19:05:56.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. SUCCESS]
19:05:56.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720 started...]
19:05:56.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. SUCCESS]
19:05:56.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy started...]
19:05:56.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. SUCCESS]
19:05:56.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString started...]
19:05:56.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. SUCCESS]
19:05:56.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics started...]
19:05:56.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. SUCCESS]
19:05:56.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection started...]
19:05:56.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. SUCCESS]
19:05:56.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval started...]
19:05:56.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. SUCCESS]
19:05:56.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize started...]
19:05:56.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. SUCCESS]
19:05:56.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues started...]
19:05:56.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. SUCCESS]
19:05:56.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization started...]
19:05:56.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. SUCCESS]
19:05:56.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats started...]
19:05:56.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. SUCCESS]
19:05:56.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString started...]
19:05:56.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. SUCCESS]
19:05:56.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts started...]
19:05:56.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. SUCCESS]
19:05:56.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
19:05:56.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. SUCCESS]
19:05:56.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics started...]
19:05:56.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. SUCCESS]
19:05:56.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension started...]
19:05:56.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. SUCCESS]
19:05:56.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection started...]
19:05:56.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. SUCCESS]
19:05:56.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState started...]
19:05:56.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. SUCCESS]
19:05:56.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
19:05:56.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. SUCCESS]
19:05:56.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean started...]
19:05:56.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. SUCCESS]
19:05:56.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary started...]
19:05:56.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. SUCCESS]
19:05:56.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization started...]
19:05:56.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. SUCCESS]
19:05:56.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats started...]
19:05:56.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. SUCCESS]
19:05:56.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy started...]
19:05:56.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. SUCCESS]
19:05:56.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts started...]
19:05:56.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. SUCCESS]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions started...]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. SUCCESS]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection started...]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. SUCCESS]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState started...]
19:05:56.824 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. SUCCESS]
19:05:56.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode started...]
19:05:56.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. SUCCESS]
19:05:56.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples started...]
19:05:56.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. SUCCESS]
19:05:56.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization started...]
19:05:56.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. SUCCESS]
19:05:56.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation started...]
19:05:56.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. SUCCESS]
19:05:56.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency started...]
19:05:56.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. SUCCESS]
19:05:56.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode started...]
19:05:56.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. SUCCESS]
19:05:56.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency started...]
19:05:56.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. SUCCESS]
19:05:56.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial started...]
19:05:56.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. SUCCESS]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy started...]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. SUCCESS]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation started...]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. SUCCESS]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency started...]
19:05:56.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. SUCCESS]
19:05:56.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples started...]
19:05:56.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. SUCCESS]
19:05:56.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization started...]
19:05:56.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. SUCCESS]
19:05:56.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation started...]
19:05:56.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. SUCCESS]
19:05:56.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency started...]
19:05:56.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. SUCCESS]
19:05:56.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode started...]
19:05:56.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. SUCCESS]
19:05:56.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency started...]
19:05:56.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. SUCCESS]
19:05:56.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial started...]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. SUCCESS]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy started...]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. SUCCESS]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation started...]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. SUCCESS]
19:05:56.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency started...]
19:05:56.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. SUCCESS]
19:05:56.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues started...]
19:05:56.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. SUCCESS]
19:05:56.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples started...]
19:05:56.835 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. SUCCESS]
19:05:56.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization started...]
19:05:56.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. SUCCESS]
19:05:56.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation started...]
19:05:56.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. SUCCESS]
19:05:56.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency started...]
19:05:56.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. SUCCESS]
19:05:56.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode started...]
19:05:56.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. SUCCESS]
19:05:56.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency started...]
19:05:56.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. SUCCESS]
19:05:56.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial started...]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. SUCCESS]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy started...]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. SUCCESS]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation started...]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. SUCCESS]
19:05:56.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency started...]
19:05:56.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. SUCCESS]
19:05:56.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN started...]
19:05:56.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. SUCCESS]
19:05:56.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples started...]
19:05:56.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. SUCCESS]
19:05:56.841 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization started...]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. SUCCESS]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation started...]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. SUCCESS]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency started...]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. SUCCESS]
19:05:56.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode started...]
19:05:56.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. SUCCESS]
19:05:56.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2421. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency started...]
19:05:56.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2421. SUCCESS]
19:05:56.844 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2422. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial started...]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2422. SUCCESS]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2423. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy started...]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2423. SUCCESS]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2424. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation started...]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2424. SUCCESS]
19:05:56.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2425. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency started...]
19:05:56.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2425. SUCCESS]
19:05:56.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2426. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples started...]
19:05:56.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2426. SUCCESS]
19:05:56.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2427. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean started...]
19:05:56.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2427. SUCCESS]
19:05:56.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2428. org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples started...]
19:05:56.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2428. SUCCESS]
19:05:56.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2429. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization started...]
19:05:56.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2429. SUCCESS]
19:05:56.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2430. org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation started...]
19:05:56.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2430. SUCCESS]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2431. org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency started...]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2431. SUCCESS]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2432. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode started...]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2432. SUCCESS]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2433. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency started...]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2433. SUCCESS]
19:05:56.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2434. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial started...]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2434. SUCCESS]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2435. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy started...]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2435. SUCCESS]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2436. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation started...]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2436. SUCCESS]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2437. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency started...]
19:05:56.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2437. SUCCESS]
19:05:56.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2438. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples started...]
19:05:56.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2438. SUCCESS]
19:05:56.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2439. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization started...]
19:05:56.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2439. SUCCESS]
19:05:56.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2440. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation started...]
19:05:56.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2440. SUCCESS]
19:05:56.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2441. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency started...]
19:05:56.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2441. SUCCESS]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2442. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode started...]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2442. SUCCESS]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2443. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency started...]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2443. SUCCESS]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2444. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial started...]
19:05:56.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2444. SUCCESS]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2445. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy started...]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2445. SUCCESS]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2446. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation started...]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2446. SUCCESS]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2447. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency started...]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2447. SUCCESS]
19:05:56.854 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2448. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData started...]
19:05:56.855 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2448. SUCCESS]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2449. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff started...]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2449. SUCCESS]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2450. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance started...]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2450. SUCCESS]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2451. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown started...]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2451. SUCCESS]
19:05:56.856 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2452. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs started...]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2452. SUCCESS]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2453. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp started...]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2453. SUCCESS]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2454. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation started...]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2454. SUCCESS]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2455. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff started...]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2455. SUCCESS]
19:05:56.857 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2456. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample started...]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2456. SUCCESS]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2457. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN started...]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2457. SUCCESS]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2458. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples started...]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2458. SUCCESS]
19:05:56.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2459. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization started...]
19:05:56.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2459. SUCCESS]
19:05:56.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2460. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation started...]
19:05:56.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2460. SUCCESS]
19:05:56.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2461. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency started...]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2461. SUCCESS]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2462. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode started...]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2462. SUCCESS]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2463. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency started...]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2463. SUCCESS]
19:05:56.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2464. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial started...]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2464. SUCCESS]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2465. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy started...]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2465. SUCCESS]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2466. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation started...]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2466. SUCCESS]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2467. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency started...]
19:05:56.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2467. SUCCESS]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2468. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN started...]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2468. SUCCESS]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2469. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation started...]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2469. SUCCESS]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2470. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples started...]
19:05:56.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2470. SUCCESS]
19:05:56.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2471. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization started...]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2471. SUCCESS]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2472. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation started...]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2472. SUCCESS]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2473. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency started...]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2473. SUCCESS]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2474. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode started...]
19:05:56.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2474. SUCCESS]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2475. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency started...]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2475. SUCCESS]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2476. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial started...]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2476. SUCCESS]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2477. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy started...]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2477. SUCCESS]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2478. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation started...]
19:05:56.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2478. SUCCESS]
19:05:56.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2479. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency started...]
19:05:56.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2479. SUCCESS]
19:05:56.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2480. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples started...]
19:05:56.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2480. SUCCESS]
19:05:56.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2481. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization started...]
19:05:56.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2481. SUCCESS]
19:05:56.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2482. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation started...]
19:05:56.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2482. SUCCESS]
19:05:56.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2483. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency started...]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2483. SUCCESS]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2484. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode started...]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2484. SUCCESS]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2485. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency started...]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2485. SUCCESS]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2486. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial started...]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2486. SUCCESS]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2487. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy started...]
19:05:56.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2487. SUCCESS]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2488. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation started...]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2488. SUCCESS]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2489. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency started...]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2489. SUCCESS]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2490. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN started...]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2490. SUCCESS]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2491. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance started...]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2491. SUCCESS]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2492. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation started...]
19:05:56.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2492. SUCCESS]
19:05:56.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2493. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples started...]
19:05:56.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2493. SUCCESS]
19:05:56.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2494. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization started...]
19:05:56.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2494. SUCCESS]
19:05:56.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2495. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation started...]
19:05:56.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2495. SUCCESS]
19:05:56.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2496. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency started...]
19:05:56.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2496. SUCCESS]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2497. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode started...]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2497. SUCCESS]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2498. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency started...]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2498. SUCCESS]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2499. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial started...]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2499. SUCCESS]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2500. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy started...]
19:05:56.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2500. SUCCESS]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2501. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation started...]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2501. SUCCESS]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2502. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency started...]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2502. SUCCESS]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2503. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic started...]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2503. SUCCESS]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2504. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats started...]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2504. SUCCESS]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2505. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch started...]
19:05:56.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2505. SUCCESS]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2506. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial started...]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2506. SUCCESS]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2507. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic started...]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2507. SUCCESS]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2508. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats started...]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2508. SUCCESS]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2509. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch started...]
19:05:56.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2509. SUCCESS]
19:05:56.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2510. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial started...]
19:05:56.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2510. SUCCESS]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2511. org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs started...]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2511. SUCCESS]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2512. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues started...]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2512. SUCCESS]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2513. org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples started...]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2513. SUCCESS]
19:05:56.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2514. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization started...]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2514. SUCCESS]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2515. org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation started...]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2515. SUCCESS]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2516. org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency started...]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2516. SUCCESS]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2517. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode started...]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2517. SUCCESS]
19:05:56.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2518. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency started...]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2518. SUCCESS]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2519. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial started...]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2519. SUCCESS]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2520. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy started...]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2520. SUCCESS]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2521. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation started...]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2521. SUCCESS]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2522. org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency started...]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2522. SUCCESS]
19:05:56.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2523. org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2523. SUCCESS]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2524. org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2524. SUCCESS]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2525. org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2525. SUCCESS]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2526. org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2526. SUCCESS]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2527. org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2527. SUCCESS]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2528. org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples started...]
19:05:56.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2528. SUCCESS]
19:05:56.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2529. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization started...]
19:05:56.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2529. SUCCESS]
19:05:56.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2530. org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation started...]
19:05:56.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2530. SUCCESS]
19:05:56.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2531. org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2531. SUCCESS]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2532. org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2532. SUCCESS]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2533. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2533. SUCCESS]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2534. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2534. SUCCESS]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2535. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2535. SUCCESS]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2536. org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation started...]
19:05:56.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2536. SUCCESS]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2537. org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency started...]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2537. SUCCESS]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2538. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile started...]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2538. SUCCESS]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2539. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample started...]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2539. SUCCESS]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2540. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton started...]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2540. SUCCESS]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2541. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile started...]
19:05:56.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2541. SUCCESS]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2542. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile started...]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2542. SUCCESS]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2543. org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5 started...]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2543. SUCCESS]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2544. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile started...]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2544. SUCCESS]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2545. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues started...]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2545. SUCCESS]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2546. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty started...]
19:05:56.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2546. SUCCESS]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2547. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy started...]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2547. SUCCESS]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2548. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation started...]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2548. SUCCESS]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2549. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency started...]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2549. SUCCESS]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2550. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues started...]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2550. SUCCESS]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2551. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct started...]
19:05:56.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2551. SUCCESS]
19:05:56.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2552. org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples started...]
19:05:56.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2552. SUCCESS]
19:05:56.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2553. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization started...]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2553. SUCCESS]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2554. org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation started...]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2554. SUCCESS]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2555. org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency started...]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2555. SUCCESS]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2556. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode started...]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2556. SUCCESS]
19:05:56.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2557. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency started...]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2557. SUCCESS]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2558. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial started...]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2558. SUCCESS]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2559. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy started...]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2559. SUCCESS]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2560. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation started...]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2560. SUCCESS]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2561. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency started...]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2561. SUCCESS]
19:05:56.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2562. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues started...]
19:05:56.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2562. SUCCESS]
19:05:56.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2563. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples started...]
19:05:56.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2563. SUCCESS]
19:05:56.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2564. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization started...]
19:05:56.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2564. SUCCESS]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2565. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation started...]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2565. SUCCESS]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2566. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency started...]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2566. SUCCESS]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2567. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode started...]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2567. SUCCESS]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2568. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency started...]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2568. SUCCESS]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2569. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial started...]
19:05:56.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2569. SUCCESS]
19:05:56.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2570. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy started...]
19:05:56.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2570. SUCCESS]
19:05:56.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2571. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation started...]
19:05:56.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2571. SUCCESS]
19:05:56.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2572. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency started...]
19:05:56.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2572. SUCCESS]
19:05:56.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2573. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues started...]
19:05:56.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2573. SUCCESS]
19:05:56.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2574. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples started...]
19:05:56.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2574. SUCCESS]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2575. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization started...]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2575. SUCCESS]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2576. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation started...]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2576. SUCCESS]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2577. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency started...]
19:05:56.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2577. SUCCESS]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2578. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode started...]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2578. SUCCESS]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2579. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency started...]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2579. SUCCESS]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2580. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial started...]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2580. SUCCESS]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2581. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy started...]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2581. SUCCESS]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2582. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation started...]
19:05:56.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2582. SUCCESS]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2583. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency started...]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2583. SUCCESS]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2584. org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues started...]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2584. SUCCESS]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2585. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum started...]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2585. SUCCESS]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2586. org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples started...]
19:05:56.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2586. SUCCESS]
19:05:56.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2587. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization started...]
19:05:56.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2587. SUCCESS]
19:05:56.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2588. org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation started...]
19:05:56.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2588. SUCCESS]
19:05:56.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2589. org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency started...]
19:05:56.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2589. SUCCESS]
19:05:56.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2590. org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode started...]
19:05:56.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2590. SUCCESS]
19:05:56.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2591. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency started...]
19:05:56.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2591. SUCCESS]
19:05:56.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2592. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial started...]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2592. SUCCESS]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2593. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy started...]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2593. SUCCESS]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2594. org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation started...]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2594. SUCCESS]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2595. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency started...]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2595. SUCCESS]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2596. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts started...]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2596. SUCCESS]
19:05:56.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2597. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence started...]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2597. SUCCESS]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2598. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts started...]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2598. SUCCESS]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2599. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount started...]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2599. SUCCESS]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2600. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic started...]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2600. SUCCESS]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2601. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare started...]
19:05:56.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2601. SUCCESS]
19:05:56.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2602. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts started...]
19:05:56.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2602. SUCCESS]
19:05:56.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2603. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation started...]
19:05:56.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2603. SUCCESS]
19:05:56.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2604. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple started...]
19:05:56.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2604. SUCCESS]
19:05:56.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2605. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest started...]
19:05:56.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2605. SUCCESS]
19:05:56.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2606. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue started...]
19:05:56.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2606. SUCCESS]
19:05:56.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2607. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue started...]
19:05:56.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2607. SUCCESS]
19:05:56.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2608. org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest started...]
19:05:56.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2608. SUCCESS]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2609. org.apache.commons.math.stat.inference.TTestTest#testSmallSamples started...]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2609. SUCCESS]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2610. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic started...]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2610. SUCCESS]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2611. org.apache.commons.math.stat.inference.TTestTest#testOneSampleT started...]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2611. SUCCESS]
19:05:56.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2612. org.apache.commons.math.stat.inference.TTestTest#testPaired started...]
19:05:56.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2612. SUCCESS]
19:05:56.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2613. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic started...]
19:05:56.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2613. SUCCESS]
19:05:56.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2614. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest started...]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2614. SUCCESS]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2615. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence started...]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2615. SUCCESS]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2616. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount started...]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2616. SUCCESS]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2617. org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples started...]
19:05:56.908 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2617. SUCCESS]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2618. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic started...]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2618. SUCCESS]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2619. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic started...]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2619. SUCCESS]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2620. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare started...]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2620. SUCCESS]
19:05:56.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2621. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT started...]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2621. SUCCESS]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2622. org.apache.commons.math.stat.inference.TestUtilsTest#testPaired started...]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2622. SUCCESS]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2623. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic started...]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2623. SUCCESS]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2624. org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils started...]
19:05:56.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2624. SUCCESS]
19:05:56.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2625. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation started...]
19:05:56.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2625. SUCCESS]
19:05:56.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2626. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple started...]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2626. SUCCESS]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2627. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage started...]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2627. SUCCESS]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2628. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom started...]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2628. SUCCESS]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2629. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential started...]
19:05:56.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2629. SUCCESS]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2630. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum started...]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2630. SUCCESS]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2631. org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault started...]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2631. SUCCESS]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2632. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs started...]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2632. SUCCESS]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2633. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum started...]
19:05:56.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2633. SUCCESS]
19:05:56.914 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2634. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency started...]
19:05:57.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2634. SUCCESS]
19:05:57.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2635. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData started...]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2635. SUCCESS]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2636. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare started...]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2636. SUCCESS]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2637. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData started...]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2637. SUCCESS]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2638. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency started...]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2638. SUCCESS]
19:05:57.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2639. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData started...]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2639. SUCCESS]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2640. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch started...]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2640. SUCCESS]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2641. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance started...]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2641. SUCCESS]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2642. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2642. SUCCESS]
19:05:57.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2643. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData started...]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2643. SUCCESS]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2644. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2 started...]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2644. SUCCESS]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2645. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals started...]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2645. SUCCESS]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2646. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2646. SUCCESS]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2647. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2647. SUCCESS]
19:05:57.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2648. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample started...]
19:05:57.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2648. SUCCESS]
19:05:57.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2649. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
19:05:57.341 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2649. SUCCESS]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2650. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2650. SUCCESS]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2651. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData started...]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2651. SUCCESS]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2652. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull started...]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2652. SUCCESS]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2653. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2653. SUCCESS]
19:05:57.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2654. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull started...]
19:05:57.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2654. SUCCESS]
19:05:57.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2655. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant started...]
19:05:57.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2655. SUCCESS]
19:05:57.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2656. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal started...]
19:05:57.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2656. SUCCESS]
19:05:57.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2657. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag started...]
19:05:57.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2657. SUCCESS]
19:05:57.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2658. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr started...]
19:05:57.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2658. SUCCESS]
19:05:57.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2659. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn started...]
19:05:57.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2659. SUCCESS]
19:05:57.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2660. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn started...]
19:05:57.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2660. SUCCESS]
19:05:57.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2661. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs started...]
19:05:57.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2661. SUCCESS]
19:05:57.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2662. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression started...]
19:05:57.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2662. SUCCESS]
19:05:57.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2663. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal started...]
19:05:57.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2663. SUCCESS]
19:05:57.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2664. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept started...]
19:05:57.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2664. SUCCESS]
19:05:57.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2665. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear started...]
19:05:57.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2665. SUCCESS]
19:05:57.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2666. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1 started...]
19:05:57.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2666. SUCCESS]
19:05:57.382 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2667. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2 started...]
19:05:57.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2667. SUCCESS]
19:05:57.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2668. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3 started...]
19:05:57.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2668. SUCCESS]
19:05:57.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2669. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli started...]
19:05:57.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2669. SUCCESS]
19:05:57.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2670. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly started...]
19:05:57.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2670. SUCCESS]
19:05:57.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2671. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs started...]
19:05:57.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2671. SUCCESS]
19:05:57.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2672. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat started...]
19:05:57.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2672. SUCCESS]
19:05:57.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2673. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility started...]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2673. SUCCESS]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2674. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull started...]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2674. SUCCESS]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2675. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull started...]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2675. SUCCESS]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2676. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance started...]
19:05:57.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2676. SUCCESS]
19:05:57.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2677. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
19:05:57.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2677. SUCCESS]
19:05:57.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2678. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit started...]
19:05:57.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2678. SUCCESS]
19:05:57.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2679. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1 started...]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2679. SUCCESS]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2680. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2 started...]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2680. SUCCESS]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2681. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3 started...]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2681. SUCCESS]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2682. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4 started...]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2682. SUCCESS]
19:05:57.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2683. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly started...]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2683. SUCCESS]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2684. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2 started...]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2684. SUCCESS]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2685. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals started...]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2685. SUCCESS]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2686. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
19:05:57.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2686. SUCCESS]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2687. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2687. SUCCESS]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2688. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample started...]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2688. SUCCESS]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2689. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2689. SUCCESS]
19:05:57.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2690. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2690. SUCCESS]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2691. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData started...]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2691. SUCCESS]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2692. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull started...]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2692. SUCCESS]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2693. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2693. SUCCESS]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2694. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull started...]
19:05:57.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2694. SUCCESS]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2695. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty started...]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2695. SUCCESS]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2696. org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear started...]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2696. SUCCESS]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2697. org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr started...]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2697. SUCCESS]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2698. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs started...]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2698. SUCCESS]
19:05:57.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2699. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2699. SUCCESS]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2700. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2700. SUCCESS]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2701. org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2701. SUCCESS]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2702. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2702. SUCCESS]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2703. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2703. SUCCESS]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2704. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle started...]
19:05:57.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2704. SUCCESS]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2705. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY started...]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2705. SUCCESS]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2706. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative started...]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2706. SUCCESS]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2707. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris started...]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2707. SUCCESS]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2708. org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference started...]
19:05:57.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2708. SUCCESS]
19:05:57.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2709. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom started...]
19:05:57.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2709. SUCCESS]
19:05:57.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2710. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple started...]
19:05:57.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2710. SUCCESS]
19:05:57.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2711. org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData started...]
19:05:57.398 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2711. SUCCESS]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2712. org.apache.commons.math.transform.FastCosineTransformerTest#testParameters started...]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2712. SUCCESS]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2713. org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction started...]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2713. SUCCESS]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2714. org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData started...]
19:05:57.399 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2714. SUCCESS]
19:05:57.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2715. org.apache.commons.math.transform.FastFourierTransformerTest#testParameters started...]
19:05:57.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2715. SUCCESS]
19:05:57.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2716. org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction started...]
19:05:57.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2716. SUCCESS]
19:05:57.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2717. org.apache.commons.math.transform.FastFourierTransformerTest#test2DData started...]
19:05:57.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2717. SUCCESS]
19:05:57.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2718. org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points started...]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2718. SUCCESS]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2719. org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points started...]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2719. SUCCESS]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2720. org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points started...]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2720. SUCCESS]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2721. org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse started...]
19:05:57.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2721. SUCCESS]
19:05:57.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2722. org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData started...]
19:05:57.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2722. SUCCESS]
19:05:57.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2723. org.apache.commons.math.transform.FastSineTransformerTest#testParameters started...]
19:05:57.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2723. SUCCESS]
19:05:57.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2724. org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction started...]
19:05:57.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2724. SUCCESS]
19:05:57.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2725. org.apache.commons.math.util.BigRealFieldTest#testOne started...]
19:05:57.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2725. SUCCESS]
19:05:57.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2726. org.apache.commons.math.util.BigRealFieldTest#testZero started...]
19:05:57.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2726. SUCCESS]
19:05:57.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2727. org.apache.commons.math.util.BigRealFieldTest#testSerial started...]
19:05:57.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2727. SUCCESS]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2728. org.apache.commons.math.util.BigRealTest#testAdd started...]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2728. SUCCESS]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2729. org.apache.commons.math.util.BigRealTest#testSubtract started...]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2729. SUCCESS]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2730. org.apache.commons.math.util.BigRealTest#testCompareTo started...]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2730. SUCCESS]
19:05:57.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2731. org.apache.commons.math.util.BigRealTest#testBigDecimalValue started...]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2731. SUCCESS]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2732. org.apache.commons.math.util.BigRealTest#testDivide started...]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2732. SUCCESS]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2733. org.apache.commons.math.util.BigRealTest#testMultiply started...]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2733. SUCCESS]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2734. org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode started...]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2734. SUCCESS]
19:05:57.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2735. org.apache.commons.math.util.BigRealTest#testSerial started...]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2735. SUCCESS]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2736. org.apache.commons.math.util.BigRealTest#testDoubleValue started...]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2736. SUCCESS]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2737. org.apache.commons.math.util.BigRealTest#testConstructor started...]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2737. SUCCESS]
19:05:57.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2738. org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio started...]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2738. SUCCESS]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2739. org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble started...]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2739. SUCCESS]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2740. org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal started...]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2740. SUCCESS]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2741. org.apache.commons.math.util.DefaultTransformerTest#testTransformObject started...]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2741. SUCCESS]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2742. org.apache.commons.math.util.DefaultTransformerTest#testTransformString started...]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2742. SUCCESS]
19:05:57.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2743. org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger started...]
19:05:57.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2743. SUCCESS]
19:05:57.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2744. org.apache.commons.math.util.DefaultTransformerTest#testTransformNull started...]
19:05:57.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2744. SUCCESS]
19:05:57.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2745. org.apache.commons.math.util.DefaultTransformerTest#testSerial started...]
19:05:57.423 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2745. SUCCESS]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2746. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[0] started...]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2746. SUCCESS]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2747. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[1] started...]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2747. SUCCESS]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2748. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[2] started...]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2748. SUCCESS]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2749. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[3] started...]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2749. SUCCESS]
19:05:57.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2750. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[4] started...]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2750. SUCCESS]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2751. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[5] started...]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2751. SUCCESS]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2752. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[6] started...]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2752. SUCCESS]
19:05:57.425 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2753. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[7] started...]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2753. SUCCESS]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2754. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[8] started...]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2754. SUCCESS]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2755. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[9] started...]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2755. SUCCESS]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2756. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[10] started...]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2756. SUCCESS]
19:05:57.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2757. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[11] started...]
19:05:57.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2757. SUCCESS]
19:05:57.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2758. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[12] started...]
19:05:57.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2758. SUCCESS]
19:05:57.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2759. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[13] started...]
19:05:57.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2759. SUCCESS]
19:05:57.430 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2760. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[14] started...]
19:05:57.431 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2760. SUCCESS]
19:05:57.432 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2761. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[15] started...]
19:05:57.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2761. SUCCESS]
19:05:57.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2762. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[16] started...]
19:05:57.434 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2762. SUCCESS]
19:05:57.434 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2763. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[17] started...]
19:05:57.434 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2763. SUCCESS]
19:05:57.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2764. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[18] started...]
19:05:57.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2764. SUCCESS]
19:05:57.436 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2765. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[19] started...]
19:05:57.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2765. SUCCESS]
19:05:57.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2766. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[20] started...]
19:05:57.438 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2766. SUCCESS]
19:05:57.438 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2767. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[21] started...]
19:05:57.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2767. SUCCESS]
19:05:57.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2768. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[22] started...]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2768. SUCCESS]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2769. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[23] started...]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2769. SUCCESS]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2770. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[24] started...]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2770. SUCCESS]
19:05:57.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2771. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[25] started...]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2771. SUCCESS]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2772. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[26] started...]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2772. SUCCESS]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2773. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[27] started...]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2773. SUCCESS]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2774. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[28] started...]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2774. SUCCESS]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2775. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[29] started...]
19:05:57.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2775. SUCCESS]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2776. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[30] started...]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2776. SUCCESS]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2777. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[31] started...]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2777. SUCCESS]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2778. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[32] started...]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2778. SUCCESS]
19:05:57.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2779. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[33] started...]
19:05:57.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2779. SUCCESS]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2780. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[34] started...]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2780. SUCCESS]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2781. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[35] started...]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2781. SUCCESS]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2782. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[36] started...]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2782. SUCCESS]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2783. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[37] started...]
19:05:57.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2783. SUCCESS]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2784. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[38] started...]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2784. SUCCESS]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2785. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[39] started...]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2785. SUCCESS]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2786. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[40] started...]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2786. SUCCESS]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2787. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[41] started...]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2787. SUCCESS]
19:05:57.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2788. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[42] started...]
19:05:57.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2788. SUCCESS]
19:05:57.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2789. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[43] started...]
19:05:57.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2789. SUCCESS]
19:05:57.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2790. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[44] started...]
19:05:57.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2790. SUCCESS]
19:05:57.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2791. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[45] started...]
19:05:57.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2791. SUCCESS]
19:05:57.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2792. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[46] started...]
19:05:57.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2792. SUCCESS]
19:05:57.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2793. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[47] started...]
19:05:57.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2793. SUCCESS]
19:05:57.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2794. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[48] started...]
19:05:57.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2794. SUCCESS]
19:05:57.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2795. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[49] started...]
19:05:57.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2795. SUCCESS]
19:05:57.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2796. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[50] started...]
19:05:57.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2796. SUCCESS]
19:05:57.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2797. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[51] started...]
19:05:57.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2797. SUCCESS]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2798. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[52] started...]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2798. SUCCESS]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2799. org.apache.commons.math.util.FastMathTest#testLogSpecialCases started...]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2799. SUCCESS]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2800. org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases started...]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2800. SUCCESS]
19:05:57.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2801. org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases started...]
19:05:57.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2801. SUCCESS]
19:05:57.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2802. org.apache.commons.math.util.FastMathTest#testCbrtAccuracy started...]
19:05:58.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2802. SUCCESS]
19:05:58.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2803. org.apache.commons.math.util.FastMathTest#testAtan2 started...]
19:05:58.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2803. SUCCESS]
19:05:58.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2804. org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses started...]
19:05:58.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2804. SUCCESS]
19:05:58.935 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2805. org.apache.commons.math.util.FastMathTest#testLogAccuracy started...]
19:05:59.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2805. SUCCESS]
19:05:59.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2806. org.apache.commons.math.util.FastMathTest#testAcosAccuracy started...]
19:06:00.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2806. SUCCESS]
19:06:00.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2807. org.apache.commons.math.util.FastMathTest#testMinMaxDouble started...]
19:06:00.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2807. SUCCESS]
19:06:00.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2808. org.apache.commons.math.util.FastMathTest#testPowSpecialCases started...]
19:06:00.380 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2808. SUCCESS]
19:06:00.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2809. org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases started...]
19:06:00.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2809. SUCCESS]
19:06:00.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2810. org.apache.commons.math.util.FastMathTest#testTanhAccuracy started...]
19:06:02.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2810. SUCCESS]
19:06:02.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2811. org.apache.commons.math.util.FastMathTest#testToRadians started...]
19:06:02.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2811. SUCCESS]
19:06:02.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2812. org.apache.commons.math.util.FastMathTest#testConstants started...]
19:06:02.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2812. SUCCESS]
19:06:02.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2813. org.apache.commons.math.util.FastMathTest#testTanAccuracy started...]
19:06:02.726 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2813. SUCCESS]
19:06:02.727 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2814. org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases started...]
19:06:02.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2814. SUCCESS]
19:06:02.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2815. org.apache.commons.math.util.FastMathTest#testToDegrees started...]
19:06:02.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2815. SUCCESS]
19:06:02.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2816. org.apache.commons.math.util.FastMathTest#testSinAccuracy started...]
19:06:02.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2816. SUCCESS]
19:06:02.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2817. org.apache.commons.math.util.FastMathTest#testAtan2Accuracy started...]
19:06:02.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2817. SUCCESS]
19:06:02.921 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2818. org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases started...]
19:06:02.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2818. SUCCESS]
19:06:02.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2819. org.apache.commons.math.util.FastMathTest#testExpm1Accuracy started...]
19:06:02.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2819. SUCCESS]
19:06:02.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2820. org.apache.commons.math.util.FastMathTest#testMinMaxFloat started...]
19:06:02.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2820. SUCCESS]
19:06:02.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2821. org.apache.commons.math.util.FastMathTest#testHyperbolic started...]
19:06:03.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2821. SUCCESS]
19:06:03.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2822. org.apache.commons.math.util.FastMathTest#testCoshAccuracy started...]
19:06:04.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2822. SUCCESS]
19:06:04.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2823. org.apache.commons.math.util.FastMathTest#testPowAccuracy started...]
19:06:04.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2823. SUCCESS]
19:06:04.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2824. org.apache.commons.math.util.FastMathTest#testExpSpecialCases started...]
19:06:04.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2824. SUCCESS]
19:06:04.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2825. org.apache.commons.math.util.FastMathTest#testLog10Accuracy started...]
19:06:04.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2825. SUCCESS]
19:06:04.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2826. org.apache.commons.math.util.FastMathTest#testAtanAccuracy started...]
19:06:04.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2826. SUCCESS]
19:06:04.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2827. org.apache.commons.math.util.FastMathTest#testNextAfter started...]
19:06:04.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2827. SUCCESS]
19:06:04.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2828. org.apache.commons.math.util.FastMathTest#testLog1pAccuracy started...]
19:06:04.671 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2828. SUCCESS]
19:06:04.672 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2829. org.apache.commons.math.util.FastMathTest#testHyperbolicInverses started...]
19:06:04.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2829. SUCCESS]
19:06:04.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2830. org.apache.commons.math.util.FastMathTest#testAsinAccuracy started...]
19:06:05.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2830. SUCCESS]
19:06:05.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2831. org.apache.commons.math.util.FastMathTest#testCosAccuracy started...]
19:06:05.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2831. SUCCESS]
19:06:06.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2832. org.apache.commons.math.util.FastMathTest#testExpAccuracy started...]
19:06:06.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2832. SUCCESS]
19:06:06.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2833. org.apache.commons.math.util.FastMathTest#testSinhAccuracy started...]
19:06:07.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2833. SUCCESS]
Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)
19:06:07.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2834. org.apache.commons.math.util.FastMathTestPerformance#testAbs started...]
abs        1    1.0      4 4.3027      2 2.4687
19:06:07.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2834. SUCCESS]
19:06:07.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2835. org.apache.commons.math.util.FastMathTestPerformance#testCos started...]
cos       62    1.0     50 0.8198     46 0.7543
19:06:08.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2835. SUCCESS]
19:06:08.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2836. org.apache.commons.math.util.FastMathTestPerformance#testExp started...]
exp       78    1.0     38 0.4856     71 0.9131
19:06:10.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2836. SUCCESS]
19:06:10.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2837. org.apache.commons.math.util.FastMathTestPerformance#testLog started...]
log       96    1.0     52 0.5390     28 0.2966
19:06:12.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2837. SUCCESS]
19:06:12.673 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2838. org.apache.commons.math.util.FastMathTestPerformance#testPow started...]
pow      297    1.0    175 0.5894    101 0.3420
19:06:18.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2838. SUCCESS]
19:06:18.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2839. org.apache.commons.math.util.FastMathTestPerformance#testSin started...]
sin       57    1.0     47 0.8194     48 0.8412
19:06:19.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2839. SUCCESS]
19:06:19.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2840. org.apache.commons.math.util.FastMathTestPerformance#testTan started...]
tan       89    1.0     96 1.0781     65 0.7379
19:06:22.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2840. SUCCESS]
19:06:22.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2841. org.apache.commons.math.util.FastMathTestPerformance#testAtan2 started...]
atan2    140    1.0    136 0.9709    140 0.9978
19:06:26.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2841. SUCCESS]
19:06:26.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2842. org.apache.commons.math.util.FastMathTestPerformance#testExpm1 started...]
expm1     87    1.0     94 1.0720     89 1.0164
19:06:29.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2842. SUCCESS]
19:06:29.340 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2843. org.apache.commons.math.util.FastMathTestPerformance#testHypot started...]
hypot    814    1.0     42 0.0518    811 0.9953
19:06:46.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2843. SUCCESS]
19:06:46.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2844. org.apache.commons.math.util.FastMathTestPerformance#testLog10 started...]
log10    130    1.0    140 1.0723     28 0.2202
19:06:49.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2844. SUCCESS]
19:06:49.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2845. org.apache.commons.math.util.FastMathTestPerformance#testLog1p started...]
log1p     95    1.0    139 1.4587     98 1.0332
19:06:52.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2845. SUCCESS]
19:06:52.362 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2846. org.apache.commons.math.util.FastMathTestPerformance#testAcos started...]
acos     452    1.0    199 0.4412    455 1.0064
19:07:03.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2846. SUCCESS]
19:07:03.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2847. org.apache.commons.math.util.FastMathTestPerformance#testAsin started...]
asin     458    1.0    191 0.4164    462 1.0073
19:07:14.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2847. SUCCESS]
19:07:14.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2848. org.apache.commons.math.util.FastMathTestPerformance#testAtan started...]
atan      73    1.0     92 1.2585     75 1.0254
19:07:16.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2848. SUCCESS]
19:07:16.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2849. org.apache.commons.math.util.FastMathTestPerformance#testCbrt started...]
cbrt     126    1.0     97 0.7677    128 1.0152
19:07:20.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2849. SUCCESS]
19:07:20.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2850. org.apache.commons.math.util.FastMathTestPerformance#testCosh started...]
cosh     129    1.0     85 0.6599    131 1.0174
19:07:23.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2850. SUCCESS]
19:07:23.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2851. org.apache.commons.math.util.FastMathTestPerformance#testSinh started...]
sinh     142    1.0     96 0.6788    150 1.0576
19:07:27.855 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2851. SUCCESS]
19:07:27.855 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2852. org.apache.commons.math.util.FastMathTestPerformance#testSqrt started...]
sqrt       2    1.0      0 0.0000     13 6.5326
19:07:28.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2852. SUCCESS]
19:07:28.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2853. org.apache.commons.math.util.FastMathTestPerformance#testTanh started...]
tanh     160    1.0    115 0.7153    151 0.9414
19:07:32.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2853. SUCCESS]
19:07:32.283 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2854. org.apache.commons.math.util.IncrementorTest#testAboveMaxCount started...]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2854. SUCCESS]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2855. org.apache.commons.math.util.IncrementorTest#testBelowMaxCount started...]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2855. SUCCESS]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2856. org.apache.commons.math.util.IncrementorTest#testAccessor started...]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2856. SUCCESS]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2857. org.apache.commons.math.util.IncrementorTest#testReset started...]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2857. SUCCESS]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2858. org.apache.commons.math.util.IncrementorTest#testBulkIncrement started...]
19:07:32.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2858. SUCCESS]
19:07:32.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2859. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt started...]
19:07:32.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2859. SUCCESS]
19:07:32.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2860. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient started...]
19:07:32.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2860. SUCCESS]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2861. org.apache.commons.math.util.MathUtilsTest#testFactorialFail started...]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2861. SUCCESS]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2862. org.apache.commons.math.util.MathUtilsTest#testGcdConsistency started...]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2862. SUCCESS]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2863. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble2 started...]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2863. SUCCESS]
19:07:32.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2864. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble3 started...]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2864. SUCCESS]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2865. org.apache.commons.math.util.MathUtilsTest#testSortInPlace started...]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2865. SUCCESS]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2866. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt2 started...]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2866. SUCCESS]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2867. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt3 started...]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2867. SUCCESS]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2868. org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble started...]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2868. SUCCESS]
19:07:32.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2869. org.apache.commons.math.util.MathUtilsTest#testRoundDouble started...]
19:07:32.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2869. SUCCESS]
19:07:32.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2870. org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle started...]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2870. SUCCESS]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2871. org.apache.commons.math.util.MathUtilsTest#testNormalizeArray started...]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2871. SUCCESS]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2872. org.apache.commons.math.util.MathUtilsTest#testIndicatorInt started...]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2872. SUCCESS]
19:07:32.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2873. org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle started...]
19:07:32.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2873. SUCCESS]
19:07:32.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2874. org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble started...]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2874. SUCCESS]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2875. org.apache.commons.math.util.MathUtilsTest#testGcd started...]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2875. SUCCESS]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2876. org.apache.commons.math.util.MathUtilsTest#testLcm started...]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2876. SUCCESS]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2877. org.apache.commons.math.util.MathUtilsTest#testLog started...]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2877. SUCCESS]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2878. org.apache.commons.math.util.MathUtilsTest#testPow started...]
19:07:32.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2878. SUCCESS]
19:07:32.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2879. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge started...]
19:07:32.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2879. SUCCESS]
19:07:32.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2880. org.apache.commons.math.util.MathUtilsTest#testCheckOrder started...]
19:07:32.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2880. SUCCESS]
19:07:32.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2881. org.apache.commons.math.util.MathUtilsTest#testCosh started...]
19:07:32.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2881. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2882. org.apache.commons.math.util.MathUtilsTest#testHash started...]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2882. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2883. org.apache.commons.math.util.MathUtilsTest#testSinh started...]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2883. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2884. org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash started...]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2884. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2885. org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt started...]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2885. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2886. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong started...]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2886. SUCCESS]
19:07:32.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2887. org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2887. SUCCESS]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2888. org.apache.commons.math.util.MathUtilsTest#testCompareToEpsilon started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2888. SUCCESS]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2889. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2889. SUCCESS]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2890. org.apache.commons.math.util.MathUtilsTest#testRoundFloat started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2890. SUCCESS]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2891. org.apache.commons.math.util.MathUtilsTest#testArrayEqualsIncludingNaN started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2891. SUCCESS]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2892. org.apache.commons.math.util.MathUtilsTest#testArrayHash started...]
19:07:32.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2892. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2893. org.apache.commons.math.util.MathUtilsTest#testFactorial started...]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2893. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2894. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedDelta started...]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2894. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2895. org.apache.commons.math.util.MathUtilsTest#testGcdLong started...]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2895. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2896. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedUlps started...]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2896. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2897. org.apache.commons.math.util.MathUtilsTest#testLcmLong started...]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2897. SUCCESS]
19:07:32.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2898. org.apache.commons.math.util.MathUtilsTest#testArrayEquals started...]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2898. SUCCESS]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2899. org.apache.commons.math.util.MathUtilsTest#testSubAndCheck started...]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2899. SUCCESS]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2900. org.apache.commons.math.util.MathUtilsTest#testCheckFinite started...]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2900. SUCCESS]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2901. org.apache.commons.math.util.MathUtilsTest#testFloatEqualsWithAllowedUlps started...]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2901. SUCCESS]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2902. org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong started...]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2902. SUCCESS]
19:07:32.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2903. org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble started...]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2903. SUCCESS]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2904. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt started...]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2904. SUCCESS]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2905. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail started...]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2905. SUCCESS]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2906. org.apache.commons.math.util.MathUtilsTest#testLinearCombinationInfinite started...]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2906. SUCCESS]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2907. org.apache.commons.math.util.MathUtilsTest#testMath475 started...]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2907. SUCCESS]
19:07:32.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2908. org.apache.commons.math.util.MathUtilsTest#testCoshNaN started...]
19:07:32.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2908. SUCCESS]
19:07:32.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2909. org.apache.commons.math.util.MathUtilsTest#testLinearCombination1 started...]
19:07:32.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2909. SUCCESS]
19:07:32.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2910. org.apache.commons.math.util.MathUtilsTest#testLinearCombination2 started...]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2910. SUCCESS]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2911. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage started...]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2911. SUCCESS]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2912. org.apache.commons.math.util.MathUtilsTest#test0Choose0 started...]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2912. SUCCESS]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2913. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps started...]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2913. SUCCESS]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2914. org.apache.commons.math.util.MathUtilsTest#testMulAndCheck started...]
19:07:32.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2914. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2915. org.apache.commons.math.util.MathUtilsTest#testSignByte started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2915. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2916. org.apache.commons.math.util.MathUtilsTest#testSignLong started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2916. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2917. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2917. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2918. org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2918. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2919. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2919. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2920. org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat started...]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2920. SUCCESS]
19:07:32.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2921. org.apache.commons.math.util.MathUtilsTest#testCompareToMaxUlps started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2921. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2922. org.apache.commons.math.util.MathUtilsTest#testIndicatorShort started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2922. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2923. org.apache.commons.math.util.MathUtilsTest#testIndicatorByte started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2923. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2924. org.apache.commons.math.util.MathUtilsTest#testIndicatorLong started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2924. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2925. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1 started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2925. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2926. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2 started...]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2926. SUCCESS]
19:07:32.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2927. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaN started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2927. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2928. org.apache.commons.math.util.MathUtilsTest#testSignDouble started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2928. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2929. org.apache.commons.math.util.MathUtilsTest#testAddAndCheck started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2929. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2930. org.apache.commons.math.util.MathUtilsTest#testReduce started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2930. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2931. org.apache.commons.math.util.MathUtilsTest#testSignInt started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2931. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2932. org.apache.commons.math.util.MathUtilsTest#testSinhNaN started...]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2932. SUCCESS]
19:07:32.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2933. org.apache.commons.math.util.MathUtilsTest#testSignFloat started...]
19:07:32.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2933. SUCCESS]
19:07:32.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2934. org.apache.commons.math.util.MathUtilsTest#testSignShort started...]
19:07:32.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2934. SUCCESS]
19:07:32.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2935. org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency started...]
19:07:32.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2935. SUCCESS]
19:07:32.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2936. org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions started...]
19:07:32.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2936. SUCCESS]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2937. org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors started...]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2937. SUCCESS]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2938. org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion started...]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2938. SUCCESS]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2939. org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions started...]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2939. SUCCESS]
19:07:32.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2940. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting started...]
19:07:32.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2940. SUCCESS]
19:07:32.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2941. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2 started...]
19:07:32.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2941. SUCCESS]
19:07:32.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2942. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions started...]
19:07:32.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2942. SUCCESS]
19:07:32.796 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2943. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy started...]
19:07:32.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2943. SUCCESS]
19:07:32.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2944. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey started...]
19:07:32.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2944. SUCCESS]
19:07:32.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2945. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent started...]
19:07:32.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2945. SUCCESS]
19:07:32.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2946. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet started...]
19:07:32.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2946. SUCCESS]
19:07:32.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2947. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize started...]
19:07:32.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2947. SUCCESS]
19:07:32.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2948. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2 started...]
19:07:32.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2948. SUCCESS]
19:07:32.826 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2949. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification started...]
19:07:32.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2949. SUCCESS]
19:07:32.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2950. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent started...]
19:07:32.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2950. SUCCESS]
19:07:32.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2951. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty started...]
19:07:32.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2951. SUCCESS]
19:07:32.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2952. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting started...]
19:07:32.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2952. SUCCESS]
19:07:32.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2953. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove started...]
19:07:32.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2953. SUCCESS]
19:07:32.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2954. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator started...]
19:07:32.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2954. SUCCESS]
19:07:32.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2955. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize started...]
19:07:32.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2955. SUCCESS]
19:07:32.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2956. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty started...]
19:07:32.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2956. SUCCESS]
19:07:32.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2957. org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting started...]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2957. SUCCESS]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2958. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2 started...]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2958. SUCCESS]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2959. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions started...]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2959. SUCCESS]
19:07:32.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2960. org.apache.commons.math.util.OpenIntToFieldTest#testCopy started...]
19:07:32.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2960. SUCCESS]
19:07:32.860 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2961. org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey started...]
19:07:32.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2961. SUCCESS]
19:07:32.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2962. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent started...]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2962. SUCCESS]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2963. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet started...]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2963. SUCCESS]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2964. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize started...]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2964. SUCCESS]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2965. org.apache.commons.math.util.OpenIntToFieldTest#testRemove2 started...]
19:07:32.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2965. SUCCESS]
19:07:32.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2966. org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification started...]
19:07:32.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2966. SUCCESS]
19:07:32.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2967. org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent started...]
19:07:32.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2967. SUCCESS]
19:07:32.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2968. org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty started...]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2968. SUCCESS]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2969. org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting started...]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2969. SUCCESS]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2970. org.apache.commons.math.util.OpenIntToFieldTest#testRemove started...]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2970. SUCCESS]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2971. org.apache.commons.math.util.OpenIntToFieldTest#testIterator started...]
19:07:32.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2971. SUCCESS]
19:07:32.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2972. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize started...]
19:07:32.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2972. SUCCESS]
19:07:32.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2973. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty started...]
19:07:32.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2973. SUCCESS]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2974. org.apache.commons.math.util.PairTest#testAccessor started...]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2974. SUCCESS]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2975. org.apache.commons.math.util.PairTest#testEquals started...]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2975. SUCCESS]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2976. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements started...]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2976. SUCCESS]
19:07:32.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2977. org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000 started...]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2977. SUCCESS]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2978. org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute started...]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2978. SUCCESS]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2979. org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors started...]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2979. SUCCESS]
19:07:32.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2980. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling started...]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2980. SUCCESS]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2981. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor started...]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2981. SUCCESS]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2982. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements started...]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2982. SUCCESS]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2983. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity started...]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2983. SUCCESS]
19:07:32.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2984. org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard started...]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2984. SUCCESS]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2985. org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode started...]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2985. SUCCESS]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2986. org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators started...]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2986. SUCCESS]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2987. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion started...]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2987. SUCCESS]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2988. org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues started...]
19:07:32.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2988. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2989. org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax started...]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2989. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2990. org.apache.commons.math.util.TransformerMapTest#testClear started...]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2990. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2991. org.apache.commons.math.util.TransformerMapTest#testContainsTransformer started...]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2991. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2992. org.apache.commons.math.util.TransformerMapTest#testTransformers started...]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2992. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2993. org.apache.commons.math.util.TransformerMapTest#testPutTransformer started...]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2993. SUCCESS]
19:07:32.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2994. org.apache.commons.math.util.TransformerMapTest#testContainsClass started...]
19:07:32.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2994. SUCCESS]
19:07:32.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2995. org.apache.commons.math.util.TransformerMapTest#testClasses started...]
19:07:32.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2995. SUCCESS]
19:07:32.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2996. org.apache.commons.math.util.TransformerMapTest#testSerial started...]
19:07:32.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2996. SUCCESS]
19:07:32.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2997. org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer started...]
19:07:32.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2997. SUCCESS]
19:07:32.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (139597 ms)
<> Total tests run: 2997
<> Ignored tests: 1
<> Failed tests: 2
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:32.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
19:07:32.900 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:32,900 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:32.917 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:32.940 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:33.787 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:33.787 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:1177.
19:07:33.788 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
19:07:33.788 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
19:07:33.788 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:33,789 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:33.800 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:33.819 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:34.056 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:34.059 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:34,091 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:34,092 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:34,211 DEBUG spoon.support.StandardEnvironment - built in 120 ms
2015-03-05 19:07:34,211 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:34,212 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:34.212 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:34,213 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:34.231 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
19:07:34.233 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
19:07:34.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:34.249 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:34.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:34.445 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:34.454 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:34.454 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:34.464 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:34.571 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:34.571 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (107 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:34.581 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:34.581 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:34.581 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:34.588 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:34.590 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:34.590 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:34.591 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:258
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:34.591 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:34.591 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:34.591 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:258 otherwise the patch would be "true" or "false"
19:07:34.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
19:07:34.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
19:07:34.592 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:34,592 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:34.600 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:34.611 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:34.738 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:34.739 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:581.
19:07:34.739 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
19:07:34.739 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
19:07:34.739 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:34,739 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:34.750 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:34.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:34.914 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:34.914 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:255.
19:07:34.914 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
19:07:34.914 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
19:07:34.915 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:34,915 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:34.923 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:34.940 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:35.068 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:35.068 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:256.
19:07:35.068 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
19:07:35.068 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
19:07:35.068 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:35,068 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:35.075 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:35.090 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:35.215 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:35.216 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:35,238 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:35,238 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:35,304 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-03-05 19:07:35,304 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:35,304 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:35.305 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:35,305 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:35.312 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((c == 0.0) && (d == 0.0)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:35.314 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:35.324 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:35.424 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:35.437 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:35.603 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:35.603 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:35.610 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:35.623 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:35.624 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:35.631 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:35.631 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:35.631 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:35.639 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:35.651 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:35.652 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:35.653 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:257
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:35.653 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:35.653 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:35.653 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:257 otherwise the patch would be "true" or "false"
19:07:35.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
19:07:35.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
19:07:35.653 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:35,653 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:35.669 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:35.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:36.247 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:36.247 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:36,269 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:36,269 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:36,591 DEBUG spoon.support.StandardEnvironment - built in 322 ms
2015-03-05 19:07:36,591 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:36,591 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:36.592 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:36,592 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:36.596 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return java.lang.Math.PI ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return java.lang.Math.PI;
}
19:07:36.597 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return java.lang.Math.PI ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return java.lang.Math.PI;
    
}
19:07:36.602 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:36.681 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:36.912 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:36.925 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:36.929 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:36.929 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:36.935 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:37.053 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:37.053 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (118 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:37.062 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:37.063 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:37.063 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:37.070 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:37.073 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:37.073 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:37.074 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2994
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:37.074 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:37.074 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:37.074 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2994 otherwise the patch would be "true" or "false"
19:07:37.074 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
19:07:37.074 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
19:07:37.074 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:37,075 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:37.076 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:37.082 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:37.141 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:37.141 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,162 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,162 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,225 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-03-05 19:07:37,225 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:37,226 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:37.227 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:37,227 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:37.233 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:37.234 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:37.243 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:37.334 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:37.351 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:37.357 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:37.357 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:37.367 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:37.573 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:37.573 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (206 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:37.583 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:37.583 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:37.583 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:37.593 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:37.598 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:37.599 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:37.600 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:577
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:37.600 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:37.600 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:37.600 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:577 otherwise the patch would be "true" or "false"
19:07:37.600 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
19:07:37.600 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
19:07:37.600 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:37,600 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:37.602 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:37.611 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:37.679 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:37.680 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,707 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,707 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:37,788 DEBUG spoon.support.StandardEnvironment - built in 81 ms
2015-03-05 19:07:37,788 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:37,788 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:37.789 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:37,789 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:37.796 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(divisor) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(divisor);
    if ((isNaN) || (divisor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    final double c = divisor.getReal();
    final double d = divisor.getImaginary();
    if ((c == 0.0) && (d == 0.0)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((divisor.isInfinite()) && (!(isInfinite()))) {
        return org.apache.commons.math.complex.Complex.ZERO;
    } 
    if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
        double q = c / d;
        double denominator = (c * q) + d;
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    } else {
        double q = d / c;
        double denominator = (d * q) + c;
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    }
}
19:07:37.797 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(divisor) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(divisor);
    
    if ((isNaN) || (divisor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    final double c = divisor.getReal();
    final double d = divisor.getImaginary();
    if ((c == 0.0) && (d == 0.0)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((divisor.isInfinite()) && (!(isInfinite()))) {
        return org.apache.commons.math.complex.Complex.ZERO;
    } 
    if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
        double q = c / d;
        double denominator = (c * q) + d;
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    } else {
        double q = d / c;
        double denominator = (d * q) + c;
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    }
}
19:07:37.798 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:37.807 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:37.887 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:37.904 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:37.910 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:37.910 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:37.947 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:38.088 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:38.089 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (142 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:38.098 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:38.099 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:38.099 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:38.108 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:38.120 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:38.120 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:38.121 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:250
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:38.122 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:38.122 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:38.122 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:250 otherwise the patch would be "true" or "false"
19:07:38.122 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
19:07:38.122 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
19:07:38.122 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,122 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:38.124 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.132 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.194 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:38.194 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,221 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,221 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,299 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-03-05 19:07:38,300 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:38,300 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:38.301 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,301 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:38.307 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (divisor.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:38.308 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.316 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.392 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:38.409 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:38.415 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:38.415 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:38.425 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:38.568 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:38.568 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (143 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:38.578 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:38.578 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:38.579 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:38.588 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:38.599 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:38.599 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:38.600 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:251
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:38.600 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:38.600 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:38.600 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:251 otherwise the patch would be "true" or "false"
19:07:38.600 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
19:07:38.600 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
19:07:38.601 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,601 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:38.602 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.610 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.667 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:38.667 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:266.
19:07:38.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
19:07:38.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
19:07:38.667 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,667 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:38.669 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.676 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.732 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:38.733 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:267.
19:07:38.733 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
19:07:38.733 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=268, Suspiciousness=0.06819943394704735]
19:07:38.733 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,733 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:38.735 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.742 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.797 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:38.798 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,823 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,823 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:38,901 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-03-05 19:07:38,901 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:38,901 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:38.902 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,902 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:38.909 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator)) ##### Before:
{
    double q = c / d;
    double denominator = (c * q) + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
}
19:07:38.910 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator)) ##### After:
{
    double q = c / d;
    double denominator = (c * q) + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    
}
19:07:38.910 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.918 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:38.976 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:317: error: missing return statement
    }
    ^
19:07:38.977 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
19:07:38.977 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:38,977 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:38.979 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:38.987 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.041 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.041 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,066 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,067 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,144 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-03-05 19:07:39,144 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:39,144 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:39.145 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,145 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:39.151 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
19:07:39.151 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
19:07:39.152 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.160 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.227 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.245 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:39.250 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:39.250 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:39.259 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:39.388 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:39.389 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (129 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:39.398 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:39.398 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:39.398 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:39.407 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:39.409 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:39.409 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:39.411 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:745
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:39.411 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:39.411 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:39.411 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:745 otherwise the patch would be "true" or "false"
19:07:39.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
19:07:39.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
19:07:39.411 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,411 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:39.413 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.421 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.474 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.474 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:271.
19:07:39.474 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
19:07:39.474 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
19:07:39.475 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,475 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:39.476 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.537 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.537 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:272.
19:07:39.537 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
19:07:39.537 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=273, Suspiciousness=0.05083285677753489]
19:07:39.538 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,538 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:39.539 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.547 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.600 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,626 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,626 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,703 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-03-05 19:07:39,703 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:39,703 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:39.704 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,704 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:39.711 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator)) ##### Before:
{
    double q = d / c;
    double denominator = (d * q) + c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
}
19:07:39.712 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator)) ##### After:
{
    double q = d / c;
    double denominator = (d * q) + c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    
}
19:07:39.712 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.767 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:317: error: missing return statement
    }
    ^
19:07:39.768 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
19:07:39.768 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,768 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:39.770 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:39.828 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:39.828 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,853 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,854 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:39,930 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-03-05 19:07:39,931 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:39,931 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:39.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:39,932 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:39.938 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((divisor.isInfinite()) && (!(isInfinite()))) {
    return org.apache.commons.math.complex.Complex.ZERO;
} 
19:07:39.939 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:39.946 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:40.007 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:40.024 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:40.029 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:40.030 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:40.038 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:40.175 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:40.175 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (137 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:40.183 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:40.183 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:40.183 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:40.191 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
19:07:40.198 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:40.198 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:40.199 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:261
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:40.199 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:40.199 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:40.199 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:261 otherwise the patch would be "true" or "false"
19:07:40.199 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
19:07:40.199 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
19:07:40.199 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:40,199 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:40.201 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:40.211 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:40.259 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:40.260 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,285 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,285 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,362 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-03-05 19:07:40,362 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:40,362 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:40.363 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:40,363 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:40.369 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
    double q = c / d;
    double denominator = (c * q) + d;
    return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
} else {
    double q = d / c;
    double denominator = (d * q) + c;
    return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
}
19:07:40.370 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:40.377 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:40.436 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:40.452 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:40.457 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:40.457 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:40.465 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:40.603 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:40.603 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (138 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:40.611 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:40.611 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:40.612 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:40.619 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:40.625 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:40.625 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:40.627 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:265
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:40.627 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:40.627 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:40.627 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:265 otherwise the patch would be "true" or "false"
19:07:40.627 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
19:07:40.627 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
19:07:40.627 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:40,627 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:40.629 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:40.636 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:40.682 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:40.682 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,708 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,708 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:40,786 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-03-05 19:07:40,786 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:40,786 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:40.787 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:40,787 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:40.793 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
19:07:40.794 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
19:07:40.794 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:40.801 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:40.859 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:40.874 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:40.880 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:40.880 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:40.888 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:41.017 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:41.017 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (129 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:41.025 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:41.025 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:41.025 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:41.033 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:41.034 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:41.035 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:41.036 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:417
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:41.036 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:41.036 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:41.036 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:417 otherwise the patch would be "true" or "false"
19:07:41.036 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
19:07:41.036 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=39, Suspiciousness=0.04075695729696112]
19:07:41.037 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=40, Suspiciousness=0.04075695729696112]
19:07:41.037 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
19:07:41.037 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,037 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.039 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.046 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.091 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.091 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:748.
19:07:41.091 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
19:07:41.091 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
19:07:41.092 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,092 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.093 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.100 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.144 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.144 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:131.
19:07:41.144 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
19:07:41.144 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=132, Suspiciousness=0.038124642583151166]
19:07:41.145 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,145 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.146 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.153 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.198 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.198 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,223 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,224 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,301 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-03-05 19:07:41,301 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:41,301 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:41.302 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,302 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:41.307 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q)))) ##### Before:
{
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
}
19:07:41.308 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q)))) ##### After:
{
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
    
}
19:07:41.309 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.315 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.355 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:177: error: missing return statement
    }
    ^
19:07:41.356 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
19:07:41.356 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,357 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.358 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.364 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.409 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.409 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,434 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,435 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,510 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:41,511 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:41,511 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:41.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,512 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:41.517 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((real) == 0.0) {
    return org.apache.commons.math.util.FastMath.abs(imaginary);
} 
19:07:41.518 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.524 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.596 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:41.601 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:41.601 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:41.608 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
19:07:41.742 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:41.742 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (134 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:41.750 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:41.750 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:41.750 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:41.757 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:41.760 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:41.761 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:41.761 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:128
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:41.761 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:41.761 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:41.761 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:128 otherwise the patch would be "true" or "false"
19:07:41.761 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
19:07:41.761 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
19:07:41.761 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,761 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.763 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.810 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.810 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:161.
19:07:41.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
19:07:41.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
19:07:41.810 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,810 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:41.811 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.817 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:41.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:41.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,881 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,881 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:41,951 DEBUG spoon.support.StandardEnvironment - built in 70 ms
2015-03-05 19:07:41,951 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:41,951 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:41.952 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:41,953 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:41.957 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:41.958 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:41.963 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.014 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.028 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:42.033 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:42.034 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:42.041 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:42.172 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:42.172 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (131 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:42.179 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:42.179 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:42.180 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:42.187 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:42.190 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:42.190 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:42.190 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:744
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:42.190 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:42.190 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:42.190 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:744 otherwise the patch would be "true" or "false"
19:07:42.190 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
19:07:42.190 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
19:07:42.191 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,191 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:42.192 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.197 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.240 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:426.
19:07:42.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
19:07:42.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
19:07:42.241 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,241 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:42.242 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.248 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.290 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.290 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:491.
19:07:42.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
19:07:42.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
19:07:42.291 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,291 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:42.292 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.298 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.339 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.339 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,364 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,365 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,440 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:42,440 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:42,440 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:42.441 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,441 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:42.446 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(addend) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isNaN",addend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend",addend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.real",addend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isInfinite",addend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.imaginary",addend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(addend);
    if ((isNaN) || (addend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) + (addend.getReal())), ((imaginary) + (addend.getImaginary())));
}
19:07:42.447 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(addend) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isNaN",addend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend",addend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.real",addend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isInfinite",addend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.imaginary",addend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(addend);
    
    if ((isNaN) || (addend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) + (addend.getReal())), ((imaginary) + (addend.getImaginary())));
}
19:07:42.447 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.453 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.505 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.520 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:42.526 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:42.526 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:42.533 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:42.666 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:42.666 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:42.673 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:42.673 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:42.674 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:42.681 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:42.684 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:42.684 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:42.685 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:156
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:42.685 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:42.685 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:42.685 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:156 otherwise the patch would be "true" or "false"
19:07:42.685 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
19:07:42.685 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
19:07:42.685 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,685 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:42.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.734 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,759 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,759 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:42,834 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:42,834 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:42,834 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:42.835 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:42,835 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:42.841 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (addend.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:42.841 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:42.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:42.899 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:42.914 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:42.920 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:42.920 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:42.927 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:43.059 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:43.059 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.066 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:43.066 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:43.067 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:43.074 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:43.077 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:43.077 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.077 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:157
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:43.077 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.077 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.077 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:157 otherwise the patch would be "true" or "false"
19:07:43.078 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
19:07:43.078 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
19:07:43.078 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:43,078 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:43.079 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:43.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:43.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:43.126 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,151 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,152 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,266 DEBUG spoon.support.StandardEnvironment - built in 114 ms
2015-03-05 19:07:43,266 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:43,266 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:43.267 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:43,267 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:43.273 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.imaginary",subtrahend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.real",subtrahend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend",subtrahend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isInfinite",subtrahend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isNaN",subtrahend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend);
    if ((isNaN) || (subtrahend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) - (subtrahend.getReal())), ((imaginary) - (subtrahend.getImaginary())));
}
19:07:43.274 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.imaginary",subtrahend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.real",subtrahend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend",subtrahend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isInfinite",subtrahend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isNaN",subtrahend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend);
    
    if ((isNaN) || (subtrahend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) - (subtrahend.getReal())), ((imaginary) - (subtrahend.getImaginary())));
}
19:07:43.274 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:43.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:43.331 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:43.346 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:43.351 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:43.351 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:43.359 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:43.493 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:43.493 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (135 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.500 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:43.500 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:43.500 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:43.507 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:43.511 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:43.511 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.511 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:486
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:43.511 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.511 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.511 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:486 otherwise the patch would be "true" or "false"
19:07:43.511 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
19:07:43.511 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
19:07:43.512 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:43,512 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:43.513 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:43.519 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:43.559 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:43.559 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,584 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,585 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,661 DEBUG spoon.support.StandardEnvironment - built in 76 ms
2015-03-05 19:07:43,661 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:43,661 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:43.662 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:43,662 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:43.668 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (subtrahend.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:43.668 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:43.674 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:43.724 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:43.740 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:43.745 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:43.745 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:43.752 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:43.883 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:43.883 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (131 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.890 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:43.891 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:43.891 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:43.898 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:43.901 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:43.901 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:43.901 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:487
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:43.901 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.901 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:43.901 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:487 otherwise the patch would be "true" or "false"
19:07:43.902 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
19:07:43.902 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
19:07:43.902 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:43,902 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:43.903 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:43.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:43.948 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:43.948 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,973 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:43,973 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:44,051 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-03-05 19:07:44,052 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:44,052 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:44.052 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:44,053 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:44.058 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
    return org.apache.commons.math.complex.Complex.INF;
} 
19:07:44.059 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:44.064 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:44.113 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:44.128 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:44.134 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:44.134 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:44.141 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
19:07:44.276 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:44.276 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (135 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:44.283 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:44.283 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:44.283 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:44.290 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:44.293 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:44.294 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:44.294 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:419
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:44.294 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:44.294 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:44.294 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:419 otherwise the patch would be "true" or "false"
19:07:44.294 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
19:07:44.294 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
19:07:44.294 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:44,294 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:44.296 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:44.301 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:44.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:44.340 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:362.
19:07:44.340 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
19:07:44.340 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
19:07:44.340 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:44,340 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:44.342 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:44.347 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:44.386 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:44.386 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:353.
19:07:44.386 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
19:07:44.386 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
19:07:44.387 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:44,387 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:44.388 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:44.393 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:44.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:44.431 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:44,456 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:44,456 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:44,531 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:44,531 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:44,532 DEBUG spoon.support.StandardEnvironment - built in 1 ms
19:07:44.532 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:44,532 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:44.537 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((org.apache.commons.math.util.FastMath.abs(real)) < (org.apache.commons.math.util.FastMath.abs(imaginary))) {
    if ((imaginary) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(real);
    } 
    double q = (real) / (imaginary);
    return (org.apache.commons.math.util.FastMath.abs(imaginary)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
} else {
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
}
19:07:44.538 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:44.543 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:44.588 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:44.604 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:44.609 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:44.609 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:44.616 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:44.807 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:44.807 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (191 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:44.813 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:44.813 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:44.813 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:44.819 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:44.822 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:44.822 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:44.822 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:121
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:44.822 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:44.822 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:44.822 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:121 otherwise the patch would be "true" or "false"
19:07:44.822 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
19:07:44.822 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
19:07:44.823 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:44,823 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:44.833 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:44.892 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:45.032 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:45.032 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:45,057 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:45,058 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:45,370 DEBUG spoon.support.StandardEnvironment - built in 313 ms
2015-03-05 19:07:45,371 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:45,371 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:45.372 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:45,372 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:45.377 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((y < 0.0) || (invy < 0.0)) {
    return -(java.lang.Math.PI);
} else {
    return java.lang.Math.PI;
}
19:07:45.383 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:45.437 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:45.575 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:45.587 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:45.592 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:45.592 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:45.595 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(1.5707963267948966, 0.5493061443340549)
(1.5707963267948966, 0.5850356263251273)
(1.5707963267948966, 0.6263814842476839)
(1.5707963267948966, 0.6749633584745077)
(1.5707963267948966, 0.7331685343967135)
(1.5707963267948966, 0.8047189562170501)
(1.5707963267948966, 0.8958797346140276)
(1.5707963267948966, 1.0184409636305198)
(1.5707963267948966, 1.1989476363991853)
(1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:45.786 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:45.786 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (191 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:45.789 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:45.789 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:45.790 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:45.792 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:45.795 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:45.795 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:45.795 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2991
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:45.796 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:45.796 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:45.796 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2991 otherwise the patch would be "true" or "false"
19:07:45.796 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
19:07:45.796 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
19:07:45.796 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:45,796 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:45.806 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:45.854 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:45.966 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:45.967 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:45,992 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:45,992 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:46,300 DEBUG spoon.support.StandardEnvironment - built in 308 ms
2015-03-05 19:07:46,300 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:46,301 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:46.301 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:46,302 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:46.306 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return result ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return result;
}
19:07:46.307 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return result ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return result;
    
}
19:07:46.312 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:46.357 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:46.471 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:46.482 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:46.487 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:46.488 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:46.490 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:46.621 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:46.621 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (131 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:46.623 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:46.624 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:46.624 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:46.627 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:46.629 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:46.629 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:46.630 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2997
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:46.630 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:46.630 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:46.630 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2997 otherwise the patch would be "true" or "false"
19:07:46.630 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
19:07:46.630 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
19:07:46.630 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:46,630 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:46.631 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:46.636 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:46.671 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:46.671 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:46,696 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:46,696 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:46,771 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:46,771 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:46,771 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:46.772 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:46,772 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:46.776 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isInfinite()) {
    return java.lang.Double.POSITIVE_INFINITY;
} 
19:07:46.777 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:46.782 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:46.824 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:46.834 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:46.839 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:46.839 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:46.842 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
19:07:46.972 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:46.973 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (130 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:46.975 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:46.976 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:46.976 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:46.978 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:46.981 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:46.982 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:46.987 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:118
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:46.987 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:46.987 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:46.987 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:118 otherwise the patch would be "true" or "false"
19:07:46.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
19:07:46.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
19:07:46.987 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:46,987 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:46.989 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:46.993 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:47.027 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:47.027 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,052 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,052 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,538 DEBUG spoon.support.StandardEnvironment - built in 486 ms
2015-03-05 19:07:47,538 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:47,538 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:47.539 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:47,539 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:47.544 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return java.lang.Double.NaN;
} 
19:07:47.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:47.549 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:47.591 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:47.603 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:47.608 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:47.608 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:47.612 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:47.745 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:47.745 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:47.748 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:47.749 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:47.749 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:47.752 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:47.755 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:47.755 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:47.755 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:115
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:47.755 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:47.756 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:47.756 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:115 otherwise the patch would be "true" or "false"
19:07:47.756 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
19:07:47.756 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
19:07:47.756 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:47,756 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:47.757 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:47.762 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:47.795 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:47.795 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,820 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,821 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:47,895 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-03-05 19:07:47,895 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:47,895 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:47.896 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:47,896 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:47.902 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(factor) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(factor);
    if ((isNaN) || (factor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
        return org.apache.commons.math.complex.Complex.INF;
    } 
    return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), (((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));
}
19:07:47.902 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(factor) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(factor);
    
    if ((isNaN) || (factor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
        return org.apache.commons.math.complex.Complex.INF;
    } 
    return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), (((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));
}
19:07:47.902 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:47.907 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:47.948 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:47.959 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:47.965 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:47.965 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:47.968 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:48.101 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:48.101 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.105 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:48.105 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:48.105 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:48.108 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:48.112 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:48.112 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.112 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:415
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:48.112 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.112 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.112 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:415 otherwise the patch would be "true" or "false"
19:07:48.112 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
19:07:48.112 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
19:07:48.113 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:48,113 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:48.114 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:48.119 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:48.152 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:48.152 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,177 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,178 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,252 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-03-05 19:07:48,252 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:48,252 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:48.253 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:48,253 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:48.258 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (factor.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
19:07:48.259 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:48.263 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:48.304 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:48.315 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:48.320 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:48.320 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:48.323 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:48.507 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:48.507 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (184 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.510 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:48.510 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:48.510 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:48.513 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:48.516 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:48.516 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.517 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:416
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:48.517 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.517 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.517 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:416 otherwise the patch would be "true" or "false"
19:07:48.517 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
19:07:48.517 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
19:07:48.517 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:48,517 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:48.519 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:48.523 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:48.556 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:48.556 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,581 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,582 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:48,656 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-03-05 19:07:48,656 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:48,656 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:48.657 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:48,657 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:48.662 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return ((real) == (c.real)) && ((imaginary) == (c.imaginary)) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("other",other);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
}
19:07:48.663 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return ((real) == (c.real)) && ((imaginary) == (c.imaginary)) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("other",other);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
    
}
19:07:48.663 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:48.668 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:48.708 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:48.719 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:48.724 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:48.725 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:48.727 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:48.869 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:48.870 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (143 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.872 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:48.873 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:48.873 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:48.876 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:48.877 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:48.877 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:48.877 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:325
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:48.877 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.878 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:48.878 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:325 otherwise the patch would be "true" or "false"
19:07:48.878 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
19:07:48.878 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
19:07:48.878 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:48,878 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:48.888 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:48.928 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:49.024 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:49.025 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:49,050 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:49,050 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:49,354 DEBUG spoon.support.StandardEnvironment - built in 304 ms
2015-03-05 19:07:49,354 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:49,354 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:49.355 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:49,355 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:49.360 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((x < 0.0) || (invx < 0.0)) {
    if ((y < 0.0) || (invy < 0.0)) {
        return -(java.lang.Math.PI);
    } else {
        return java.lang.Math.PI;
    }
} else {
    return result;
}
19:07:49.366 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:49.407 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:49.509 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:49.520 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:49.526 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:49.526 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:49.529 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(0.0, 0.5493061443340549)
(0.0, 0.5850356263251273)
(0.0, 0.6263814842476839)
(0.0, 0.6749633584745077)
(0.0, 0.7331685343967135)
(0.0, 0.8047189562170501)
(0.0, 0.8958797346140276)
(0.0, 1.0184409636305198)
(0.0, 1.1989476363991853)
(0.0, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:49.666 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:49.666 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (137 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:49.669 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:49.669 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:49.669 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:49.672 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(-1.5707963267948966, 1.4722194895832204)
(-1.5707963267948966, 1.0986122886681098)
(-1.5707963267948966, 0.8673005276940532)
(-1.5707963267948966, 0.6931471805599453)
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.4236489301936017)
(-1.5707963267948966, 0.3095196042031116)
(-1.5707963267948966, 0.2027325540540821)
(-1.5707963267948966, 0.10033534773107562)
19:07:49.676 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:49.676 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:49.676 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2990
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:49.676 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:49.677 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:49.677 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2990 otherwise the patch would be "true" or "false"
19:07:49.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
19:07:49.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
19:07:49.677 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:49,677 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:49.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:49.726 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:49.818 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:49.818 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2978.
19:07:49.818 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
19:07:49.818 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
19:07:49.818 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:49,818 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:49.828 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:49.865 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:49.954 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:49.955 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2979.
19:07:49.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
19:07:49.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
19:07:49.955 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:49,955 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:49.964 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:50.002 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:50.089 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:50.089 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2980.
19:07:50.089 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
19:07:50.089 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
19:07:50.089 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:50,089 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:50.099 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:50.137 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:50.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:50.220 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:50,245 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:50,245 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:50,546 DEBUG spoon.support.StandardEnvironment - built in 301 ms
2015-03-05 19:07:50,546 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:50,546 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:50.547 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:50,547 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:50.551 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (invx == 0.0) {
    if (x > 0) {
        return y;
    } else {
        return org.apache.commons.math.util.FastMath.copySign(java.lang.Math.PI, y);
    }
} 
19:07:50.557 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:50.596 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:50.684 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:50.695 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:50.700 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:50.700 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:50.703 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:50.828 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:50.828 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (125 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:50.831 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:50.832 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:50.832 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:50.835 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:50.838 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:50.838 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:50.838 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2982
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:50.838 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:50.839 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:50.839 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2982 otherwise the patch would be "true" or "false"
19:07:50.839 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
19:07:50.839 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
19:07:50.839 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:50,839 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:50.840 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:50.844 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:50.873 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:50.873 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:321.
19:07:50.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
19:07:50.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
19:07:50.873 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:50,873 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:50.874 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:50.878 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:50.906 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:50.906 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:50,929 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:50,929 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:50,998 DEBUG spoon.support.StandardEnvironment - built in 69 ms
2015-03-05 19:07:50,998 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:50,998 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:50.999 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:50,999 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:51.003 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (c.isNaN) {
    return isNaN;
} else {
    return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
}
19:07:51.004 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.008 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.043 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.053 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:51.058 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:51.058 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:51.061 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:51.198 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:51.198 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (137 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:51.202 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:51.202 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
19:07:51.202 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from org.apache.commons.math.complex.ComplexTest#testDivideZero
19:07:51.202 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
19:07:51.205 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:51.206 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:51.206 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:51.207 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:322
[testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:51.207 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:51.207 [main] DEBUG tests.output - Second set: 
[testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:51.207 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:322 otherwise the patch would be "true" or "false"
19:07:51.207 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
19:07:51.207 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
19:07:51.207 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,207 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.209 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.243 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.243 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:386.
19:07:51.243 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
19:07:51.243 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
19:07:51.243 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,243 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.244 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.249 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.278 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.279 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,304 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,304 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,377 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-03-05 19:07:51,377 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:51,377 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:51.378 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,378 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:51.383 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (other instanceof org.apache.commons.math.complex.Complex) {
    org.apache.commons.math.complex.Complex c = ((org.apache.commons.math.complex.Complex)(other));
    if (c.isNaN) {
        return isNaN;
    } else {
        return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
    }
} 
19:07:51.384 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.388 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.436 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:51.442 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:51.442 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:51.445 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:51.575 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:51.575 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (130 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:51.578 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:51.578 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:51.578 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:51.581 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:51.582 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:51.582 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:51.583 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:320
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:51.583 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:51.583 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:51.583 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:320 otherwise the patch would be "true" or "false"
19:07:51.583 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
19:07:51.583 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
19:07:51.583 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,583 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.585 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.619 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:97.
19:07:51.619 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
19:07:51.619 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=98, Suspiciousness=0.022484687520664393]
19:07:51.619 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,619 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.620 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.624 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.654 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.654 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,679 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,679 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,752 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-03-05 19:07:51,752 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:51,752 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:51.753 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,753 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:51.754 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.real = real ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:51.754 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.real = real ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.real = real;
    
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:51.755 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.759 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.786 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable real might not have been initialized
    }
    ^
19:07:51.787 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=99, Suspiciousness=0.022484687520664393]
19:07:51.787 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,787 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.789 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.793 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.822 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.822 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,847 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,847 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:51,920 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-03-05 19:07:51,920 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:51,920 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:51.921 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,921 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:51.922 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.imaginary = imaginary ##### Before:
{
    this.real = real;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:51.922 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.imaginary = imaginary ##### After:
{
    this.real = real;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.imaginary = imaginary;
    
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:51.923 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.927 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.955 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable imaginary might not have been initialized
    }
    ^
19:07:51.956 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=101, Suspiciousness=0.022484687520664393]
19:07:51.956 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:51,956 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:51.958 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:51.962 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:51.991 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:51.991 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,016 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,017 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,089 DEBUG spoon.support.StandardEnvironment - built in 73 ms
2015-03-05 19:07:52,090 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:52,090 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:52.090 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,091 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:52.091 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary)) ##### Before:
{
    this.real = real;
    this.imaginary = imaginary;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:52.092 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary)) ##### After:
{
    this.real = real;
    this.imaginary = imaginary;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:52.092 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.096 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.124 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:105: error: variable isNaN might not have been initialized
        isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
                        ^
19:07:52.124 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=102, Suspiciousness=0.022484687520664393]
19:07:52.124 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,124 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:52.126 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.130 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.159 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:52.159 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,184 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,185 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,239 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-05 19:07:52,239 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:52,239 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:52.240 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,240 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:52.241 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) ##### Before:
{
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
19:07:52.241 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) ##### After:
{
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    
}
19:07:52.241 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.244 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.263 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable isInfinite might not have been initialized
    }
    ^
19:07:52.264 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
19:07:52.264 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,264 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:52.265 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.268 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.288 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:52.288 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:104.
19:07:52.288 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
19:07:52.288 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
19:07:52.288 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,288 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:52.289 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.292 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.312 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:52.312 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,329 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,329 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-05 19:07:52,379 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-03-05 19:07:52,379 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:52,379 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:52.380 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:52,380 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:52.383 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (this == other) {
    return true;
} 
19:07:52.384 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:52.387 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.412 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:52.423 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:52.429 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:52.429 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:52.431 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:52.560 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:52.560 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (129 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:52.562 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:52.562 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
19:07:52.562 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from org.apache.commons.math.complex.ComplexTest#testDivideZero
19:07:52.562 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
19:07:52.565 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:52.566 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:52.567 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:52.567 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:317
[testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:52.567 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:52.567 [main] DEBUG tests.output - Second set: 
[testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:52.567 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:317 otherwise the patch would be "true" or "false"
19:07:52.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
19:07:52.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
19:07:52.567 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:52,567 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:52.574 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:52.599 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:52.652 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:52.652 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:52,669 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:52,670 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:52,955 DEBUG spoon.support.StandardEnvironment - built in 286 ms
2015-03-05 19:07:52,955 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:52,955 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:52.956 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:52,956 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:52.961 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (y == 0.0) {
    double result = x * y;
    double invx = 1.0 / x;
    double invy = 1.0 / y;
    if (invx == 0.0) {
        if (x > 0) {
            return y;
        } else {
            return org.apache.commons.math.util.FastMath.copySign(java.lang.Math.PI, y);
        }
    } 
    if ((x < 0.0) || (invx < 0.0)) {
        if ((y < 0.0) || (invy < 0.0)) {
            return -(java.lang.Math.PI);
        } else {
            return java.lang.Math.PI;
        }
    } else {
        return result;
    }
} 
19:07:52.966 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:53.005 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:53.088 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:53.098 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:53.103 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:53.104 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:53.107 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:53.239 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:53.239 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:53.242 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:53.242 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:53.242 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:53.245 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:53.248 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:53.249 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:53.249 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2977
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:53.249 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:53.249 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:53.249 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2977 otherwise the patch would be "true" or "false"
19:07:53.249 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
19:07:53.249 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
19:07:53.249 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:53,249 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:53.259 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:53.296 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:53.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:53.371 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:53,397 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:53,397 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:53,694 DEBUG spoon.support.StandardEnvironment - built in 297 ms
2015-03-05 19:07:53,695 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:53,695 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:53.695 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:53,696 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:53.700 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((x != x) || (y != y)) {
    return java.lang.Double.NaN;
} 
19:07:53.706 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:53.744 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:53.824 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:53.835 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:53.840 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:53.840 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:53.843 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:53.977 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:53.977 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (134 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:53.980 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:53.980 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:53.980 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:53.983 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
19:07:53.986 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:53.987 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:53.987 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2973
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:53.987 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:53.987 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:53.987 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2973 otherwise the patch would be "true" or "false"
19:07:53.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
19:07:53.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
19:07:53.987 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-05 19:07:53,987 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:53.989 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
19:07:53.993 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:54.022 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:54.022 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:1125.
19:07:54.022 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
19:07:54.022 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
19:07:54.022 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-05 19:07:54,022 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:54.027 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.MathUtils]
19:07:54.045 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:54.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
19:07:54.240 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.MathUtils:2337.
19:07:54.240 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
19:07:54.240 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
19:07:54.240 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-05 19:07:54,241 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:54.245 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.MathUtils]
19:07:54.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:54.433 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
19:07:54.433 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-05 19:07:54,458 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-05 19:07:54,459 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-05 19:07:54,616 DEBUG spoon.support.StandardEnvironment - built in 158 ms
2015-03-05 19:07:54,617 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:54,617 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:54.618 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-05 19:07:54,618 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:54.623 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (o == null) {
    throw new org.apache.commons.math.exception.NullArgumentException();
} 
19:07:54.623 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.MathUtils]
19:07:54.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:54.747 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
19:07:54.757 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:54.770 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:54.772 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[null is not allowed]
org.apache.commons.math.exception.NullArgumentException: null is not allowed
    at org.apache.commons.math.util.MathUtils.checkNotNull(MathUtils.java:2166)
    at org.apache.commons.math.complex.Complex.divide(Complex.java:239)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
19:07:54.775 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
19:07:54.778 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:54.778 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null is not allowed]
org.apache.commons.math.exception.NullArgumentException: null is not allowed
    at org.apache.commons.math.util.MathUtils.checkNotNull(MathUtils.java:2166)
    at org.apache.commons.math.complex.Complex.add(Complex.java:150)
    at org.apache.commons.math.complex.Complex.atan(Complex.java:545)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:577)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:54.781 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:54.781 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:54.782 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:54.784 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:54.922 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:54.922 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (138 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:54.922 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.MathUtils:2334
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:54.922 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): null is not allowed, testAtanI(org.apache.commons.math.complex.ComplexTest): null is not allowed]
19:07:54.922 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:54.922 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.MathUtils:2334 otherwise the patch would be "true" or "false"
19:07:54.922 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
19:07:54.922 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
19:07:54.923 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:54,923 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:54.932 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:54.971 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:55.071 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:55.072 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:55,095 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:55,095 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:55,383 DEBUG spoon.support.StandardEnvironment - built in 288 ms
2015-03-05 19:07:55,383 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:55,383 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:55.384 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:55,384 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:55.391 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
    double xa = x - 1.0;
    double xb = (xa - x) + 1.0;
    double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
    double aa = (xa + tmp) - tmp;
    double ab = xa - aa;
    xa = aa;
    xb = ab;
    double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
    double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
    for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
        ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
    }
    aa = ya * xa;
    ab = ((ya * xb) + (yb * xa)) + (yb * xb);
    tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
    ya = (aa + tmp) - tmp;
    yb = (aa - ya) + ab;
    return ya + yb;
} 
19:07:55.395 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:55.434 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:55.533 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:55.544 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:55.548 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:55.548 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:55.551 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:55.681 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:55.681 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (130 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:55.684 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:55.684 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:55.684 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:55.687 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3155450954010183)
(0.0, 0.20276612896226132)
(0.0, 0.10033535989281407)
19:07:55.689 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:55.689 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:55.689 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1315
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:55.689 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:55.689 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:55.690 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1315 otherwise the patch would be "true" or "false"
19:07:55.690 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
19:07:55.690 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
19:07:55.690 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:55,690 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:55.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:55.736 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:55.822 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:55.823 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:55,848 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:55,848 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:56,141 DEBUG spoon.support.StandardEnvironment - built in 293 ms
2015-03-05 19:07:56,142 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:56,142 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:56.143 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:56,143 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:56.150 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = -0.16624882440418567 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:56.150 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = -0.16624882440418567 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = -0.16624882440418567;
    
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:56.154 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:56.193 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:56.259 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:56.267 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:56.270 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:56.270 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:56.273 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:56.424 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:56.424 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (151 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:56.426 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:56.427 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:56.427 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:56.430 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:56.434 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:56.434 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:56.434 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1429
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:56.434 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:56.434 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:56.434 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1429 otherwise the patch would be "true" or "false"
19:07:56.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
19:07:56.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
19:07:56.435 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:56,435 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:56.441 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:56.468 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:56.527 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:56.527 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:56,544 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:56,544 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:56,768 DEBUG spoon.support.StandardEnvironment - built in 224 ms
2015-03-05 19:07:56,769 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:56,769 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:56.769 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:56,770 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:56.776 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.19999954120254515 ##### Before:
{
    lnza = -0.16624882440418567;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:56.777 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.19999954120254515 ##### After:
{
    lnza = -0.16624882440418567;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 0.19999954120254515;
    
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:56.780 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:56.817 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:56.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:56.933 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:56.937 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:56.937 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:56.940 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:57.076 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:57.076 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (136 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:57.079 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:57.080 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:57.080 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:57.083 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:57.087 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:57.087 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:57.087 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1430
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:57.087 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:57.087 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:57.087 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1430 otherwise the patch would be "true" or "false"
19:07:57.087 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
19:07:57.087 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
19:07:57.088 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:57,088 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:57.097 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:57.132 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:57.214 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:57.214 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:57,239 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:57,239 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:57,532 DEBUG spoon.support.StandardEnvironment - built in 293 ms
2015-03-05 19:07:57,532 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:57,532 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:57.533 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:57,533 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:57.540 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.2499999997677497) ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:57.540 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.2499999997677497) ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + (-0.2499999997677497);
    
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:57.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:57.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:57.671 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:57.682 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:57.685 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:57.686 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:57.689 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:57.812 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:57.812 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (124 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:57.814 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:57.815 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:57.815 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:57.818 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251385)
(-1.5707963267948966, 0.6263814842477058)
(-1.5707963267948966, 0.6749633584745157)
(-1.5707963267948966, 0.7331685343967154)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.018440963630523)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222612188617801)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940632)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936236)
(0.0, 0.3095196042031161)
(0.0, 0.20273255405412263)
(0.0, 0.10033534773108436)
19:07:57.821 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:57.821 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:57.822 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1431
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:57.822 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:57.822 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:57.822 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1431 otherwise the patch would be "true" or "false"
19:07:57.822 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
19:07:57.822 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
19:07:57.822 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:57,822 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:57.831 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:57.862 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:57.938 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:57.938 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:57,961 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:57,962 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:58,230 DEBUG spoon.support.StandardEnvironment - built in 268 ms
2015-03-05 19:07:58,230 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:58,230 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:58.231 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:58,231 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:58.238 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.3333333333332802 ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:58.238 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.3333333333332802 ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 0.3333333333332802;
    
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:58.242 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:58.277 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:58.364 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:58.375 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:58.379 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:58.379 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:58.382 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356262945335)
(-1.5707963267948966, 0.6263814841969366)
(-1.5707963267948966, 0.6749633584506374)
(-1.5707963267948966, 0.7331685343887953)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636190805)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222612187413713)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276657161)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42364893014285443)
(0.0, 0.30951960418764374)
(0.0, 0.20273255397348056)
(0.0, 0.10033534770553987)
19:07:58.517 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:58.517 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (135 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:58.520 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:58.520 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:58.520 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:58.523 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:58.527 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:58.527 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:58.528 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1432
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:58.528 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:58.528 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:58.528 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1432 otherwise the patch would be "true" or "false"
19:07:58.528 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
19:07:58.528 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
19:07:58.528 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:58,528 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:58.537 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:58.573 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:58.650 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:58.651 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:58,676 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:58,676 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:58,963 DEBUG spoon.support.StandardEnvironment - built in 287 ms
2015-03-05 19:07:58,963 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:58,963 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:58.964 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:58,964 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:58.971 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.5) ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:58.971 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.5) ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + (-0.5);
    
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:58.975 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:59.011 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:59.098 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:59.109 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:59.112 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:59.113 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:59.124 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:59.257 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:59.257 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:59.260 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:59.260 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:59.260 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:59.263 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.585035718990003)
(-1.5707963267948966, 0.6263816140934777)
(-1.5707963267948966, 0.6749634370105302)
(-1.5707963267948966, 0.7331685720317024)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.018441011726076)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222614497545377)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673006157442822)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42364906003939545)
(0.0, 0.3095196630135265)
(0.0, 0.2027327308100164)
(0.0, 0.10033542987853723)
19:07:59.267 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:59.267 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:59.267 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1433
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:59.268 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:59.268 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:59.268 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1433 otherwise the patch would be "true" or "false"
19:07:59.268 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
19:07:59.268 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
19:07:59.268 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:59,268 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:07:59.277 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:59.312 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:59.391 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:59.391 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:59,417 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:59,417 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:07:59,701 DEBUG spoon.support.StandardEnvironment - built in 284 ms
2015-03-05 19:07:59,701 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:07:59,701 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:07:59.702 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:59,702 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:07:59.709 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 1.0 ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:07:59.709 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 1.0 ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 1.0;
    
    lnza = lnza * epsilon;
}
19:07:59.713 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:07:59.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:07:59.836 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:07:59.846 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:59.850 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:07:59.850 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:59.853 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5846819692426813)
(-1.5707963267948966, 0.625962853624466)
(-1.5707963267948966, 0.6746377748307648)
(-1.5707963267948966, 0.7329431437179063)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.018186169728115)
(-1.5707963267948966, 1.1989476363991851)
(-1.5707963267948966, 1.5217029985259456)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681096)
(0.0, 0.8669557881580753)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42323029957038383)
(0.0, 0.30923785644555496)
(0.0, 0.20224413146148232)
(0.0, 0.1000023629987077)
19:07:59.986 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:07:59.986 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:59.989 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:07:59.989 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:07:59.989 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:07:59.992 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:07:59.996 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:07:59.996 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:07:59.996 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1434
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:07:59.996 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:59.996 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:07:59.996 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1434 otherwise the patch would be "true" or "false"
19:07:59.996 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
19:07:59.997 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
19:07:59.997 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:07:59,997 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:00.006 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:00.042 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:00.120 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:00.120 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:00,145 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:00,145 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:00,431 DEBUG spoon.support.StandardEnvironment - built in 286 ms
2015-03-05 19:08:00,431 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:00,431 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:00.432 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:00,432 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:00.439 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = lnza * epsilon ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = lnza * epsilon;
}
19:08:00.439 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = lnza * epsilon ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = lnza * epsilon;
    
}
19:08:00.443 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:00.479 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:00.563 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:00.573 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:00.577 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:00.577 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:00.580 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:00.712 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:00.713 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:00.715 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:00.716 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:00.716 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:00.718 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 1.0493061443340548)
(-1.5707963267948966, 1.0846819692426812)
(-1.5707963267948966, 1.1259628536244661)
(-1.5707963267948966, 1.1746377748307648)
(-1.5707963267948966, 1.2329431437179064)
(-1.5707963267948966, 1.3047189562170503)
(-1.5707963267948966, 1.3958797346140275)
(-1.5707963267948966, 1.518186169728115)
(-1.5707963267948966, 1.6989476363991851)
(-1.5707963267948966, 2.021702998525946)
(NaN, NaN)
(0.0, 1.9722194895832201)
(0.0, 1.5986122886681096)
(0.0, 1.3669557881580754)
(0.0, 1.1931471805599454)
(0.0, 1.0493061443340548)
(0.0, 0.9232302995703838)
(0.0, 0.8092378564455549)
(0.0, 0.7022441314614823)
(0.0, 0.6000023629987077)
19:08:00.722 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:00.722 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:00.723 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1435
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:00.723 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:00.723 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:00.723 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1435 otherwise the patch would be "true" or "false"
19:08:00.723 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
19:08:00.723 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
19:08:00.723 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:00,723 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:00.732 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:00.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:00.842 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:00.842 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1256.
19:08:00.842 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
19:08:00.842 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
19:08:00.842 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:00,842 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:00.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:00.885 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:00.959 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:00.959 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1362.
19:08:00.959 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
19:08:00.959 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
19:08:00.960 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:00,960 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:00.969 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.003 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:01.076 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:01.077 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1373.
19:08:01.077 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
19:08:01.077 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
19:08:01.077 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:01,077 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:01.086 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.120 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:01.193 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:01.193 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1375.
19:08:01.193 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
19:08:01.193 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
19:08:01.194 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:01,194 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:01.202 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:01.302 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:01.302 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1376.
19:08:01.302 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
19:08:01.302 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
19:08:01.302 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:01,302 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:01.311 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.342 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:01.410 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:01.410 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:01,434 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:01,434 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:01,708 DEBUG spoon.support.StandardEnvironment - built in 274 ms
2015-03-05 19:08:01,708 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:01,708 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:01.709 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:01,709 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:01.714 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (hiPrec != null) {
    double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
    double aa = (epsilon + tmp) - tmp;
    double ab = epsilon - aa;
    double xa = aa;
    double xb = ab;
    double numer = bits & 4398046511103L;
    double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
    aa = (numer - (xa * denom)) - (xb * denom);
    xb += aa / denom;
    double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
    double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
    for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
        ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
    }
    aa = ya * xa;
    ab = ((ya * xb) + (yb * xa)) + (yb * xb);
    lnza = aa + ab;
    lnzb = -((lnza - aa) - ab);
} else {
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
19:08:01.716 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.741 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:01.797 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:01.805 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:01.807 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:01.808 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:01.810 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:01.945 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:01.945 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (135 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:01.947 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:01.948 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:01.948 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:01.951 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:01.954 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:01.954 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:01.954 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1378
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:01.955 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:01.955 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:01.955 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1378 otherwise the patch would be "true" or "false"
19:08:01.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
19:08:01.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
19:08:01.955 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:01,955 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:01.961 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:01.984 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.034 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.034 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1452.
19:08:02.034 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
19:08:02.034 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
19:08:02.034 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,035 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:02.041 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.064 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.114 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1453.
19:08:02.114 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
19:08:02.114 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
19:08:02.114 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,114 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:02.121 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.144 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.194 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.194 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1454.
19:08:02.194 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
19:08:02.194 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
19:08:02.194 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,194 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:02.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.309 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.310 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1455.
19:08:02.310 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
19:08:02.310 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
19:08:02.310 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,310 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:02.319 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.353 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.425 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:02,450 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:02,451 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:02,724 DEBUG spoon.support.StandardEnvironment - built in 273 ms
2015-03-05 19:08:02,724 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:02,724 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:02.725 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,725 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:02.730 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:02.731 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:02.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:02.815 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:02.825 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:02.829 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:02.829 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:02.831 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:02.924 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:02.924 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (93 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:02.927 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:02.927 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:02.927 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:02.929 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.346573581315256)
(-1.5707963267948966, 0.34680936160993264)
(-1.5707963267948966, 0.3468526875748629)
(-1.5707963267948966, 0.34679067475868747)
(-1.5707963267948966, 0.6932974452362711)
(-1.5707963267948966, 0.6931471823303695)
(-1.5707963267948966, 0.6931471715952288)
(-1.5707963267948966, 0.6933170574949609)
(-1.5707963267948966, 1.0397207718228456)
(-1.5707963267948966, 1.3866665230552078)
(NaN, NaN)
(0.0, 1.3862943575470112)
(0.0, 1.0397207687639731)
(0.0, 0.6933770054600902)
(0.0, 0.6931471805599453)
(0.0, 0.346573581315256)
(0.0, 0.3468526816384183)
(0.0, 1.8782949150272628E-4)
(0.0, 3.256410120136356E-4)
(0.0, 2.2200055833849943E-4)
19:08:02.931 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:02.932 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:02.932 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1456
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:02.932 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:02.932 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:02.932 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1456 otherwise the patch would be "true" or "false"
19:08:02.932 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
19:08:02.932 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
19:08:02.932 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:02,932 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:02.939 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:02.962 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:03.011 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:03.011 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,028 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,029 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,243 DEBUG spoon.support.StandardEnvironment - built in 214 ms
2015-03-05 19:08:03,244 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:03,244 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:03.244 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:03,244 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:03.250 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:03.251 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:03.254 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:03.282 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:03.348 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:03.359 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:03.362 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:03.363 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:03.365 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:03.478 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:03.478 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (113 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:03.481 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:03.481 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:03.481 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:03.483 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:03.486 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:03.486 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:03.486 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1457
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:03.486 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:03.486 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:03.486 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1457 otherwise the patch would be "true" or "false"
19:08:03.486 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
19:08:03.487 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
19:08:03.487 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:03,487 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:03.494 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:03.522 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:03.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:03.581 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,601 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,601 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:03,862 DEBUG spoon.support.StandardEnvironment - built in 261 ms
2015-03-05 19:08:03,862 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:03,862 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:03.863 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:03,863 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:03.870 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnza ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:03.871 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnza ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + lnza;
    
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:03.875 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:03.910 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:03.990 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:04.000 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:04.003 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:04.004 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:04.006 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:04.138 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:04.138 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:04.141 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:04.141 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:04.141 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:04.144 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:04.147 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:04.147 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:04.148 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1459
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:04.148 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:04.148 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:04.148 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1459 otherwise the patch would be "true" or "false"
19:08:04.148 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
19:08:04.148 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
19:08:04.148 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:04,148 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:04.157 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:04.191 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:04.264 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:04.264 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:04,289 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:04,289 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:04,571 DEBUG spoon.support.StandardEnvironment - built in 282 ms
2015-03-05 19:08:04,571 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:04,571 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:04.572 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:04,572 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:04.579 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnza) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:04.581 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnza) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - lnza);
    
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:04.584 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:04.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:04.697 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:04.707 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:04.710 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:04.711 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:04.713 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:04.813 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:04.813 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (100 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:04.815 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:04.816 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:04.816 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:04.818 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:04.820 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:04.820 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:04.820 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1460
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:04.820 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:04.820 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:04.820 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1460 otherwise the patch would be "true" or "false"
19:08:04.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
19:08:04.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
19:08:04.821 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:04,821 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:04.827 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:04.850 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:04.898 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:04.898 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:04,916 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:04,916 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:05,120 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2015-03-05 19:08:05,120 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:05,120 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:05.121 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:05,121 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:05.126 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:05.127 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:05.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:05.153 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:05.210 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:05.220 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:05.224 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:05.224 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:05.227 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:05.333 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:05.334 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (106 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:05.336 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:05.336 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:05.336 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:05.338 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5847998487600455)
(-1.5707963267948966, 0.626102388510602)
(-1.5707963267948966, 0.6747462974769595)
(-1.5707963267948966, 0.7330182714354023)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.0182710978228728)
(-1.5707963267948966, 1.1989476363991851)
(-1.5707963267948966, 1.5218890565817829)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8670706954675289)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42336983445651977)
(0.0, 0.309331768444488)
(0.0, 0.2024069272109222)
(0.0, 0.10011335243372903)
19:08:05.341 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:05.341 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:05.341 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1461
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:05.341 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:05.341 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:05.342 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1461 otherwise the patch would be "true" or "false"
19:08:05.342 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
19:08:05.342 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
19:08:05.342 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:05,342 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:05.349 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:05.376 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:05.435 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:05.435 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:05,455 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:05,455 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:05,682 DEBUG spoon.support.StandardEnvironment - built in 227 ms
2015-03-05 19:08:05,682 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:05,682 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:05.683 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:05,683 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:05.689 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:05.690 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:05.693 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:05.728 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:05.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:05.816 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:05.820 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:05.820 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:05.822 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:05.954 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:05.954 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:05.957 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:05.957 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:05.957 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:05.960 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:05.963 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:05.963 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:05.963 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1462
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:05.963 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:05.963 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:05.964 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1462 otherwise the patch would be "true" or "false"
19:08:05.964 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
19:08:05.964 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
19:08:05.964 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:05,964 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:05.973 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:06.006 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:06.077 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:06.077 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:06,102 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:06,102 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:06,381 DEBUG spoon.support.StandardEnvironment - built in 279 ms
2015-03-05 19:08:06,381 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:06,381 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:06.382 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:06,382 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:06.390 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:06.391 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:06.394 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:06.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:06.508 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:06.527 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:06.531 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:06.532 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:06.534 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:06.675 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:06.675 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (141 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:06.678 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:06.678 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:06.678 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:06.680 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:06.683 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:06.683 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:06.684 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1464
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:06.684 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:06.684 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:06.684 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1464 otherwise the patch would be "true" or "false"
19:08:06.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
19:08:06.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
19:08:06.684 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:06,684 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:06.693 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:06.726 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:06.795 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:06.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:06,821 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:06,821 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,097 DEBUG spoon.support.StandardEnvironment - built in 276 ms
2015-03-05 19:08:07,097 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:07,097 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:07.098 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:07,098 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:07.106 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp)) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:07.107 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp)) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:07.111 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:07.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:07.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:07.223 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:07.226 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:07.226 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:07.228 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:07.318 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:07.318 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (90 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:07.320 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:07.320 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:07.320 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:07.322 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:07.324 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:07.324 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:07.325 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1465
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:07.325 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:07.325 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:07.325 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1465 otherwise the patch would be "true" or "false"
19:08:07.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
19:08:07.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
19:08:07.325 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:07,325 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:07.331 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:07.354 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:07.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:07.401 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,418 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,419 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,609 DEBUG spoon.support.StandardEnvironment - built in 190 ms
2015-03-05 19:08:07,610 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:07,610 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:07.610 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:07,610 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:07.615 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:07.616 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:07.619 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:07.643 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:07.696 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:07.705 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:07.709 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:07.709 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:07.711 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:07.810 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:07.811 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (99 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:07.813 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:07.813 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:07.814 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:07.815 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493060856817372)
(-1.5707963267948966, 0.5850355676728096)
(-1.5707963267948966, 0.6263814255953662)
(-1.5707963267948966, 0.67496329982219)
(-1.5707963267948966, 0.7331684170920783)
(-1.5707963267948966, 0.8047188389124149)
(-1.5707963267948966, 0.8958796173093924)
(-1.5707963267948966, 1.0184408463258845)
(-1.5707963267948966, 1.1989474604422325)
(-1.5707963267948966, 1.5222609842524406)
(NaN, NaN)
(0.0, 1.47221925497395)
(0.0, 1.098612112711157)
(0.0, 0.867300410389418)
(0.0, 0.6931470632553101)
(0.0, 0.5493060856817372)
(0.0, 0.4236488715412841)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:07.818 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:07.818 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:07.818 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1466
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:07.818 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:07.818 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:07.818 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1466 otherwise the patch would be "true" or "false"
19:08:07.818 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
19:08:07.818 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
19:08:07.818 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:07,818 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:07.825 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:07.851 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:07.903 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:07.904 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,923 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:07,923 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:08,143 DEBUG spoon.support.StandardEnvironment - built in 220 ms
2015-03-05 19:08:08,144 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:08,144 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:08.145 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:08,145 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:08.150 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:08.151 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:08.154 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:08.180 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:08.248 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:08.258 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:08.262 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:08.262 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:08.265 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.626381484247684)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:08.387 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:08.387 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (123 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:08.389 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:08.389 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:08.390 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:08.392 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:08.394 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:08.394 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:08.395 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1467
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:08.395 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:08.395 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:08.395 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1467 otherwise the patch would be "true" or "false"
19:08:08.395 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
19:08:08.395 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
19:08:08.395 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:08,395 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:08.404 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:08.434 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:08.498 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:08.498 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:08,521 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:08,522 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:08,785 DEBUG spoon.support.StandardEnvironment - built in 264 ms
2015-03-05 19:08:08,785 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:08,785 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:08.786 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:08,786 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:08.793 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + (lnm[1]) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:08.794 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + (lnm[1]) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + (lnm[1]);
    
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:08.798 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:08.833 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:08.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:08.919 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:08.922 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:08.922 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:08.925 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:09.061 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:09.061 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (136 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:09.063 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:09.064 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:09.064 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:09.066 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:09.069 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:09.069 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:09.069 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1469
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:09.069 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:09.069 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:09.069 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1469 otherwise the patch would be "true" or "false"
19:08:09.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
19:08:09.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
19:08:09.070 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:09,070 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:09.079 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:09.113 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:09.181 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:09.181 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:09,206 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:09,206 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:09,483 DEBUG spoon.support.StandardEnvironment - built in 277 ms
2015-03-05 19:08:09,484 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:09,484 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:09.485 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:09,485 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:09.501 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - (lnm[1])) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:09.502 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - (lnm[1])) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - (lnm[1]));
    
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:09.505 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:09.538 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:09.614 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:09.623 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:09.627 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:09.627 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:09.630 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340548)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340548)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:09.762 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:09.763 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:09.765 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:09.765 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:09.765 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:09.768 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:09.771 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:09.771 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:09.771 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1470
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:09.771 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:09.771 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:09.771 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1470 otherwise the patch would be "true" or "false"
19:08:09.771 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
19:08:09.771 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
19:08:09.771 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:09,771 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:09.780 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:09.814 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:09.881 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:09.882 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:09,907 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:09,907 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:10,177 DEBUG spoon.support.StandardEnvironment - built in 270 ms
2015-03-05 19:08:10,177 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:10,177 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:10.178 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:10,178 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:10.185 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:10.186 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:10.190 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:10.225 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:10.300 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:10.309 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:10.313 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:10.313 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:10.316 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:10.447 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:10.447 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (132 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:10.449 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:10.449 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:10.450 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:10.452 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061532987715)
(-1.5707963267948966, 0.585035632560249)
(-1.5707963267948966, 0.6263814826898756)
(-1.5707963267948966, 0.6749633349933412)
(-1.5707963267948966, 0.7331685326816989)
(-1.5707963267948966, 0.8047189544466259)
(-1.5707963267948966, 0.8958797435787442)
(-1.5707963267948966, 1.0184409525031513)
(-1.5707963267948966, 1.1989476354162578)
(-1.5707963267948966, 1.522261219206322)
(NaN, NaN)
(0.0, 1.4722194931561)
(0.0, 1.0986122907440548)
(0.0, 0.8673005350204327)
(0.0, 0.6931471805599453)
(0.0, 0.5493061532987715)
(0.0, 0.423648934572238)
(0.0, 0.30951961047023246)
(0.0, 0.20273253988522838)
(0.0, 0.10033534247008372)
19:08:10.455 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:10.455 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:10.455 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1471
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:10.455 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:10.455 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:10.455 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1471 otherwise the patch would be "true" or "false"
19:08:10.455 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
19:08:10.455 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
19:08:10.455 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:10,456 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:10.465 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:10.498 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:10.566 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:10.566 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:10,591 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:10,591 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:10,862 DEBUG spoon.support.StandardEnvironment - built in 271 ms
2015-03-05 19:08:10,862 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:10,862 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:10.863 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:10,863 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:10.870 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:10.872 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:10.875 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:10.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:10.985 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:10.994 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:10.998 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:10.998 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:11.001 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:11.132 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:11.132 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (131 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:11.135 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:11.135 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:11.135 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:11.137 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:11.140 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:11.140 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:11.140 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1472
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:11.141 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:11.141 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:11.141 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1472 otherwise the patch would be "true" or "false"
19:08:11.141 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
19:08:11.141 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
19:08:11.141 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:11,141 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:11.150 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:11.185 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:11.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:11.266 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:11,291 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:11,292 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:11,562 DEBUG spoon.support.StandardEnvironment - built in 271 ms
2015-03-05 19:08:11,562 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:11,562 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:11.563 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:11,563 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:11.570 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnzb ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:11.572 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnzb ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + lnzb;
    
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:11.575 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:11.609 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:11.684 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:11.694 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:11.698 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:11.698 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:11.701 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:11.834 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:11.834 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:11.836 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:11.836 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:11.837 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:11.839 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:11.842 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:11.842 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:11.842 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1474
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:11.842 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:11.842 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:11.842 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1474 otherwise the patch would be "true" or "false"
19:08:11.842 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
19:08:11.842 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
19:08:11.842 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:11,842 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:11.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:11.881 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:11.943 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:11.943 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:11,967 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:11,967 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:12,219 DEBUG spoon.support.StandardEnvironment - built in 252 ms
2015-03-05 19:08:12,219 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:12,219 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:12.220 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:12,220 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:12.228 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnzb) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:12.229 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnzb) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - lnzb);
    
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:12.233 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:12.267 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:12.342 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:12.352 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:12.355 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:12.355 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:12.358 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170503)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.30951960420311164)
(0.0, 0.20273255405408214)
(0.0, 0.10033534773107562)
19:08:12.492 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:12.492 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (134 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:12.494 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:12.494 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:12.495 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:12.497 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:12.500 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:12.500 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:12.500 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1475
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:12.500 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:12.500 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:12.500 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1475 otherwise the patch would be "true" or "false"
19:08:12.500 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
19:08:12.500 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
19:08:12.501 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:12,501 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:12.510 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:12.542 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:12.609 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:12.609 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:12,634 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:12,634 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:12,915 DEBUG spoon.support.StandardEnvironment - built in 281 ms
2015-03-05 19:08:12,915 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:12,915 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:12.916 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:12,916 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:12.924 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:12.925 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:12.928 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:12.962 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:13.036 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:13.046 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:13.049 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:13.050 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:13.052 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:13.186 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:13.186 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (134 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:13.189 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:13.189 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:13.189 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:13.192 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:13.195 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:13.195 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:13.195 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1476
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:13.195 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:13.195 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:13.195 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1476 otherwise the patch would be "true" or "false"
19:08:13.195 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
19:08:13.195 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
19:08:13.195 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:13,196 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:13.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:13.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:13.303 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:13.303 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:13,328 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:13,328 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:13,597 DEBUG spoon.support.StandardEnvironment - built in 269 ms
2015-03-05 19:08:13,597 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:13,597 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:13.598 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:13,598 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:13.606 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:13.607 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
19:08:13.610 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:13.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:13.710 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:13.720 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:13.723 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:13.724 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:13.725 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:13.814 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:13.814 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (89 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:13.816 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:13.816 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:13.816 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:13.818 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:13.820 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:13.820 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:13.820 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1477
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:13.821 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:13.821 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:13.821 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1477 otherwise the patch would be "true" or "false"
19:08:13.821 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
19:08:13.821 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
19:08:13.821 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:13,821 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:13.827 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:13.849 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:13.894 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:13.895 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:13,912 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:13,912 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:14,105 DEBUG spoon.support.StandardEnvironment - built in 193 ms
2015-03-05 19:08:14,105 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:14,105 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:14.106 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:14,106 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:14.110 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (hiPrec != null) {
    hiPrec[0] = a;
    hiPrec[1] = b;
} 
19:08:14.113 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:14.136 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:14.186 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:14.196 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:14.200 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:14.200 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:14.202 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
19:08:14.305 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:14.305 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (103 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.util.FastMath.log(FastMath.java:1177)
    at org.apache.commons.math.util.FastMath.log(FastMath.java:994)
    at org.apache.commons.math.complex.Complex.log(Complex.java:704)
    at org.apache.commons.math.complex.Complex.atan(Complex.java:545)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:577)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:14.308 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:14.308 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:14.308 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:14.311 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:14.313 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
19:08:14.314 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:14.314 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1479
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
19:08:14.314 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:14.314 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
19:08:14.314 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1479 otherwise the patch would be "true" or "false"
19:08:14.314 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
19:08:14.314 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
19:08:14.314 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:14,314 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:14.322 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:14.348 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:14.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:14.401 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1484.
19:08:14.401 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
19:08:14.401 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
19:08:14.401 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:14,401 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:14.409 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:14.435 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:14.489 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:14.489 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1292.
19:08:14.489 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
19:08:14.489 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1294, Suspiciousness=0.006246584832499385]
19:08:14.489 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:14,489 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
19:08:14.496 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:14.523 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:14.576 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:14.576 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:14,597 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:14,597 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 19:08:14,832 DEBUG spoon.support.StandardEnvironment - built in 235 ms
2015-03-05 19:08:14,832 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 19:08:14,832 DEBUG spoon.support.StandardEnvironment - built in 0 ms
19:08:14.833 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 19:08:14,833 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
19:08:14.839 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((bits & 9218868437227405312L) == 0) {
    if (x == 0) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
        } 
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    bits <<= 1;
    while ((bits & 4503599627370496L) == 0) {
        exp--;
        bits <<= 1;
    }
} 
19:08:14.842 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
19:08:14.874 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
19:08:14.941 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
19:08:14.951 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:14.955 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
19:08:14.955 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:14.957 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
19:08:15.078 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
19:08:15.078 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (121 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
19:08:15.081 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
19:08:15.081 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
19:08:15.081 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
19:08:15.083 [Thread-250] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.34657359027997264)
(-1.5707963267948966, 0.44690893801104825)
(-1.5707963267948966, 0.5493061443340547)
(-1.5707963267948966, 0.6560931944830841)
(-1.5707963267948966, -0.20273255405408264)
(-1.5707963267948966, 0.34657359027997264)
(-1.5707963267948966, 0.6931471805599455)
(-1.5707963267948966, 0.9962150823451029)
(-1.5707963267948966, 0.8958797346140281)
(-1.5707963267948966, 1.1512925464970212)
(NaN, NaN)
(0.0, 0.8958797346140281)
(0.0, 0.34657359027997353)
(0.0, 0.6019864021629678)
20:08:15.082 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
20:08:15.084 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
20:08:15.084 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:15,084 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:15.090 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:15.113 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:15.176 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:15.177 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:15,203 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:15,203 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:15,482 DEBUG spoon.support.StandardEnvironment - built in 279 ms
2015-03-05 20:08:15,482 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 20:08:15,483 DEBUG spoon.support.StandardEnvironment - built in 0 ms
20:08:15.483 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:15,483 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
20:08:15.490 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((exp == (-1)) || (exp == 0)) {
    if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
        double xa = x - 1.0;
        double xb = (xa - x) + 1.0;
        double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (xa + tmp) - tmp;
        double ab = xa - aa;
        xa = aa;
        xb = ab;
        double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        return ya + yb;
    } 
} 
20:08:15.494 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:15.529 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:15.603 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:15.611 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:15.614 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
20:08:15.614 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:15.616 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
20:08:15.751 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
20:08:15.752 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (135 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:15.753 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:15.754 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
20:08:15.754 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:15.756 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
20:08:15.759 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
20:08:15.759 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:15.759 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1314
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
20:08:15.759 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:15.759 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:15.759 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1314 otherwise the patch would be "true" or "false"
20:08:15.759 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
20:08:15.759 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
20:08:15.760 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:15,760 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:15.769 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:15.802 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:15.868 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:15.868 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1269.
20:08:15.868 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
20:08:15.868 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
20:08:15.868 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:15,868 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:15.878 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:15.911 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:15.977 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:15.977 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,003 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,003 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,274 DEBUG spoon.support.StandardEnvironment - built in 271 ms
2015-03-05 20:08:16,275 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 20:08:16,275 DEBUG spoon.support.StandardEnvironment - built in 0 ms
20:08:16.276 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:16,276 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
20:08:16.282 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((bits & -9223372036854775808L) != 0) || (x != x)) {
    if (x != 0.0) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.NaN;
        } 
        return java.lang.Double.NaN;
    } 
} 
20:08:16.286 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:16.320 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:16.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:16.378 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:16.381 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
20:08:16.381 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:16.383 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
20:08:16.471 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
20:08:16.472 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (89 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:16.473 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:16.474 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
20:08:16.474 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:16.475 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
20:08:16.477 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
20:08:16.477 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:16.478 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1272
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
20:08:16.478 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:16.478 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:16.478 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1272 otherwise the patch would be "true" or "false"
20:08:16.478 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
20:08:16.478 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
20:08:16.478 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:16,478 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:16.484 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:16.517 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:16.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:16.562 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,580 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,580 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:16,768 DEBUG spoon.support.StandardEnvironment - built in 188 ms
2015-03-05 20:08:16,768 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 20:08:16,768 DEBUG spoon.support.StandardEnvironment - built in 0 ms
20:08:16.769 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:16,769 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
20:08:16.773 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (x == (java.lang.Double.POSITIVE_INFINITY)) {
    if (hiPrec != null) {
        hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
    } 
    return java.lang.Double.POSITIVE_INFINITY;
} 
20:08:16.776 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:16.801 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:16.856 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:16.863 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:16.866 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
20:08:16.866 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:16.868 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
20:08:16.971 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
20:08:16.972 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (104 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:16.973 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:16.974 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
20:08:16.974 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:16.976 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
20:08:16.978 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
20:08:16.978 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:16.978 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1283
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
20:08:16.978 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:16.978 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:16.978 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1283 otherwise the patch would be "true" or "false"
20:08:16.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
20:08:16.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
20:08:16.978 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:16,978 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:16.986 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:17.011 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:17.061 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:17.061 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:17,081 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:17,081 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-05 20:08:17,286 DEBUG spoon.support.StandardEnvironment - built in 205 ms
2015-03-05 20:08:17,287 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-05 20:08:17,287 DEBUG spoon.support.StandardEnvironment - built in 0 ms
20:08:17.287 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:17,288 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
20:08:17.292 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (x == 0) {
    return java.lang.Double.NEGATIVE_INFINITY;
} 
20:08:17.296 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:17.324 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:17.396 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:17.405 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:17.408 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
20:08:17.408 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:17.410 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
20:08:17.499 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
20:08:17.499 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (89 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:17.501 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
20:08:17.501 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
20:08:17.501 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
20:08:17.503 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
20:08:17.505 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
20:08:17.505 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
20:08:17.505 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1266
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
20:08:17.505 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:17.505 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
20:08:17.505 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1266 otherwise the patch would be "true" or "false"
20:08:17.505 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
20:08:17.505 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
20:08:17.505 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:17,506 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
20:08:17.513 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
20:08:17.542 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
20:08:17.598 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
20:08:17.598 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:302.
20:08:17.598 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
20:08:17.598 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=3410, Suspiciousness=0.004481377120091212]
20:08:17.598 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-05 20:08:17,598 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
----INFORMATION----
Nb Statements Analyzed : 113
Nb Statements with Angelic Value Found : 0
Nopol Execution time : 3973561ms
