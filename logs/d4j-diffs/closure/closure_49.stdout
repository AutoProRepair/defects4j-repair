com.google.javascript.jscomp.MakeDeclaredNamesUnique

91,102c91
<     if (declarationRoot.getType() == Token.FUNCTION) {
<       // Add the function parameters
<       Node fnParams = declarationRoot.getFirstChild().getNext();
<       for (Node c = fnParams.getFirstChild(); c != null; c = c.getNext()) {
<         String name = c.getString();
<         renamer.addDeclaredName(name);
<       }
< 
<       // Add the function body declarations
<       Node functionBody = declarationRoot.getLastChild();
<       findDeclaredNames(functionBody, null, renamer);
<     } else {
---
>     if (declarationRoot.getType() != Token.FUNCTION) {
136a126,142
>       case Token.LP: {
>           Renamer renamer = nameStack.peek().forChildScope();
> 
>           // Add the function parameters
>           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
>             String name = c.getString();
>             renamer.addDeclaredName(name);
>           }
> 
>           // Add the function body declarations
>           Node functionBody = n.getNext();
>           findDeclaredNames(functionBody, null, renamer);
> 
>           nameStack.push(renamer);
>         }
>         break;
> 
168a175,176
>         // Remove the function body scope
>         nameStack.pop();
172a181,186
>       case Token.LP:
>         // Note: The parameters and function body variables live in the
>         // same scope, we introduce the scope when in the "shouldTraverse"
>         // visit of LP, but remove it when when we exit the function above.
>         break;
> 


