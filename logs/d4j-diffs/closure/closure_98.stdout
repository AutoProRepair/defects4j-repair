com.google.javascript.jscomp.ReferenceCollectingCallback

355c355,378
<       boolean assigned = false;
---
>       Reference ref = getOneAndOnlyAssignment();
>       if (ref == null) {
>         return false;
>       }
> 
>       // Make sure this assignment is not in a loop.
>       for (BasicBlock block = ref.getBasicBlock();
>            block != null; block = block.getParent()) {
>         if (block.isFunction) {
>           break;
>         } else if (block.isLoop) {
>           return false;
>         }
>       }
> 
>       return true;
>     }
> 
>     /**
>      * @return The one and only assignment. Returns if there are 0 or 2+
>      *    assignments.
>      */
>     private Reference getOneAndOnlyAssignment() {
>       Reference assignment = null;
360,361c383,384
<           if (!assigned) {
<             assigned = true;
---
>           if (assignment == null) {
>             assignment = ref;
363c386
<             return false;
---
>             return null;
367c390
<       return assigned;
---
>       return assignment;
527a551,560
>      * Whether this block denotes a function scope.
>      */
>     private final boolean isFunction;
> 
>     /**
>      * Whether this block denotes a loop.
>      */
>     private final boolean isLoop;
> 
>     /**
536a570,580
> 
>       this.isFunction = root.getType() == Token.FUNCTION;
> 
>       if (root.getParent() != null) {
>         int pType = root.getParent().getType();
>         this.isLoop = pType == Token.DO ||
>             pType == Token.WHILE ||
>             pType == Token.FOR;
>       } else {
>         this.isLoop = false;
>       }


