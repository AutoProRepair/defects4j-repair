com.google.javascript.jscomp.TypeValidator

366,370d365
<       if (bothIntrinsics(rightType, leftType)) {
<         // We have a superior warning for this mistake, which gives you
<         // the line numbers of both types.
<         registerMismatch(rightType, leftType, null);
<       } else {
387d381
<       }
407,411d400
<       if (bothIntrinsics(rightType, leftType)) {
<         // We have a superior warning for this mistake, which gives you
<         // the line numbers of both types.
<         registerMismatch(rightType, leftType, null);
<       } else {
413d401
<       }
419,423d406
<   private boolean bothIntrinsics(JSType rightType, JSType leftType) {
<     return (leftType.isConstructor() || leftType.isEnumType()) &&
<         (rightType.isConstructor() || rightType.isEnumType());
<   }
< 


com.google.javascript.rhino.jstype.FunctionType

1009a1010
> 
1014,1015c1015
<       // this as an error. It also screws up out standard method
<       // for aliasing constructors. Let's punt on all this for now.
---
>       // this as an error. Let's punt on all this for now.
1018,1020d1017
<         // If either one of these is a ctor, skip 'this' checking.
<         isConstructor() || other.isConstructor() ||
< 


