org.apache.commons.math.distribution.NormalDistributionImpl

116a117,118
>      * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
>      * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
120,122c122
<      * @throws MathException if the algorithm fails to converge; unless
<      * {@code x} is more than 20 standard deviations from the mean, in which
<      * case the convergence exception is caught and 0 or 1 is returned.
---
>      * @throws MathException if the algorithm fails to converge
125,135c125,127
<         try {
<             return 0.5 * (1.0 + Erf.erf((x - mean) /
<                     (standardDeviation * FastMath.sqrt(2.0))));
<         } catch (MaxIterationsExceededException ex) {
<             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
<                 return 0;
<             } else if (x > (mean + 20 * standardDeviation)) {
<                 return 1;
<             } else {
<                 throw ex;
<             }
---
>         final double dev = x - mean;
>         if (FastMath.abs(dev) > 40 * standardDeviation) { 
>             return dev < 0 ? 0.0d : 1.0d;
136a129,130
>         return 0.5 * (1.0 + Erf.erf((dev) /
>                     (standardDeviation * FastMath.sqrt(2.0))));


