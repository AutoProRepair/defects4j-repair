org.apache.commons.math3.optimization.univariate.BrentOptimizer

230c230
<                         return current;
---
>                         return best(current, previous, isMinim);
267c267
<                 return current;
---
>                 return best(current, previous, isMinim);
271a272,298
> 
>     /**
>      * Selects the best of two points.
>      *
>      * @param a Point and value.
>      * @param b Point and value.
>      * @param isMinim {@code true} if the selected point must be the one with
>      * the lowest value.
>      * @return the best point, or {@code null} if {@code a} and {@code b} are
>      * both {@code null}.
>      */
>     private UnivariatePointValuePair best(UnivariatePointValuePair a,
>                                           UnivariatePointValuePair b,
>                                           boolean isMinim) {
>         if (a == null) {
>             return b;
>         }
>         if (b == null) {
>             return a;
>         }
> 
>         if (isMinim) {
>             return a.getValue() < b.getValue() ? a : b;
>         } else {
>             return a.getValue() > b.getValue() ? a : b;
>         }
>     }


