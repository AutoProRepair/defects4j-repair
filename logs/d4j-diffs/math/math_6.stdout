org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer

322d321
<         int iter = 0;
325c324,325
<             ++iter;
---
>             incrementIterationCount();
> 
489c489
<                         if (checker.converged(iter, previous, current)) {
---
>                         if (checker.converged(getIterations(), previous, current)) {


org.apache.commons.math3.optim.BaseOptimizer

51c51
<         iterations = new Incrementor(0, new MaxIterCallback());
---
>         iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());


org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer

387a388,389
>             incrementIterationCount();
> 


org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer

106d105
<         int iter = 0;
108c107
<             ++iter;
---
>             incrementIterationCount();
160c159
<                 converged = checker.converged(iter, previous, current);
---
>                 converged = checker.converged(getIterations(), previous, current);


org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer

158c158
<             if (iteration > 0) {
---
>             if (getIterations() > 0) {
174c174,175
<             ++iteration;
---
> 
>             incrementIterationCount();


org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer

214d213
<         int iter = 0;
217c216
<             ++iter;
---
>             incrementIterationCount();
223c222
<                 if (checker.converged(iter, previous, current)) {
---
>                 if (checker.converged(getIterations(), previous, current)) {
277c276
<             if (iter % n == 0 ||
---
>             if (getIterations() % n == 0 ||


org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer

191d190
<         int iter = 0;
193c192
<             ++iter;
---
>             incrementIterationCount();
227c226
<                     stop = checker.converged(iter, previous, current);
---
>                     stop = checker.converged(getIterations(), previous, current);


