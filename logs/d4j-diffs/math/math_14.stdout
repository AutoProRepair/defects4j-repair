org.apache.commons.math3.optim.nonlinear.vector.Weight

21c21
< import org.apache.commons.math3.linear.MatrixUtils;
---
> import org.apache.commons.math3.linear.DiagonalMatrix;
43,46c43
<         weightMatrix = MatrixUtils.createRealMatrix(dim, dim);
<         for (int i = 0; i < dim; i++) {
<             weightMatrix.setEntry(i, i, weight[i]);
<         }
---
>         weightMatrix = new DiagonalMatrix(weight);


org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer

266a267,274
>         if (m instanceof DiagonalMatrix) {
>             final int dim = m.getRowDimension();
>             final RealMatrix sqrtM = new DiagonalMatrix(dim);
>             for (int i = 0; i < dim; i++) {
>                 sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
>             }
>             return sqrtM;
>         } else {
269a278
>     }


