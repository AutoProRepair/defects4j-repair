#!/bin/bash

export PATH="~/defects4j/framework/bin:$PATH"

cd ~/defects4j-nopol/logs/d4j-tests/lang/

echo '# Lang - Defects4j tests' > README.md
echo '| #Bug | Nb. tests run | Nb. failures | Nb. errors | Exec. time |' >> README.md
echo '|------|---------------|--------------|------------|------------|' >> README.md

for bug in `seq 1 65`
do
  echo "Starting tests Lang ${bug} ..."

  exec 6<&1
  #exec 7<&2

  exec 1> ~/defects4j-nopol/logs/d4j-tests/lang/lang_${bug}.stdout
  #exec 2> ~/defects4j-nopol/logs/d4j-tests/lang/lang_${bug}.stderr

  defects4j checkout -p Lang -v ${bug}b -w /tmp/lang_${bug}

  cd /tmp/lang_${bug}/
  defects4j compile
  defects4j test
  cd /tmp/
  rm -rf lang_${bug}/

  exec 1<&6 6<&-
  #exec 2<&7 7<&-

  cd ~/defects4j-nopol/logs/d4j-tests/lang/
  
  grep "Tests run" lang_${bug}.stdout > lang_${bug}_grep.stdout
  cut -f 1 -d "," lang_${bug}_grep.stdout > lang_${bug}_cut_1.stdout
  cut -f 2 -d ":" lang_${bug}_cut_1.stdout > lang_${bug}_cut_2.stdout
  testsRun=`sum=0; while read num; do sum=$(($sum + $num)); done < lang_${bug}_cut_2.stdout ; echo $sum`
  
  cut -f 2 -d "," lang_${bug}_grep.stdout > lang_${bug}_cut_1.stdout
  cut -f 2 -d ":" lang_${bug}_cut_1.stdout > lang_${bug}_cut_2.stdout
  failures=`sum=0; while read num; do sum=$(($sum + $num)); done < lang_${bug}_cut_2.stdout ; echo $sum`  
  
  cut -f 3 -d "," lang_${bug}_grep.stdout > lang_${bug}_cut_1.stdout
  cut -f 2 -d ":" lang_${bug}_cut_1.stdout > lang_${bug}_cut_2.stdout
  errors=`sum=0; while read num; do sum=$(($sum + $num)); done < lang_${bug}_cut_2.stdout ; echo $sum`

  echo "" >> lang_${bug}.stdout
  echo "Total tests run: $testsRun" >> lang_${bug}.stdout
  echo "Total failures: $failures" >> lang_${bug}.stdout
  echo "Total errors: $errors" >> lang_${bug}.stdout

  rm lang_${bug}_grep.stdout
  rm lang_${bug}_cut_1.stdout
  rm lang_${bug}_cut_2.stdout
  
  testsTime=`grep 'Total time:' lang_${bug}.stdout | tail -1 | cut -f 2 -d ':'`
  
  echo "| ${bug} | ${testsRun} | ${failures} | ${errors} | ${testsTime} |" >> README.md

done

echo 'Done.'

