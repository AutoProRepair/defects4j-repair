#!/bin/bash

#for bug in $(seq 1 65); do defects4j checkout -p Lang -v ${bug}b -w /tmp/lang_${bug}; done

export PATH="~/defects4j/framework/bin:$PATH"

cd ~/defects4j-nopol/logs/d4j-tests/lang/

echo '# Lang - Defects4j tests' > README.md
echo '| #Bug | Nb. tests run | Nb. failures | Nb. errors | Exec. time |' >> README.md
echo '|------|---------------|--------------|------------|------------|' >> README.md

min=1
max=65

if [[ $1 ]]; then
  if [[ $1 -gt 0 ]]; then
    if [[ $1 -lt 66 ]]; then
      min=$1
      max=$1
    fi
  fi
fi

for bug in `seq $min $max`
do
  echo "Starting tests Lang ${bug} ..."

  exec 6<&1
  #exec 7<&2

  exec 1> ~/defects4j-nopol/logs/d4j-tests/lang/lang_${bug}.stdout
  #exec 2> ~/defects4j-nopol/logs/d4j-tests/lang/lang_${bug}.stderr

  #defects4j checkout -p Lang -v ${bug}b -w /tmp/lang_${bug}

  cd /tmp/lang_${bug}/
  defects4j compile
  defects4j test
  cd /tmp/
  rm -rf lang_${bug}/

  exec 1<&6 6<&-
  #exec 2<&7 7<&-

  cd ~/defects4j-nopol/logs/d4j-tests/lang/
  
  grep "Failing tests" lang_${bug}.stdout > lang_${bug}_grep.stdout
  failures=`cut -f 2 -d ":" lang_${bug}_grep.stdout`

  rm lang_${bug}_grep.stdout
  
  testsTime=`grep 'Total time:' lang_${bug}.stdout | tail -1 | cut -f 2 -d ':'`
  
  echo "| ${bug} | unknown | ${failures} | none | ${testsTime} |" >> README.md

done

echo 'Done.'

