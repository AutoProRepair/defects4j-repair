#!/bin/bash

export PATH="~/defects4j/framework/bin:$PATH"

cd ~/defects4j-nopol/logs/d4j-tests/time/

echo '# Time - Defects4j tests' > README.md
echo '| #Bug | Nb. tests run | Nb. failures | Nb. errors | Exec. time |' >> README.md
echo '|------|---------------|--------------|------------|------------|' >> README.md

min=1
max=27

if [[ $1 ]]; then
  if [[ $1 -gt 0 ]]; then
    if [[ $1 -lt 28 ]]; then
      min=$1
      max=$1
    fi
  fi
fi

for bug in `seq $min $max`
do
  echo "Starting tests Time ${bug} ..."

  exec 6<&1
  #exec 7<&2

  exec 1> ~/defects4j-nopol/logs/d4j-tests/time/time_${bug}.stdout
  #exec 2> ~/defects4j-nopol/logs/d4j-tests/time/time_${bug}.stderr

  #defects4j checkout -p Time -v ${bug}b -w /tmp/time_${bug}

  cd /tmp/time_${bug}/
  defects4j compile
  defects4j test
  cd /tmp/
  rm -rf time_${bug}/

  exec 1<&6 6<&-
  #exec 2<&7 7<&-

  cd ~/defects4j-nopol/logs/d4j-tests/time/
  
  grep "Tests run" time_${bug}.stdout > time_${bug}_grep.stdout
  cut -f 1 -d "," time_${bug}_grep.stdout > time_${bug}_cut_1.stdout
  cut -f 2 -d ":" time_${bug}_cut_1.stdout > time_${bug}_cut_2.stdout
  testsRun=`sum=0; while read num; do sum=$(($sum + $num)); done < time_${bug}_cut_2.stdout ; echo $sum`
  
  cut -f 2 -d "," time_${bug}_grep.stdout > time_${bug}_cut_1.stdout
  cut -f 2 -d ":" time_${bug}_cut_1.stdout > time_${bug}_cut_2.stdout
  failures=`sum=0; while read num; do sum=$(($sum + $num)); done < time_${bug}_cut_2.stdout ; echo $sum`  
  
  cut -f 3 -d "," time_${bug}_grep.stdout > time_${bug}_cut_1.stdout
  cut -f 2 -d ":" time_${bug}_cut_1.stdout > time_${bug}_cut_2.stdout
  errors=`sum=0; while read num; do sum=$(($sum + $num)); done < time_${bug}_cut_2.stdout ; echo $sum`

  echo "" >> time_${bug}.stdout
  echo "Total tests run: $testsRun" >> time_${bug}.stdout
  echo "Total failures: $failures" >> time_${bug}.stdout
  echo "Total errors: $errors" >> time_${bug}.stdout

  rm time_${bug}_grep.stdout
  rm time_${bug}_cut_1.stdout
  rm time_${bug}_cut_2.stdout
  
  testsTime=`grep 'Total time:' time_${bug}.stdout | tail -1 | cut -f 2 -d ':'`
  
  echo "| ${bug} | ${testsRun} | ${failures} | ${errors} | ${testsTime} |" >> README.md

done

echo 'Done.'

